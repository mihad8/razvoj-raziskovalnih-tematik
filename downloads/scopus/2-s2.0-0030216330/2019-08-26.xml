<abstracts-retrieval-response xmlns="http://www.elsevier.com/xml/svapi/abstract/dtd" xmlns:dn="http://www.elsevier.com/xml/svapi/abstract/dtd" xmlns:ait="http://www.elsevier.com/xml/ani/ait" xmlns:ce="http://www.elsevier.com/xml/ani/common" xmlns:cto="http://www.elsevier.com/xml/cto/dtd" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:prism="http://prismstandard.org/namespaces/basic/2.0/" xmlns:xocs="http://www.elsevier.com/xml/xocs/dtd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><coredata><prism:url>https://api.elsevier.com/content/abstract/scopus_id/0030216330</prism:url><dc:identifier>SCOPUS_ID:0030216330</dc:identifier><eid>2-s2.0-0030216330</eid><pii>167819196000191</pii><prism:doi>10.1016/0167-8191(96)00019-1</prism:doi><dc:title>Improved schemes for mapping arbitrary algorithms onto processor meshes</dc:title><prism:aggregationType>Journal</prism:aggregationType><srctype>j</srctype><subtype>ar</subtype><subtypeDescription>Article</subtypeDescription><citedby-count>3</citedby-count><prism:publicationName>Parallel Computing</prism:publicationName><dc:publisher>Elsevier</dc:publisher><source-id>26138</source-id><prism:issn>01678191</prism:issn><prism:volume>22</prism:volume><prism:issueIdentifier>5</prism:issueIdentifier><prism:startingPage>701</prism:startingPage><prism:endingPage>724</prism:endingPage><prism:pageRange>701-724</prism:pageRange><prism:coverDate>1996-01-01</prism:coverDate><openaccess>0</openaccess><openaccessFlag>false</openaccessFlag><dc:creator><author seq="1" auid="55947972500"><ce:initials>B.</ce:initials><ce:indexed-name>Robic B.</ce:indexed-name><ce:surname>Robič</ce:surname><ce:given-name>Borut</ce:given-name><preferred-name><ce:initials>B.</ce:initials><ce:indexed-name>Robič B.</ce:indexed-name><ce:surname>Robič</ce:surname><ce:given-name>Borut</ce:given-name></preferred-name><author-url>https://api.elsevier.com/content/author/author_id/55947972500</author-url><affiliation id="60023955" href="https://api.elsevier.com/content/affiliation/affiliation_id/60023955"/><affiliation id="60031106" href="https://api.elsevier.com/content/affiliation/affiliation_id/60031106"/></author></dc:creator><dc:description><abstract xmlns="" original="y" xml:lang="eng"><ce:para>We address the problem of efficient schemes for mapping arbitrary parallel algorithms onto distributed memory message passing multiprocessors with mesh topologies. We analyze a particular mapping scheme, find the reasons for its low efficiency, and show that mapped algorithms tend to be both wider and higher than necessary. As a result, they generally execute too slow while at the same time occupying an excessive number of processors. Two approaches to the improvement of the scheme are presented, one direct, and the other indirect. In the direct approach, we describe four nontrivial improvements of the scheme but also prove their NP-completeness. In contrast, in the indirect approach the original scheme is followed by a refinement procedure that incrementally improves the mapped algorithms. We describe four different heuristic refinement procedures. Experimental results show that the indirect approach offers a 51% saving in processor resources and, at the same time, a 36% saving in execution time, on average.</ce:para></abstract></dc:description><link href="https://api.elsevier.com/content/abstract/scopus_id/0030216330" rel="self"/><link href="https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&amp;scp=0030216330&amp;origin=inward" rel="scopus"/><link href="https://www.scopus.com/inward/citedby.uri?partnerID=HzOxMe3b&amp;scp=0030216330&amp;origin=inward" rel="scopus-citedby"/></coredata><affiliation id="60031106" href="https://api.elsevier.com/content/affiliation/affiliation_id/60031106"><affilname>University of Ljubljana</affilname><affiliation-city>Ljubljana</affiliation-city><affiliation-country>Slovenia</affiliation-country></affiliation><affiliation id="60023955" href="https://api.elsevier.com/content/affiliation/affiliation_id/60023955"><affilname>Jozef Stefan Institute</affilname><affiliation-city>Ljubljana</affiliation-city><affiliation-country>Slovenia</affiliation-country></affiliation><authors><author seq="1" auid="55947972500"><ce:initials>B.</ce:initials><ce:indexed-name>Robic B.</ce:indexed-name><ce:surname>Robič</ce:surname><ce:given-name>Borut</ce:given-name><preferred-name><ce:initials>B.</ce:initials><ce:indexed-name>Robič B.</ce:indexed-name><ce:surname>Robič</ce:surname><ce:given-name>Borut</ce:given-name></preferred-name><author-url>https://api.elsevier.com/content/author/author_id/55947972500</author-url><affiliation id="60023955" href="https://api.elsevier.com/content/affiliation/affiliation_id/60023955"/><affiliation id="60031106" href="https://api.elsevier.com/content/affiliation/affiliation_id/60031106"/></author><author seq="2" auid="6507352140"><ce:initials>B.</ce:initials><ce:indexed-name>Vilfan B.</ce:indexed-name><ce:surname>Vilfan</ce:surname><ce:given-name>Boštjan</ce:given-name><preferred-name><ce:initials>B.</ce:initials><ce:indexed-name>Vilfan B.</ce:indexed-name><ce:surname>Vilfan</ce:surname><ce:given-name>Boštjan</ce:given-name></preferred-name><author-url>https://api.elsevier.com/content/author/author_id/6507352140</author-url><affiliation id="60031106" href="https://api.elsevier.com/content/affiliation/affiliation_id/60031106"/></author></authors><language xml:lang="eng"/><authkeywords><author-keyword>Combinatorial optimization</author-keyword><author-keyword>Distributed memory message passing multiprocessor</author-keyword><author-keyword>Embedding</author-keyword><author-keyword>Heuristic algorithm</author-keyword><author-keyword>Mapping</author-keyword><author-keyword>Performance optimization</author-keyword><author-keyword>Regular topology</author-keyword></authkeywords><idxterms><mainterm weight="a" candidate="n">Heuristic refinement procedure</mainterm><mainterm weight="a" candidate="n">Mesh topologies</mainterm><mainterm weight="a" candidate="n">Message passing</mainterm></idxterms><subject-areas><subject-area code="1712" abbrev="COMP">Software</subject-area><subject-area code="2614" abbrev="MATH">Theoretical Computer Science</subject-area><subject-area code="1708" abbrev="COMP">Hardware and Architecture</subject-area><subject-area code="1705" abbrev="COMP">Computer Networks and Communications</subject-area><subject-area code="1704" abbrev="COMP">Computer Graphics and Computer-Aided Design</subject-area><subject-area code="1702" abbrev="COMP">Artificial Intelligence</subject-area></subject-areas><item xmlns=""><xocs:meta><xocs:funding-list has-funding-info="1" pui-match="primary"><xocs:funding-source-document source-document-type="pii">0167819196000191</xocs:funding-source-document><xocs:funding-addon-generated-timestamp>2019-03-30T04:34:28Z</xocs:funding-addon-generated-timestamp><xocs:funding-addon-type>http://vtw.elsevier.com/data/voc/AddOnTypes/50.7/nlp</xocs:funding-addon-type><xocs:funding><xocs:funding-agency-matched-string>Ministry of Science and Technology Slovenia</xocs:funding-agency-matched-string><xocs:funding-id>52-7648</xocs:funding-id><xocs:funding-agency>Ministry of Education, Science and Technology</xocs:funding-agency><xocs:funding-agency-id>http://data.elsevier.com/vocabulary/SciValFunders/501100004085</xocs:funding-agency-id><xocs:funding-agency-country>http://sws.geonames.org/1835841/</xocs:funding-agency-country></xocs:funding><xocs:funding-text>* Corresponding author. Email: borut.robic@ijs.si. ’ The research was supported in part by the Ministry of Science and Technology Slovenia under grant 52-7648.</xocs:funding-text></xocs:funding-list></xocs:meta><ait:process-info><ait:date-delivered year="2019" month="03" day="14" timestamp="2019-03-14T16:37:23.000023-04:00"/><ait:date-sort year="1996" month="01" day="01"/><ait:status type="core" state="update" stage="S300"/></ait:process-info><bibrecord><item-info><copyright type="Elsevier">Copyright 2018 Elsevier B.V., All rights reserved.</copyright><itemidlist><ce:pii>167819196000191</ce:pii><ce:doi>10.1016/0167-8191(96)00019-1</ce:doi><itemid idtype="PUI">126363636</itemid><itemid idtype="CAR-ID">34431882</itemid><itemid idtype="SNCPX">2002148740</itemid><itemid idtype="SCP">0030216330</itemid><itemid idtype="SGR">0030216330</itemid><itemid idtype="PUIsecondary">26790933</itemid><itemid idtype="CPX">1996443330282</itemid></itemidlist><history><date-created year="2018" month="06" day="20" timestamp="BST 08:26:15"/></history><dbcollection>SNCPX</dbcollection><dbcollection>Scopusbase</dbcollection><dbcollection>CPX</dbcollection></item-info><head><citation-info><citation-type code="ar"/><citation-language xml:lang="eng" language="English"/><abstract-language xml:lang="eng" language="English"/><author-keywords><author-keyword xml:lang="eng">Combinatorial optimization</author-keyword><author-keyword xml:lang="eng">Distributed memory message passing multiprocessor</author-keyword><author-keyword xml:lang="eng">Embedding</author-keyword><author-keyword xml:lang="eng">Heuristic algorithm</author-keyword><author-keyword xml:lang="eng">Mapping</author-keyword><author-keyword xml:lang="eng">Performance optimization</author-keyword><author-keyword xml:lang="eng">Regular topology</author-keyword></author-keywords></citation-info><citation-title><titletext xml:lang="eng" original="y" language="English">Improved schemes for mapping arbitrary algorithms onto processor meshes</titletext></citation-title><author-group><author auid="55947972500" seq="1" type="auth"><ce:initials>B.</ce:initials><ce:indexed-name>Robic B.</ce:indexed-name><ce:surname>Robič</ce:surname><ce:given-name>Borut</ce:given-name><preferred-name><ce:initials>B.</ce:initials><ce:indexed-name>Robič B.</ce:indexed-name><ce:surname>Robič</ce:surname><ce:given-name>Borut</ce:given-name></preferred-name></author><affiliation afid="60023955" dptid="104208728" country="svn"><organization>Computer Systems Department</organization><organization>Jožef Stefan Institute</organization><city-group>Ljubljana</city-group><affiliation-id afid="60023955" dptid="104208728"/><country>Slovenia</country></affiliation></author-group><author-group><author auid="55947972500" seq="1" type="auth"><ce:initials>B.</ce:initials><ce:indexed-name>Robic B.</ce:indexed-name><ce:surname>Robič</ce:surname><ce:given-name>Borut</ce:given-name><preferred-name><ce:initials>B.</ce:initials><ce:indexed-name>Robič B.</ce:indexed-name><ce:surname>Robič</ce:surname><ce:given-name>Borut</ce:given-name></preferred-name></author><author auid="6507352140" seq="2" type="auth"><ce:initials>B.</ce:initials><ce:indexed-name>Vilfan B.</ce:indexed-name><ce:surname>Vilfan</ce:surname><ce:given-name>Boštjan</ce:given-name><preferred-name><ce:initials>B.</ce:initials><ce:indexed-name>Vilfan B.</ce:indexed-name><ce:surname>Vilfan</ce:surname><ce:given-name>Boštjan</ce:given-name></preferred-name></author><affiliation afid="60031106" country="svn"><organization>Fac. of Comp. and Info. Science</organization><organization>University of Ljubljana</organization><city-group>Ljubljana</city-group><affiliation-id afid="60031106"/><country>Slovenia</country></affiliation></author-group><correspondence><person><ce:initials>B.</ce:initials><ce:indexed-name>Robic B.</ce:indexed-name><ce:surname>Robič</ce:surname></person><affiliation country="svn"><organization>Computer Systems Department</organization><organization>Jožef Stefan Institute</organization><city-group>Ljubljana</city-group><country>Slovenia</country></affiliation></correspondence><abstracts><abstract original="y" xml:lang="eng"><ce:para>We address the problem of efficient schemes for mapping arbitrary parallel algorithms onto distributed memory message passing multiprocessors with mesh topologies. We analyze a particular mapping scheme, find the reasons for its low efficiency, and show that mapped algorithms tend to be both wider and higher than necessary. As a result, they generally execute too slow while at the same time occupying an excessive number of processors. Two approaches to the improvement of the scheme are presented, one direct, and the other indirect. In the direct approach, we describe four nontrivial improvements of the scheme but also prove their NP-completeness. In contrast, in the indirect approach the original scheme is followed by a refinement procedure that incrementally improves the mapped algorithms. We describe four different heuristic refinement procedures. Experimental results show that the indirect approach offers a 51% saving in processor resources and, at the same time, a 36% saving in execution time, on average.</ce:para></abstract></abstracts><source srcid="26138" type="j" country="nld"><sourcetitle>Parallel Computing</sourcetitle><sourcetitle-abbrev>Parallel Comput</sourcetitle-abbrev><translated-sourcetitle xml:lang="eng">Parallel Computing</translated-sourcetitle><issn type="print">01678191</issn><codencode>PACOE</codencode><volisspag><voliss volume="22" issue="5"/><pagerange first="701" last="724"/></volisspag><publicationyear first="1996"/><publicationdate><year>1996</year><date-text>August 1996</date-text></publicationdate><publisher><publishername>Elsevier</publishername></publisher></source><enhancement><classificationgroup><classifications type="CPXCLASS"><classification>722.4</classification><classification>723.1</classification><classification>921</classification><classification>921.4</classification><classification>921.5</classification></classifications><classifications type="SUBJECT"><classification>Engineering and Technology</classification></classifications><classifications type="ASJC"><classification>1712</classification><classification>2614</classification><classification>1708</classification><classification>1705</classification><classification>1704</classification><classification>1702</classification></classifications><classifications type="SUBJABBR"><classification>COMP</classification><classification>MATH</classification></classifications></classificationgroup></enhancement></head><tail><bibliography refcount="15"><reference id="1"><ref-info><ref-title><ref-titletext>On the mapping problem</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">0019544910</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>S.H.</ce:initials><ce:indexed-name>Bokhari S.H.</ce:indexed-name><ce:surname>Bokhari</ce:surname></author></ref-authors><ref-sourcetitle>IEEE Trans. Comput.</ref-sourcetitle><ref-publicationyear first="1981"/><ref-volisspag><voliss volume="30" issue="3"/><pagerange first="207" last="214"/></ref-volisspag><ref-text>March</ref-text></ref-info><ref-fulltext>S.H. Bokhari, On the mapping problem, IEEE Trans. Comput. 30(3) (March 1981) 207-214.</ref-fulltext></reference><reference id="2"><ref-info><ref-title><ref-titletext>Efficient algorithms for mapping and partitioning a class of parallel computations</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">38248999463</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>H.-A.</ce:initials><ce:indexed-name>Choi H.-A.</ce:indexed-name><ce:surname>Choi</ce:surname></author><author seq="2"><ce:initials>B.</ce:initials><ce:indexed-name>Narahari B.</ce:indexed-name><ce:surname>Narahari</ce:surname></author></ref-authors><ref-sourcetitle>J. Parallel Distributed Comput.</ref-sourcetitle><ref-publicationyear first="1993"/><ref-volisspag><voliss volume="19" issue="4"/><pagerange first="349" last="363"/></ref-volisspag><ref-text>Dec.</ref-text></ref-info><ref-fulltext>H.-A. Choi and B. Narahari, Efficient algorithms for mapping and partitioning a class of parallel computations, J. Parallel Distributed Comput. 19(4) (Dec. 1993) 349-363.</ref-fulltext></reference><reference id="3"><ref-info><ref-title><ref-titletext>Dataflow supercomputers</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">0019079721</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>J.B.</ce:initials><ce:indexed-name>Dennis J.B.</ce:indexed-name><ce:surname>Dennis</ce:surname></author></ref-authors><ref-sourcetitle>IEEE Computer</ref-sourcetitle><ref-publicationyear first="1980"/><ref-volisspag><voliss volume="13" issue="11"/><pagerange first="48" last="56"/></ref-volisspag><ref-text>Nov.</ref-text></ref-info><ref-fulltext>J.B. Dennis, Dataflow supercomputers, IEEE Computer 13(11) (Nov. 1980) 48-56.</ref-fulltext></reference><reference id="4"><ref-info><ref-title><ref-titletext>Assignment of job modules onto array processors</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">0023382284</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>K.</ce:initials><ce:indexed-name>Fukunaga K.</ce:indexed-name><ce:surname>Fukunaga</ce:surname></author><author seq="2"><ce:initials>S.</ce:initials><ce:indexed-name>Yamada S.</ce:indexed-name><ce:surname>Yamada</ce:surname></author><author seq="3"><ce:initials>T.</ce:initials><ce:indexed-name>Kasai T.</ce:indexed-name><ce:surname>Kasai</ce:surname></author></ref-authors><ref-sourcetitle>IEEE Trans. Comput.</ref-sourcetitle><ref-publicationyear first="1987"/><ref-volisspag><voliss volume="36" issue="7"/><pagerange first="888" last="891"/></ref-volisspag><ref-text>July</ref-text></ref-info><ref-fulltext>K. Fukunaga, S. Yamada and T. Kasai, Assignment of job modules onto array processors, IEEE Trans. Comput. 36(7) (July 1987) 888-891.</ref-fulltext></reference><reference id="5"><ref-info><refd-itemidlist><itemid idtype="SGR">0003603813</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>M.R.</ce:initials><ce:indexed-name>Garey M.R.</ce:indexed-name><ce:surname>Garey</ce:surname></author><author seq="2"><ce:initials>D.S.</ce:initials><ce:indexed-name>Johnson D.S.</ce:indexed-name><ce:surname>Johnson</ce:surname></author></ref-authors><ref-sourcetitle>Computers and Intractability: A Guide to the Theory of NP-completeness</ref-sourcetitle><ref-publicationyear first="1979"/><ref-text>W.H. Freeman and Co.</ref-text></ref-info><ref-fulltext>M.R. Garey and D.S. Johnson, Computers and intractability: A guide to the theory of NP-completeness (W.H. Freeman and Co., 1979).</ref-fulltext></reference><reference id="6"><ref-info><ref-title><ref-titletext>A direct mapping of algorithms onto VLSI processing arrays based on the data flow approach</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">0020590217</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>I.</ce:initials><ce:indexed-name>Koren I.</ce:indexed-name><ce:surname>Koren</ce:surname></author><author seq="2"><ce:initials>G.M.</ce:initials><ce:indexed-name>Silberman G.M.</ce:indexed-name><ce:surname>Silberman</ce:surname></author></ref-authors><ref-sourcetitle>Proc. 1983 Int. Conf. Parallel Processing</ref-sourcetitle><ref-publicationyear first="1983"/><ref-volisspag><pagerange first="335" last="337"/></ref-volisspag><ref-text>Aug.</ref-text></ref-info><ref-fulltext>I. Koren and G.M. Silberman, A direct mapping of algorithms onto VLSI processing arrays based on the data flow approach, in: Proc. 1983 Int. Conf. Parallel Processing (Aug. 1983) 335-337.</ref-fulltext></reference><reference id="7"><ref-info><ref-title><ref-titletext>A data-driven VLSI array for arbitrary algorithms</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">0024088366</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>I.</ce:initials><ce:indexed-name>Koren I.</ce:indexed-name><ce:surname>Koren</ce:surname></author><author seq="2"><ce:initials>B.</ce:initials><ce:indexed-name>Mendelson B.</ce:indexed-name><ce:surname>Mendelson</ce:surname></author><author seq="3"><ce:initials>I.</ce:initials><ce:indexed-name>Peled I.</ce:indexed-name><ce:surname>Peled</ce:surname></author><author seq="4"><ce:initials>G.M.</ce:initials><ce:indexed-name>Silberman G.M.</ce:indexed-name><ce:surname>Silberman</ce:surname></author></ref-authors><ref-sourcetitle>IEEE Computer</ref-sourcetitle><ref-publicationyear first="1988"/><ref-volisspag><voliss volume="21" issue="10"/><pagerange first="30" last="43"/></ref-volisspag></ref-info><ref-fulltext>I. Koren, B. Mendelson, I. Peled and G.M. Silberman, A data-driven VLSI array for arbitrary algorithms, IEEE Computer 21(10) (Oct. 1988) 30-43.</ref-fulltext></reference><reference id="8"><ref-info><ref-title><ref-titletext>Mapping strategies in message-based multiprocessor systems</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">38249026545</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>O.</ce:initials><ce:indexed-name>Kraemer O.</ce:indexed-name><ce:surname>Kraemer</ce:surname></author><author seq="2"><ce:initials>H.</ce:initials><ce:indexed-name>Muehlenbein H.</ce:indexed-name><ce:surname>Muehlenbein</ce:surname></author></ref-authors><ref-sourcetitle>Parallel Comput.</ref-sourcetitle><ref-publicationyear first="1988" last="1989"/><ref-volisspag><voliss volume="9" issue="2"/><pagerange first="213" last="255"/></ref-volisspag></ref-info><ref-fulltext>O. Kraemer and H. Muehlenbein, Mapping strategies in message-based multiprocessor systems, Parallel Comput. 9(2) (1988/89) 213-255.</ref-fulltext></reference><reference id="9"><ref-info><refd-itemidlist><itemid idtype="SGR">0003533473</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>P.J.</ce:initials><ce:indexed-name>Van Laarhoven P.J.</ce:indexed-name><ce:surname>Van Laarhoven</ce:surname></author><author seq="2"><ce:initials>E.H.L.</ce:initials><ce:indexed-name>Aarts E.H.L.</ce:indexed-name><ce:surname>Aarts</ce:surname></author></ref-authors><ref-sourcetitle>Simulated Annealing: Theory and Applications</ref-sourcetitle><ref-publicationyear first="1987"/><ref-text>Kluwer Academic Press</ref-text></ref-info><ref-fulltext>P.J. van Laarhoven and E.H.L. Aarts, Simulated annealing: theory and applications (Kluwer Academic Press, 1987).</ref-fulltext></reference><reference id="10"><ref-info><ref-title><ref-titletext>Comparing quenching and slow simulated annealing on the mapping problem</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">30244457333</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>C.</ce:initials><ce:indexed-name>Lee C.</ce:indexed-name><ce:surname>Lee</ce:surname></author><author seq="2"><ce:initials>L.</ce:initials><ce:indexed-name>Bic L.</ce:indexed-name><ce:surname>Bic</ce:surname></author></ref-authors><ref-sourcetitle>Proc. 3rd Annual Parallel Proc. Symp.</ref-sourcetitle><ref-publicationyear first="1989"/><ref-volisspag><pagerange first="671" last="685"/></ref-volisspag><ref-text>March</ref-text></ref-info><ref-fulltext>C. Lee and L. Bic, Comparing quenching and slow simulated annealing on the mapping problem, in: Proc. 3rd Annual Parallel Proc. Symp. (March 1989) 671-685.</ref-fulltext></reference><reference id="11"><ref-info><ref-title><ref-titletext>Design and performance evaluation of EXMAN: An EXtended MANchester data flow computer</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">0022685190</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>L.M.</ce:initials><ce:indexed-name>Patnaik L.M.</ce:indexed-name><ce:surname>Patnaik</ce:surname></author><author seq="2"><ce:initials>R.</ce:initials><ce:indexed-name>Govindarajan R.</ce:indexed-name><ce:surname>Govindarajan</ce:surname></author><author seq="3"><ce:initials>N.S.</ce:initials><ce:indexed-name>Ramadoss N.S.</ce:indexed-name><ce:surname>Ramadoss</ce:surname></author></ref-authors><ref-sourcetitle>IEEE Trans. Comput.</ref-sourcetitle><ref-publicationyear first="1986"/><ref-volisspag><voliss volume="35" issue="3"/><pagerange first="229" last="244"/></ref-volisspag><ref-text>March</ref-text></ref-info><ref-fulltext>L.M. Patnaik, R. Govindarajan and N.S. Ramadoss, Design and performance evaluation of EXMAN: An EXtended MANchester data flow computer, IEEE Trans. Comput. 35(3) (March 1986) 229-244.</ref-fulltext></reference><reference id="12"><ref-info><ref-title><ref-titletext>Algorithm mapping with parallel simulated annealing</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">21844484732</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>B.</ce:initials><ce:indexed-name>Robic B.</ce:indexed-name><ce:surname>Robič</ce:surname></author><author seq="2"><ce:initials>J.</ce:initials><ce:indexed-name>Silc J.</ce:indexed-name><ce:surname>Šilc</ce:surname></author></ref-authors><ref-sourcetitle>Comput. Artif. Intell.</ref-sourcetitle><ref-publicationyear first="1995"/><ref-volisspag><voliss volume="14" issue="4"/><pagerange first="339" last="351"/></ref-volisspag></ref-info><ref-fulltext>B. Robič and J. Šilc, Algorithm mapping with parallel simulated annealing, Comput. Artif. Intell. 14(4) (1995) 339-351.</ref-fulltext></reference><reference id="13"><ref-info><ref-title><ref-titletext>Area optimization of dataflow-graph mappings</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">0026825925</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>B.</ce:initials><ce:indexed-name>Robic B.</ce:indexed-name><ce:surname>Robič</ce:surname></author><author seq="2"><ce:initials>P.</ce:initials><ce:indexed-name>Kolbezen P.</ce:indexed-name><ce:surname>Kolbezen</ce:surname></author><author seq="3"><ce:initials>J.</ce:initials><ce:indexed-name>Silc J.</ce:indexed-name><ce:surname>Šilc</ce:surname></author></ref-authors><ref-sourcetitle>Parallel Comput.</ref-sourcetitle><ref-publicationyear first="1992"/><ref-volisspag><voliss volume="18" issue="3"/><pagerange first="297" last="311"/></ref-volisspag><ref-text>March</ref-text></ref-info><ref-fulltext>B. Robič, P. Kolbezen and J. Šilc, Area optimization of dataflow-graph mappings, Parallel Comput. 18(3) (March 1992) 297-311.</ref-fulltext></reference><reference id="14"><ref-info><ref-title><ref-titletext>Nearest-neighbor mapping of finite element graphs onto processor meshes</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">0023558425</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>P.</ce:initials><ce:indexed-name>Sadayappan P.</ce:indexed-name><ce:surname>Sadayappan</ce:surname></author><author seq="2"><ce:initials>F.</ce:initials><ce:indexed-name>Ercal F.</ce:indexed-name><ce:surname>Ercal</ce:surname></author></ref-authors><ref-sourcetitle>IEEE Trans. Comput.</ref-sourcetitle><ref-publicationyear first="1987"/><ref-volisspag><voliss volume="36" issue="12"/><pagerange first="1408" last="1424"/></ref-volisspag><ref-text>Dec.</ref-text></ref-info><ref-fulltext>P. Sadayappan and F. Ercal, Nearest-neighbor mapping of finite element graphs onto processor meshes, IEEE Trans. Comput. 36(12) (Dec. 1987) 1408-1424.</ref-fulltext></reference><reference id="15"><ref-info><ref-title><ref-titletext>Architectural improvements for a data-driven VLSI processing array</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">0343695731</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>S.</ce:initials><ce:indexed-name>Weiss S.</ce:indexed-name><ce:surname>Weiss</ce:surname></author><author seq="2"><ce:initials>I.Y.</ce:initials><ce:indexed-name>Spilinger I.Y.</ce:indexed-name><ce:surname>Spilinger</ce:surname></author><author seq="3"><ce:initials>G.M.</ce:initials><ce:indexed-name>Silberman G.M.</ce:indexed-name><ce:surname>Silberman</ce:surname></author></ref-authors><ref-sourcetitle>J. Parallel Distributed Comput.</ref-sourcetitle><ref-publicationyear first="1993"/><ref-volisspag><voliss volume="19" issue="4"/><pagerange first="308" last="322"/></ref-volisspag><ref-text>Dec.</ref-text></ref-info><ref-fulltext>S. Weiss, I.Y. Spilinger, and G.M. Silberman, Architectural improvements for a data-driven VLSI processing array, J. Parallel Distributed Comput. 19(4) (Dec. 1993) 308-322.</ref-fulltext></reference></bibliography></tail></bibrecord></item></abstracts-retrieval-response>