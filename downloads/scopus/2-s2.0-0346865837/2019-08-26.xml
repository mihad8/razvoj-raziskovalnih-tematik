<abstracts-retrieval-response xmlns="http://www.elsevier.com/xml/svapi/abstract/dtd" xmlns:dn="http://www.elsevier.com/xml/svapi/abstract/dtd" xmlns:ait="http://www.elsevier.com/xml/ani/ait" xmlns:ce="http://www.elsevier.com/xml/ani/common" xmlns:cto="http://www.elsevier.com/xml/cto/dtd" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:prism="http://prismstandard.org/namespaces/basic/2.0/" xmlns:xocs="http://www.elsevier.com/xml/xocs/dtd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><coredata><prism:url>https://api.elsevier.com/content/abstract/scopus_id/0346865837</prism:url><dc:identifier>SCOPUS_ID:0346865837</dc:identifier><eid>2-s2.0-0346865837</eid><dc:title>Macro extension for SIMD processing</dc:title><prism:aggregationType>Book Series</prism:aggregationType><srctype>k</srctype><subtype>cp</subtype><subtypeDescription>Conference Paper</subtypeDescription><citedby-count>5</citedby-count><prism:publicationName>Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)</prism:publicationName><dc:publisher>Springer Verlagservice@springer.de</dc:publisher><source-id>25674</source-id><prism:isbn>3540424954</prism:isbn><prism:isbn>9783540424956</prism:isbn><prism:issn>16113349 03029743</prism:issn><prism:volume>2150</prism:volume><prism:startingPage>448</prism:startingPage><prism:endingPage>451</prism:endingPage><prism:pageRange>448-451</prism:pageRange><prism:coverDate>2001-01-01</prism:coverDate><openaccess/><openaccessFlag/><dc:creator><author seq="1" auid="6603205527"><ce:initials>P.</ce:initials><ce:indexed-name>Bulic P.</ce:indexed-name><ce:surname>Bulić</ce:surname><ce:given-name>Patricio</ce:given-name><preferred-name><ce:initials>P.</ce:initials><ce:indexed-name>Bulić P.</ce:indexed-name><ce:surname>Bulić</ce:surname><ce:given-name>Patricio</ce:given-name></preferred-name><author-url>https://api.elsevier.com/content/author/author_id/6603205527</author-url><affiliation id="60031106" href="https://api.elsevier.com/content/affiliation/affiliation_id/60031106"/></author></dc:creator><dc:description><abstract xmlns="" original="y" xml:lang="eng"><publishercopyright>© Springer-Verlag Berlin Heidelberg 2001.</publishercopyright><ce:para>The need for multimedia applications has prompted the addition of a SIMD instruction set On the one hand we have modern multimedia execution hardware and on the other we have the software and the general compilers which are not able to automatically exploit the multimedia instruction set. Our solution to these problems is to find statement candidates in the program written in the language C/C++ (as we mainly use this language), and to employ the SIMD instruction set in the easiest possible way. We proposed the algorithm for identifying candidates for parallel processing (ICPP) which is based on the syntax and semantic cheching of statements. We define the macro library MacroVect. c as the substitution for the discovered statement candidates.</ce:para></abstract></dc:description><link href="https://api.elsevier.com/content/abstract/scopus_id/0346865837" rel="self"/><link href="https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&amp;scp=0346865837&amp;origin=inward" rel="scopus"/><link href="https://www.scopus.com/inward/citedby.uri?partnerID=HzOxMe3b&amp;scp=0346865837&amp;origin=inward" rel="scopus-citedby"/></coredata><affiliation id="60031106" href="https://api.elsevier.com/content/affiliation/affiliation_id/60031106"><affilname>University of Ljubljana</affilname><affiliation-city>Ljubljana</affiliation-city><affiliation-country>Slovenia</affiliation-country></affiliation><authors><author seq="1" auid="6603205527"><ce:initials>P.</ce:initials><ce:indexed-name>Bulic P.</ce:indexed-name><ce:surname>Bulić</ce:surname><ce:given-name>Patricio</ce:given-name><preferred-name><ce:initials>P.</ce:initials><ce:indexed-name>Bulić P.</ce:indexed-name><ce:surname>Bulić</ce:surname><ce:given-name>Patricio</ce:given-name></preferred-name><author-url>https://api.elsevier.com/content/author/author_id/6603205527</author-url><affiliation id="60031106" href="https://api.elsevier.com/content/affiliation/affiliation_id/60031106"/></author><author seq="2" auid="7004621708"><ce:initials>V.</ce:initials><ce:indexed-name>Gustin V.</ce:indexed-name><ce:surname>Guštin</ce:surname><ce:given-name>Veselko</ce:given-name><preferred-name><ce:initials>V.</ce:initials><ce:indexed-name>Guštin V.</ce:indexed-name><ce:surname>Guštin</ce:surname><ce:given-name>Veselko</ce:given-name></preferred-name><author-url>https://api.elsevier.com/content/author/author_id/7004621708</author-url><affiliation id="60031106" href="https://api.elsevier.com/content/affiliation/affiliation_id/60031106"/></author></authors><language xml:lang="eng"/><authkeywords/><idxterms><mainterm weight="b" candidate="n">Language c</mainterm><mainterm weight="b" candidate="n">Multimedia applications</mainterm><mainterm weight="b" candidate="n">Multimedia instruction</mainterm><mainterm weight="b" candidate="n">Parallel processing</mainterm><mainterm weight="b" candidate="n">SIMD instructions</mainterm><mainterm weight="b" candidate="n">SIMD processing</mainterm></idxterms><subject-areas><subject-area code="2614" abbrev="MATH">Theoretical Computer Science</subject-area><subject-area code="1700" abbrev="COMP">Computer Science (all)</subject-area></subject-areas><item xmlns=""><ait:process-info><ait:date-delivered year="2019" month="08" day="17" timestamp="2019-08-17T07:36:48.000048-04:00"/><ait:date-sort year="2001" month="01" day="01"/><ait:status type="core" state="update" stage="S300"/></ait:process-info><bibrecord><item-info><copyright type="Elsevier">Copyright 2015 Elsevier B.V., All rights reserved.</copyright><itemidlist><itemid idtype="PUI">605291318</itemid><itemid idtype="CAR-ID">638085626</itemid><itemid idtype="CPX">20153001058662</itemid><itemid idtype="SCP">0346865837</itemid><itemid idtype="SGR">0346865837</itemid></itemidlist><history><date-created year="2015" month="07" day="25"/></history><dbcollection>CPX</dbcollection><dbcollection>Scopusbase</dbcollection></item-info><head><citation-info><citation-type code="cp"/><citation-language xml:lang="eng" language="English"/><abstract-language xml:lang="eng" language="English"/></citation-info><citation-title><titletext xml:lang="eng" original="y" language="English">Macro extension for SIMD processing</titletext></citation-title><author-group><author auid="6603205527" seq="1" type="auth"><ce:initials>P.</ce:initials><ce:indexed-name>Bulic P.</ce:indexed-name><ce:surname>Bulić</ce:surname><ce:given-name>Patricio</ce:given-name><preferred-name><ce:initials>P.</ce:initials><ce:indexed-name>Bulić P.</ce:indexed-name><ce:surname>Bulić</ce:surname><ce:given-name>Patricio</ce:given-name></preferred-name></author><author auid="7004621708" seq="2" type="auth"><ce:initials>V.</ce:initials><ce:indexed-name>Gustin V.</ce:indexed-name><ce:surname>Guštin</ce:surname><ce:given-name>Veselko</ce:given-name><preferred-name><ce:initials>V.</ce:initials><ce:indexed-name>Guštin V.</ce:indexed-name><ce:surname>Guštin</ce:surname><ce:given-name>Veselko</ce:given-name></preferred-name></author><affiliation afid="60031106" country="svn"><organization>University of Ljubljana</organization><address-part>Tržaška cesta 25</address-part><city>Ljubljana</city><postal-code>1000</postal-code><affiliation-id afid="60031106"/><country>Slovenia</country></affiliation></author-group><abstracts><abstract original="y" xml:lang="eng"><publishercopyright>© Springer-Verlag Berlin Heidelberg 2001.</publishercopyright><ce:para>The need for multimedia applications has prompted the addition of a SIMD instruction set On the one hand we have modern multimedia execution hardware and on the other we have the software and the general compilers which are not able to automatically exploit the multimedia instruction set. Our solution to these problems is to find statement candidates in the program written in the language C/C++ (as we mainly use this language), and to employ the SIMD instruction set in the easiest possible way. We proposed the algorithm for identifying candidates for parallel processing (ICPP) which is based on the syntax and semantic cheching of statements. We define the macro library MacroVect. c as the substitution for the discovered statement candidates.</ce:para></abstract></abstracts><source srcid="25674" type="k" country="deu"><sourcetitle>Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)</sourcetitle><sourcetitle-abbrev>Lect. Notes Comput. Sci.</sourcetitle-abbrev><translated-sourcetitle xml:lang="eng">Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)</translated-sourcetitle><volumetitle>Euro-Par 2001 Parallel Processing - 7th International Euro-Par Conference, Proceedings</volumetitle><issn type="electronic">16113349</issn><issn type="print">03029743</issn><isbn type="electronic" length="10" level="volume">3540424954</isbn><isbn type="electronic" length="13" level="volume">9783540424956</isbn><volisspag><voliss volume="2150"/><pagerange first="448" last="451"/></volisspag><publicationyear first="2001"/><publicationdate><year>2001</year><date-text xfab-added="true">2001</date-text></publicationdate><website><ce:e-address type="email">http://springerlink.com/content/0302-9743/copyright/2005/</ce:e-address></website><contributor-group><affiliation country="gbr"><organization>University of Manchester, Department of Computer Science</organization><address-part>Oxford Road</address-part><city>Manchester</city><postal-code>M13 9PL</postal-code></affiliation></contributor-group><contributor-group><contributor role="edit" seq="1"><ce:initials>R.</ce:initials><ce:indexed-name>Sakellariou R.</ce:indexed-name><ce:surname>Sakellariou</ce:surname><ce:given-name>Rizos</ce:given-name><ce:e-address type="email">rizos@cs.man.ac.uk</ce:e-address></contributor></contributor-group><contributor-group><contributor role="edit" seq="2"><ce:initials>J.</ce:initials><ce:indexed-name>Gurd J.</ce:indexed-name><ce:surname>Gurd</ce:surname><ce:given-name>John</ce:given-name><ce:e-address type="email">john@cs.man.ac.uk</ce:e-address></contributor></contributor-group><contributor-group><contributor role="edit" seq="3"><ce:initials>L.</ce:initials><ce:indexed-name>Freeman L.</ce:indexed-name><ce:surname>Freeman</ce:surname><ce:given-name>Len</ce:given-name><ce:e-address type="email">lfreeman@cs.man.ac.uk</ce:e-address></contributor></contributor-group><contributor-group><contributor role="edit" seq="1"><ce:initials>J.</ce:initials><ce:indexed-name>Keane J.</ce:indexed-name><ce:surname>Keane</ce:surname><ce:given-name>John</ce:given-name><ce:e-address type="email">jak@co.umist.ac.uk</ce:e-address></contributor></contributor-group><contributor-group><affiliation country="gbr"><organization>UMIST, Department of Computation</organization><address-part>P.O. Box 88</address-part><city>Manchester</city><postal-code>M60 1QD</postal-code></affiliation></contributor-group><publisher><publishername>Springer Verlag</publishername><ce:e-address type="email">service@springer.de</ce:e-address></publisher><additional-srcinfo><conferenceinfo><confevent><confname>7th European Conference on Parallel Computing, Euro-Par 2001</confname><confnumber>7</confnumber><conftheme>Hardware, Software, Algorithms and Applications for Parallel Computing</conftheme><confseriestitle>European Conference on Parallel Computing</confseriestitle><conflocation country="gbr"><city>Manchester</city></conflocation><confdate><startdate year="2001" month="08" day="28"/><enddate year="2001" month="08" day="31"/></confdate><confcode>121049</confcode><confsponsors complete="n"><confsponsor>Association of Computer Machinery</confsponsor><confsponsor>International Federation of Information Processing</confsponsor></confsponsors></confevent><confpublication><procpartno>1 of 1</procpartno></confpublication></conferenceinfo></additional-srcinfo></source><enhancement><classificationgroup><classifications type="CPXCLASS"><classification> <classification-code>721.1</classification-code> <classification-description>Computer Theory (Includes Formal Logic, Automata Theory, Switching Theory and Programming Theory)</classification-description> </classification><classification> <classification-code>723</classification-code> <classification-description>Computer Software, Data Handling and Applications</classification-description> </classification><classification> <classification-code>903.2</classification-code> <classification-description>Information Dissemination</classification-description> </classification></classifications><classifications type="FLXCLASS"><classification> <classification-code>902</classification-code> <classification-description>FLUIDEX; Related Topics</classification-description> </classification></classifications><classifications type="ASJC"><classification>2614</classification><classification>1700</classification></classifications><classifications type="SUBJABBR"><classification>MATH</classification><classification>COMP</classification></classifications></classificationgroup></enhancement></head><tail><bibliography refcount="9"><reference id="1"><ref-info><ref-title><ref-titletext>Exploiting Superword Level Parallelism with Multimedia Instruction Sets</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">0034446825</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>S.</ce:initials><ce:indexed-name>Larsen S.</ce:indexed-name><ce:surname>Larsen</ce:surname></author><author seq="2"><ce:initials>S.</ce:initials><ce:indexed-name>Amarasinghe S.</ce:indexed-name><ce:surname>Amarasinghe</ce:surname></author></ref-authors><ref-sourcetitle>Processing of the SIGPLAN’00 Conference on Programming Language Design Implementation</ref-sourcetitle><ref-publicationyear first="2000"/><ref-text>Vancouver, B. C., June</ref-text></ref-info><ref-fulltext>S. Larsen, S. Amarasinghe. Exploiting Superword Level Parallelism with Multimedia Instruction Sets, Processing of the SIGPLAN’00 Conference on programming Language Design Implementation, Vancouver, B. C., June 2000.</ref-fulltext></reference><reference id="2"><ref-info><ref-title><ref-titletext>Compiling for SIMD within a register</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">19344377871</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>R.</ce:initials><ce:indexed-name>Fisher R.</ce:indexed-name><ce:surname>Fisher</ce:surname></author></ref-authors><ref-sourcetitle>Processings of Workshop on Languages and Compilers for Parallel Processing</ref-sourcetitle><ref-volisspag><pagerange first="1998"/></ref-volisspag><ref-text>North Carolina, August</ref-text></ref-info><ref-fulltext>R. Fisher. Compiling for SIMD within a register, In Processings of Workshop on Languages and Compilers for Parallel Processing, North Carolina, August 1998.</ref-fulltext></reference><reference id="3"><ref-info><ref-title><ref-titletext>Automatic Loop Transformation and Parallelization for Java</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">0034197209</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>P.</ce:initials><ce:indexed-name>Artigas P.</ce:indexed-name><ce:surname>Artigas</ce:surname></author><author seq="2"><ce:initials>M.</ce:initials><ce:indexed-name>Goupta M.</ce:indexed-name><ce:surname>Goupta</ce:surname></author><author seq="3"><ce:initials>S.</ce:initials><ce:indexed-name>Mikiff S.</ce:indexed-name><ce:surname>Mikiff</ce:surname></author><author seq="4"><ce:initials>J.</ce:initials><ce:indexed-name>Moreira J.</ce:indexed-name><ce:surname>Moreira</ce:surname></author></ref-authors><ref-sourcetitle>Parallel Processing Letters</ref-sourcetitle><ref-publicationyear first="2000"/><ref-volisspag><voliss volume="10" issue="2-3"/><pagerange first="153" last="165"/></ref-volisspag></ref-info><ref-fulltext>P. Artigas, M. Goupta, S. Mikiff, J. Moreira. Automatic Loop Transformation and Parallelization for Java, Parallel Processing Letters, Vol. 10 (2000), Nos. 2&amp;3, pp. 153-165.</ref-fulltext></reference><reference id="4"><ref-info><ref-title><ref-titletext>MMX Technology Architecture Overview</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">0002173372</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>M.</ce:initials><ce:indexed-name>Mitall M.</ce:indexed-name><ce:surname>Mitall</ce:surname><ce:given-name>Millind</ce:given-name></author><author seq="2"><ce:initials>A.</ce:initials><ce:indexed-name>Peleg A.</ce:indexed-name><ce:surname>Peleg</ce:surname><ce:given-name>Alex</ce:given-name></author><author seq="3"><ce:initials>U.</ce:initials><ce:indexed-name>Weiser U.</ce:indexed-name><ce:surname>Weiser</ce:surname><ce:given-name>Uri</ce:given-name></author></ref-authors><ref-sourcetitle>Intel Technology Journal</ref-sourcetitle><ref-publicationyear first="1997"/></ref-info><ref-fulltext>Millind Mitall, Alex Peleg, Uri Weiser. MMX Technology Architecture Overview, Intel Technology Journal, 1997.</ref-fulltext></reference><reference id="5"><ref-info><refd-itemidlist><itemid idtype="SGR">67650675753</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>J.</ce:initials><ce:indexed-name>Wolf J.</ce:indexed-name><ce:surname>Wolf</ce:surname><ce:given-name>Joe</ce:given-name></author></ref-authors><ref-sourcetitle>Programming Methods for the Pentium(R) III processor’s Streaming SIMD Extension Using the Vtune(Tm) Performance Enhancement Environment</ref-sourcetitle><ref-website><ce:e-address type="email">http://developer.intel.com/technology/itj/Q21999/ARTICLES/art6d.htm</ce:e-address></ref-website></ref-info><ref-fulltext>Joe Wolf. Programming Methods for the Pentium(R) III processor’s Streaming SIMD Extension Using the VTune(TM) Performance Enhancement Environment, http://developer. intel.com/technology/itj/Q21999/ARTICLES/art 6d. htm</ref-fulltext></reference><reference id="6"><ref-info><refd-itemidlist><itemid idtype="SGR">84937452681</itemid></refd-itemidlist><ref-website><ce:e-address type="email">http://download.intel.nl/design/pentiumii/manuals/24319002.pdf</ce:e-address></ref-website><ref-text>Intel Architecture Software Developer’s Manual Volume 1: Basic Architecture</ref-text></ref-info><ref-fulltext>Intel Architecture Software Developer’s Manual Volume 1: Basic Architecture, http://download. intel. nl/design/pentiumii/manuals/24319002.pdf.</ref-fulltext></reference><reference id="7"><ref-info><refd-itemidlist><itemid idtype="SGR">84937452682</itemid></refd-itemidlist><ref-website><ce:e-address type="email">http://download.intel.nl/design/pentiumii/manuals/24319102.pdf</ce:e-address></ref-website><ref-text>Intel Architecture Software Developer’s Manual Volume 2: Instruction Set Reference</ref-text></ref-info><ref-fulltext>Intel Architecture Software Developer’s Manual Volume 2: Instruction Set Reference, http://download. intel. nl/design/pentiumii/manuals/24319102.pdf.</ref-fulltext></reference><reference id="8"><ref-info><refd-itemidlist><itemid idtype="SGR">84937452683</itemid></refd-itemidlist><ref-website><ce:e-address type="email">http://download.intel.nl/design/pentiumii/manuals/24319202.pdf</ce:e-address></ref-website><ref-text>Intel Architecture Software Developer’s Manual Volume 3: System Programming</ref-text></ref-info><ref-fulltext>Intel Architecture Software Developer’s Manual Volume 3: System Programming, http://download. intel. nl/design/pentiumii/manuals/24319202.pdf.</ref-fulltext></reference><reference id="9"><ref-info><refd-itemidlist><itemid idtype="SGR">84937452684</itemid></refd-itemidlist><ref-website><ce:e-address type="email">http://developer.intel.com/technology/collateral/pentiumii/907/907.htm</ce:e-address></ref-website><ref-text>Pentium (R) II Processor Application Notes, MMX (TM) Technology C Intrinsics</ref-text></ref-info><ref-fulltext>Pentium (R) II Processor Application Notes, MMX (TM) Technology C Intrinsics, http://developer. intel.com/technology/collateral/pentiumii/907/907. htm.</ref-fulltext></reference></bibliography></tail></bibrecord></item></abstracts-retrieval-response>