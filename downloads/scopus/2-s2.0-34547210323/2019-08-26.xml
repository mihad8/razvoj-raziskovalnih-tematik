<abstracts-retrieval-response xmlns="http://www.elsevier.com/xml/svapi/abstract/dtd" xmlns:dn="http://www.elsevier.com/xml/svapi/abstract/dtd" xmlns:ait="http://www.elsevier.com/xml/ani/ait" xmlns:ce="http://www.elsevier.com/xml/ani/common" xmlns:cto="http://www.elsevier.com/xml/cto/dtd" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:prism="http://prismstandard.org/namespaces/basic/2.0/" xmlns:xocs="http://www.elsevier.com/xml/xocs/dtd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><coredata><prism:url>https://api.elsevier.com/content/abstract/scopus_id/34547210323</prism:url><dc:identifier>SCOPUS_ID:34547210323</dc:identifier><eid>2-s2.0-34547210323</eid><dc:title>Influence of security mechanisms on web services interoperability Vpliv varnostnih mehanizmov na povezljivost spletnih storitev</dc:title><prism:aggregationType>Journal</prism:aggregationType><srctype>j</srctype><subtype>ar</subtype><subtypeDescription>Article</subtypeDescription><citedby-count>0</citedby-count><prism:publicationName>Elektrotehniski Vestnik/Electrotechnical Review</prism:publicationName><source-id>16651</source-id><prism:issn>00135852</prism:issn><prism:volume>74</prism:volume><prism:issueIdentifier>3</prism:issueIdentifier><prism:startingPage>113</prism:startingPage><prism:endingPage>118</prism:endingPage><prism:pageRange>113-118</prism:pageRange><prism:coverDate>2007-08-01</prism:coverDate><openaccess/><openaccessFlag/><dc:creator><author seq="1" auid="17346380700"><ce:initials>S.</ce:initials><ce:indexed-name>Kocbek S.</ce:indexed-name><ce:surname>Kocbek</ce:surname><ce:given-name>Simon</ce:given-name><preferred-name><ce:initials>S.</ce:initials><ce:indexed-name>Kocbek S.</ce:indexed-name><ce:surname>Kocbek</ce:surname><ce:given-name>Simon</ce:given-name></preferred-name><author-url>https://api.elsevier.com/content/author/author_id/17346380700</author-url><affiliation id="60004060" href="https://api.elsevier.com/content/affiliation/affiliation_id/60004060"/></author></dc:creator><dc:description><abstract xmlns="" original="y" xml:lang="eng"><ce:para>By integration of information systems using web services, special focus has to be put on security. This article studies security mechanisms for web services. We describe use of cryptography, such as digital signature and encryption in WSS (Web Services Security) specification. We study support for secure web services development on Java platform and .NET framework, analyze interoperability, and implement a secure web service in Microsoft .NET and its client in Java. We identify and analyze the problems related to interoperability. When we talk about security in web services, we have to think about many things. Because web services connect many nodes in a network, we have to secure every single node with limited access, identity management, password administration, authorization, etc. But special care must also be taken of securing messages that are sent between web services. They are called SOAP messages and they are constructed from XML (extensible Markup Language). WSS standard dictates how to use security mechanisms in a SOAP message (figure 1). It does not say which security mechanisms to include; it just says how to include them. Because of that, the safety of a message depends on application's security requests and the proper use of WSS standard. There are several main security mechanisms that can be included in a SOAP message: security tokens, encrypted data, digital signatures and time stamps. Security tokens are used for authentication and authorization. There are many security tokens defined and also the introduction of new ones is allowed in WSS. Three main types of security tokens are known: username tokens, binary tokens and XML security tokens. Username security tokens are identified with 〈UsemameToken〉 tag. They are designed for including username and password information into a SOAP message header. Password can be visible or hidden. Username tokens are popular mainly because of their simplicity. Binary security tokens are identified with 〈BinarySecurityToken〉. They can contain binary data such as digital certificates used for authentication. XML tokens do not have common identification tag as binary and username tokens do. Instead of that every XML token has its own tag. Encryption in SOAP messages is based on XML encryption standard. It is possible to encrypt all of the content in the message or just parts of the message. Digital signature in WSS is XML digital signature. It has two important roles. First one is to verify the validity of security tokens. For instance certificates in binary security tokens can be used for user's authentication. Because just owning a certificate and include it in a message is not enough proof of sender's identity, he must sign the certificate with his personal key. The second role of digital signature in WSS is to check and proof the integrity of the message. With time stamps we can import time information in messages. They tell us when a message was created, when it was received and when it expires. We must take in consideration that time stamp refers to the time on the system the message was created on. Our thesis was that all security mechanisms mentioned above should not influence over interoperability of web services. Having that in mind, we designed an application composed of two components: a web service in .NET and its client in Java. With the application, bank account holders can use the functionality that the bank offers to them (figure 2). All the messages, sent between the service and the client, are secured with digital signature, encryption, authentication information and a time stamp. As we discovered, WSS standard has some influence on interoperability, but all the problems were successfully solved. The main problems were default algorithms used for encryption and key generation on both platforms. Especially on Java platform, the problem was JCE (Java Cryptography Extension) package which is an algorithm framework used for encryption. The package is a part of Java SDK (Software Development Kit) and has limited support for some algorithms that are illegal in some countries (table 1). In spite of all that WSS standard itself does not interfere with web service interoperability.</ce:para></abstract></dc:description><link href="https://api.elsevier.com/content/abstract/scopus_id/34547210323" rel="self"/><link href="https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&amp;scp=34547210323&amp;origin=inward" rel="scopus"/><link href="https://www.scopus.com/inward/citedby.uri?partnerID=HzOxMe3b&amp;scp=34547210323&amp;origin=inward" rel="scopus-citedby"/></coredata><affiliation id="60078305" href="https://api.elsevier.com/content/affiliation/affiliation_id/60078305"><affilname>Univerza v Mariboru Fakultete za Elektrotehniko, računalništvo in Informatiko</affilname><affiliation-city>Maribor</affiliation-city><affiliation-country>Slovenia</affiliation-country></affiliation><affiliation id="60004060" href="https://api.elsevier.com/content/affiliation/affiliation_id/60004060"><affilname>Univerza v Mariboru</affilname><affiliation-city>Maribor</affiliation-city><affiliation-country>Slovenia</affiliation-country></affiliation><authors><author seq="1" auid="17346380700"><ce:initials>S.</ce:initials><ce:indexed-name>Kocbek S.</ce:indexed-name><ce:surname>Kocbek</ce:surname><ce:given-name>Simon</ce:given-name><preferred-name><ce:initials>S.</ce:initials><ce:indexed-name>Kocbek S.</ce:indexed-name><ce:surname>Kocbek</ce:surname><ce:given-name>Simon</ce:given-name></preferred-name><author-url>https://api.elsevier.com/content/author/author_id/17346380700</author-url><affiliation id="60004060" href="https://api.elsevier.com/content/affiliation/affiliation_id/60004060"/></author><author seq="2" auid="7003941190"><ce:initials>M.B.</ce:initials><ce:indexed-name>Juric M.B.</ce:indexed-name><ce:surname>Jurič</ce:surname><ce:given-name>Matjaž B.</ce:given-name><preferred-name><ce:initials>M.B.</ce:initials><ce:indexed-name>Jurič M.</ce:indexed-name><ce:surname>Jurič</ce:surname><ce:given-name>Matjaž B.</ce:given-name></preferred-name><author-url>https://api.elsevier.com/content/author/author_id/7003941190</author-url><affiliation id="60078305" href="https://api.elsevier.com/content/affiliation/affiliation_id/60078305"/></author></authors><language xml:lang="slv"/><authkeywords><author-keyword>.NET</author-keyword><author-keyword>Integration</author-keyword><author-keyword>Java</author-keyword><author-keyword>Web services</author-keyword><author-keyword>WS-security</author-keyword></authkeywords><idxterms><mainterm weight="a" candidate="n">Java Cryptography Extension (JCE)</mainterm><mainterm weight="a" candidate="n">Password administration</mainterm><mainterm weight="a" candidate="n">Software Development Kit</mainterm><mainterm weight="a" candidate="n">WS-security</mainterm></idxterms><subject-areas><subject-area code="2208" abbrev="ENGI">Electrical and Electronic Engineering</subject-area></subject-areas><item xmlns=""><ait:process-info><ait:date-delivered year="2019" month="08" day="15" timestamp="2019-08-15T04:06:10.000010-04:00"/><ait:date-sort year="2007" month="08" day="01"/><ait:status type="core" state="update" stage="S300"/></ait:process-info><bibrecord><item-info><copyright type="Elsevier">Copyright 2008 Elsevier B.V., All rights reserved.</copyright><itemidlist><itemid idtype="PUI">47116091</itemid><itemid idtype="CPX">20073110715963</itemid><itemid idtype="SCP">34547210323</itemid><itemid idtype="SGR">34547210323</itemid></itemidlist><history><date-created year="2007" month="08" day="01"/></history><dbcollection>CPX</dbcollection><dbcollection>Scopusbase</dbcollection></item-info><head><citation-info><citation-type code="ar"/><citation-language xml:lang="slv" language="Slovenian"/><abstract-language xml:lang="eng" language="English"/><abstract-language xml:lang="slv" language="Slovenian"/><author-keywords><author-keyword xml:lang="eng">.NET</author-keyword><author-keyword xml:lang="eng">Integration</author-keyword><author-keyword xml:lang="eng">Java</author-keyword><author-keyword xml:lang="eng">Web services</author-keyword><author-keyword xml:lang="eng">WS-security</author-keyword></author-keywords></citation-info><citation-title><titletext xml:lang="eng" original="n" language="English">Influence of security mechanisms on web services interoperability</titletext><titletext xml:lang="slv" original="y" language="Slovenian">Vpliv varnostnih mehanizmov na povezljivost spletnih storitev</titletext></citation-title><author-group><author auid="17346380700" seq="1"><ce:initials>S.</ce:initials><ce:indexed-name>Kocbek S.</ce:indexed-name><ce:surname>Kocbek</ce:surname><ce:given-name>Simon</ce:given-name><preferred-name><ce:initials>S.</ce:initials><ce:indexed-name>Kocbek S.</ce:indexed-name><ce:surname>Kocbek</ce:surname><ce:given-name>Simon</ce:given-name></preferred-name></author><affiliation afid="60004060" country="svn"><organization>Fakulteta za Zdravstvene Vede</organization><address-part>Žitna ulica 15</address-part><city-group>2001 Maribor</city-group><affiliation-id afid="60004060"/><country>Slovenia</country></affiliation></author-group><author-group><author auid="7003941190" seq="2"><ce:initials>M.B.</ce:initials><ce:indexed-name>Juric M.B.</ce:indexed-name><ce:surname>Jurič</ce:surname><ce:given-name>Matjaž B.</ce:given-name><preferred-name><ce:initials>M.B.</ce:initials><ce:indexed-name>Jurič M.</ce:indexed-name><ce:surname>Jurič</ce:surname><ce:given-name>Matjaž B.</ce:given-name></preferred-name></author><affiliation afid="60078305" country="svn"><organization>Fakulteta za Elektrotehniko, Računalništvo in Informatiko</organization><address-part>Smetanova 17</address-part><city-group>2000 Maribor</city-group><affiliation-id afid="60078305"/><country>Slovenia</country></affiliation></author-group><correspondence><person><ce:initials>S.</ce:initials><ce:indexed-name>Kocbek S.</ce:indexed-name><ce:surname>Kocbek</ce:surname></person><affiliation country="svn"><organization>Fakulteta za Zdravstvene Vede</organization><address-part>Žitna ulica 15</address-part><city-group>2001 Maribor</city-group><country>Slovenia</country></affiliation></correspondence><abstracts><abstract original="y" xml:lang="eng"><ce:para>By integration of information systems using web services, special focus has to be put on security. This article studies security mechanisms for web services. We describe use of cryptography, such as digital signature and encryption in WSS (Web Services Security) specification. We study support for secure web services development on Java platform and .NET framework, analyze interoperability, and implement a secure web service in Microsoft .NET and its client in Java. We identify and analyze the problems related to interoperability. When we talk about security in web services, we have to think about many things. Because web services connect many nodes in a network, we have to secure every single node with limited access, identity management, password administration, authorization, etc. But special care must also be taken of securing messages that are sent between web services. They are called SOAP messages and they are constructed from XML (extensible Markup Language). WSS standard dictates how to use security mechanisms in a SOAP message (figure 1). It does not say which security mechanisms to include; it just says how to include them. Because of that, the safety of a message depends on application's security requests and the proper use of WSS standard. There are several main security mechanisms that can be included in a SOAP message: security tokens, encrypted data, digital signatures and time stamps. Security tokens are used for authentication and authorization. There are many security tokens defined and also the introduction of new ones is allowed in WSS. Three main types of security tokens are known: username tokens, binary tokens and XML security tokens. Username security tokens are identified with 〈UsemameToken〉 tag. They are designed for including username and password information into a SOAP message header. Password can be visible or hidden. Username tokens are popular mainly because of their simplicity. Binary security tokens are identified with 〈BinarySecurityToken〉. They can contain binary data such as digital certificates used for authentication. XML tokens do not have common identification tag as binary and username tokens do. Instead of that every XML token has its own tag. Encryption in SOAP messages is based on XML encryption standard. It is possible to encrypt all of the content in the message or just parts of the message. Digital signature in WSS is XML digital signature. It has two important roles. First one is to verify the validity of security tokens. For instance certificates in binary security tokens can be used for user's authentication. Because just owning a certificate and include it in a message is not enough proof of sender's identity, he must sign the certificate with his personal key. The second role of digital signature in WSS is to check and proof the integrity of the message. With time stamps we can import time information in messages. They tell us when a message was created, when it was received and when it expires. We must take in consideration that time stamp refers to the time on the system the message was created on. Our thesis was that all security mechanisms mentioned above should not influence over interoperability of web services. Having that in mind, we designed an application composed of two components: a web service in .NET and its client in Java. With the application, bank account holders can use the functionality that the bank offers to them (figure 2). All the messages, sent between the service and the client, are secured with digital signature, encryption, authentication information and a time stamp. As we discovered, WSS standard has some influence on interoperability, but all the problems were successfully solved. The main problems were default algorithms used for encryption and key generation on both platforms. Especially on Java platform, the problem was JCE (Java Cryptography Extension) package which is an algorithm framework used for encryption. The package is a part of Java SDK (Software Development Kit) and has limited support for some algorithms that are illegal in some countries (table 1). In spite of all that WSS standard itself does not interfere with web service interoperability.</ce:para></abstract></abstracts><source srcid="16651" type="j" country="svn"><sourcetitle>Elektrotehniski Vestnik/Electrotechnical Review</sourcetitle><sourcetitle-abbrev>Elektroteh Vestn Electrotech Rev</sourcetitle-abbrev><issn type="print">00135852</issn><codencode>ELVEA</codencode><volisspag><voliss volume="74" issue="3"/><pagerange first="113" last="118"/></volisspag><publicationyear first="2007"/><publicationdate><year>2007</year><date-text xfab-added="true">2007</date-text></publicationdate></source><enhancement><classificationgroup><classifications type="CPXCLASS"><classification>716</classification><classification>723.1.1</classification><classification>723.2</classification><classification>723.5</classification></classifications><classifications type="ASJC"><classification>2208</classification></classifications><classifications type="SUBJABBR"><classification>ENGI</classification></classifications></classificationgroup></enhancement></head><tail><bibliography refcount="11"><reference id="1"><ref-info><refd-itemidlist><itemid idtype="SGR">24344435004</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>J.</ce:initials><ce:indexed-name>Rosenberg J.</ce:indexed-name><ce:surname>Rosenberg</ce:surname></author><author seq="2"><ce:initials>D.</ce:initials><ce:indexed-name>Remy D.</ce:indexed-name><ce:surname>Remy</ce:surname></author></ref-authors><ref-sourcetitle>Securing Web Services with WS-Security: Demystifying WS-Security, WS-Policy, SAML, XML Signature, and XML Encryption</ref-sourcetitle><ref-publicationyear first="2004"/><ref-text>Sams Publishing</ref-text></ref-info><ref-fulltext>J. Rosenberg, D. Remy, Securing Web Services with WS-Security: Demystifying WS-Security, WS-Policy, SAML, XML Signature, and XML Encryption, Sams Publishing, 2004</ref-fulltext></reference><reference id="2"><ref-info><refd-itemidlist><itemid idtype="SGR">34547229000</itemid></refd-itemidlist><ref-website><ce:e-address type="url">http://www.oasis-open. org/committees/tc_home.php?wg_abbrev=wss</ce:e-address></ref-website><ref-text>OASIS Web Services Security Technical Committee</ref-text></ref-info><ref-fulltext>OASIS Web Services Security Technical Committee, http://www.oasis-open. org/committees/tc_home.php?wg_abbrev=wss</ref-fulltext></reference><reference id="3"><ref-info><refd-itemidlist><itemid idtype="SGR">84871199622</itemid></refd-itemidlist><ref-sourcetitle>W3C, SOAP Specifications</ref-sourcetitle><ref-website><ce:e-address type="url">http://www.w3.org/TR/soap</ce:e-address></ref-website></ref-info><ref-fulltext>W3C, SOAP Specifications, http://www.w3.org/TR/soap/</ref-fulltext></reference><reference id="4"><ref-info><refd-itemidlist><itemid idtype="SGR">0003855874</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>E.</ce:initials><ce:indexed-name>Newcomer E.</ce:indexed-name><ce:surname>Newcomer</ce:surname></author></ref-authors><ref-sourcetitle>Understanding Web Services: XML, WSDL, SOAP and UDDI</ref-sourcetitle><ref-publicationyear first="2002"/><ref-text>Addison Wesley</ref-text></ref-info><ref-fulltext>E. Newcomer, Understanding Web Services: XML, WSDL, SOAP and UDDI, Addison Wesley, 2002</ref-fulltext></reference><reference id="5"><ref-info><refd-itemidlist><itemid idtype="SGR">34547150911</itemid></refd-itemidlist><ref-sourcetitle>W3C, XML Signature Syntax and Processing, Recommendation</ref-sourcetitle><ref-website><ce:e-address type="url">http://www.w3.org/TR/xmldsig-core</ce:e-address></ref-website></ref-info><ref-fulltext>W3C, XML Signature Syntax and Processing, Recommendation, http://www.w3.org/TR/xmldsig-core/</ref-fulltext></reference><reference id="6"><ref-info><refd-itemidlist><itemid idtype="SGR">34547197130</itemid></refd-itemidlist><ref-sourcetitle>W3C, XML Encryption Syntax and Processing, Recommendation</ref-sourcetitle><ref-website><ce:e-address type="url">http://www.w3.org/TR/xmlenc-core</ce:e-address></ref-website></ref-info><ref-fulltext>W3C, XML Encryption Syntax and Processing, Recommendation, http://www.w3.org/TR/xmlenc-core/</ref-fulltext></reference><reference id="7"><ref-info><refd-itemidlist><itemid idtype="SGR">24644517076</itemid></refd-itemidlist><ref-sourcetitle>Microsoft, Web Services Enhancements</ref-sourcetitle><ref-website><ce:e-address type="url">http://msdn.microsoft.com/ webservices/webservices/building/wse/default.aspx</ce:e-address></ref-website></ref-info><ref-fulltext>Microsoft, Web Services Enhancements, http://msdn.microsoft.com/ webservices/webservices/building/wse/default.aspx</ref-fulltext></reference><reference id="8"><ref-info><refd-itemidlist><itemid idtype="SGR">34547183180</itemid></refd-itemidlist><ref-sourcetitle>Eclipse</ref-sourcetitle><ref-website><ce:e-address type="url">http://www.eclipse.org</ce:e-address></ref-website></ref-info><ref-fulltext>Eclipse, http://www.eclipse.org/</ref-fulltext></reference><reference id="9"><ref-info><refd-itemidlist><itemid idtype="SGR">34547220793</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:indexed-name>Systinet</ce:indexed-name><ce:surname>Systinet</ce:surname></author></ref-authors><ref-sourcetitle>Systinet Developer</ref-sourcetitle><ref-website><ce:e-address type="url">http://www.systinet.com/products/sd/ overview</ce:e-address></ref-website></ref-info><ref-fulltext>Systinet, Systinet Developer, http://www.systinet.com/products/sd/ overview</ref-fulltext></reference><reference id="10"><ref-info><refd-itemidlist><itemid idtype="SGR">34547187953</itemid></refd-itemidlist><ref-sourcetitle>RSA Security, What</ref-sourcetitle><ref-website><ce:e-address type="url">http://www.rsasecurity.com/ rsalabs/node.asp?id=2184</ce:e-address></ref-website><ref-text>is a Digital Envelope</ref-text></ref-info><ref-fulltext>RSA Security, What is a Digital Envelope, http://www.rsasecurity.com/ rsalabs/node.asp?id=2184</ref-fulltext></reference><reference id="11"><ref-info><refd-itemidlist><itemid idtype="SGR">34547182133</itemid></refd-itemidlist><ref-sourcetitle>Sun Microsystems, Java Cryptography Extension (JCE)</ref-sourcetitle><ref-website><ce:e-address type="url">http://java.sun.com/ products/jce</ce:e-address></ref-website></ref-info><ref-fulltext>Sun Microsystems, Java Cryptography Extension (JCE), http://java.sun.com/ products/jce/</ref-fulltext></reference></bibliography></tail></bibrecord></item></abstracts-retrieval-response>