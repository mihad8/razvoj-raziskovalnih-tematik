<abstracts-retrieval-response xmlns="http://www.elsevier.com/xml/svapi/abstract/dtd" xmlns:dn="http://www.elsevier.com/xml/svapi/abstract/dtd" xmlns:ait="http://www.elsevier.com/xml/ani/ait" xmlns:ce="http://www.elsevier.com/xml/ani/common" xmlns:cto="http://www.elsevier.com/xml/cto/dtd" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:prism="http://prismstandard.org/namespaces/basic/2.0/" xmlns:xocs="http://www.elsevier.com/xml/xocs/dtd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><coredata><prism:url>https://api.elsevier.com/content/abstract/scopus_id/42949118239</prism:url><dc:identifier>SCOPUS_ID:42949118239</dc:identifier><eid>2-s2.0-42949118239</eid><pii>792669928</pii><prism:doi>10.1080/08839510701768382</prism:doi><dc:title>Learning random numbers: A matlab anomaly</dc:title><prism:aggregationType>Journal</prism:aggregationType><srctype>j</srctype><subtype>ar</subtype><subtypeDescription>Article</subtypeDescription><citedby-count>5</citedby-count><prism:publicationName>Applied Artificial Intelligence</prism:publicationName><source-id>23673</source-id><prism:issn>08839514 10876545</prism:issn><prism:volume>22</prism:volume><prism:issueIdentifier>3</prism:issueIdentifier><prism:startingPage>254</prism:startingPage><prism:endingPage>265</prism:endingPage><prism:pageRange>254-265</prism:pageRange><prism:coverDate>2008-03-01</prism:coverDate><openaccess>2</openaccess><openaccessFlag/><dc:creator><author seq="1" auid="55925959700"><ce:initials>P.</ce:initials><ce:indexed-name>Savicky P.</ce:indexed-name><ce:surname>Savicky</ce:surname><ce:given-name>Petr</ce:given-name><preferred-name><ce:initials>P.</ce:initials><ce:indexed-name>Savicky P.</ce:indexed-name><ce:surname>Savicky</ce:surname><ce:given-name>Petr</ce:given-name></preferred-name><author-url>https://api.elsevier.com/content/author/author_id/55925959700</author-url><affiliation id="60049290" href="https://api.elsevier.com/content/affiliation/affiliation_id/60049290"/></author></dc:creator><dc:description><abstract xmlns="" original="y" xml:lang="eng"><ce:para>We describe how dependencies between random numbers generated with some popular pseudo-random number generators can be detected using general purpose machine-learning techniques. This is a novel approach, since usually pseudo-random number generators are evaluated using tests specifically designed for this purpose. Such specific tests are more sensitive. Hence, detecting the dependence using machine-learning methods implies that the dependence is indeed very strong. The most important example of a generator, where dependencies may easily be found using our approach, is MATLAB's function rand if the method state is used. This method was the default in MATLAB versions between 5 (1995) and 7.3 (2006b), i.e., for more than 10 years. In order to evaluate the strength of the dependence in it, we used the same machine-learning tools to detect dependencies in some other random number generators, which are known to be bad or insufficient for large simulations: the infamous RANDU, ANSIC, the oldest generator in C library, minimal standard generator, suggested by Park and Miller (1988), and the rand function in Microsoft C compiler.</ce:para></abstract></dc:description><link href="https://api.elsevier.com/content/abstract/scopus_id/42949118239" rel="self"/><link href="https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&amp;scp=42949118239&amp;origin=inward" rel="scopus"/><link href="https://www.scopus.com/inward/citedby.uri?partnerID=HzOxMe3b&amp;scp=42949118239&amp;origin=inward" rel="scopus-citedby"/></coredata><affiliation id="60031106" href="https://api.elsevier.com/content/affiliation/affiliation_id/60031106"><affilname>University of Ljubljana</affilname><affiliation-city>Ljubljana</affiliation-city><affiliation-country>Slovenia</affiliation-country></affiliation><affiliation id="60049290" href="https://api.elsevier.com/content/affiliation/affiliation_id/60049290"><affilname>Institute of Computer Science of the Academy of Sciences of the Czech Republic</affilname><affiliation-city>Prague</affiliation-city><affiliation-country>Czech Republic</affiliation-country></affiliation><authors><author seq="1" auid="55925959700"><ce:initials>P.</ce:initials><ce:indexed-name>Savicky P.</ce:indexed-name><ce:surname>Savicky</ce:surname><ce:given-name>Petr</ce:given-name><preferred-name><ce:initials>P.</ce:initials><ce:indexed-name>Savicky P.</ce:indexed-name><ce:surname>Savicky</ce:surname><ce:given-name>Petr</ce:given-name></preferred-name><author-url>https://api.elsevier.com/content/author/author_id/55925959700</author-url><affiliation id="60049290" href="https://api.elsevier.com/content/affiliation/affiliation_id/60049290"/></author><author seq="2" auid="55900495300"><ce:initials>M.</ce:initials><ce:indexed-name>Robnik-Sikonja M.</ce:indexed-name><ce:surname>Robnik-Šikonja</ce:surname><ce:given-name>Marko</ce:given-name><preferred-name><ce:initials>M.</ce:initials><ce:indexed-name>Robnik-Šikonja M.</ce:indexed-name><ce:surname>Robnik-Šikonja</ce:surname><ce:given-name>Marko</ce:given-name></preferred-name><author-url>https://api.elsevier.com/content/author/author_id/55900495300</author-url><affiliation id="60031106" href="https://api.elsevier.com/content/affiliation/affiliation_id/60031106"/><affiliation id="60031106" href="https://api.elsevier.com/content/affiliation/affiliation_id/60031106"/></author></authors><language xml:lang="eng"/><authkeywords/><idxterms><mainterm weight="a" candidate="n">Machine-learning methods</mainterm><mainterm weight="a" candidate="n">Matlab anomaly</mainterm><mainterm weight="a" candidate="n">Random numbers</mainterm></idxterms><subject-areas><subject-area code="1702" abbrev="COMP">Artificial Intelligence</subject-area></subject-areas><item xmlns=""><xocs:meta><xocs:funding-list has-funding-info="1" pui-match="primary"><xocs:funding-addon-generated-timestamp>2019-03-22T06:49:34Z</xocs:funding-addon-generated-timestamp><xocs:funding-addon-type>http://vtw.elsevier.com/data/voc/AddOnTypes/50.7/nlp</xocs:funding-addon-type><xocs:funding><xocs:funding-agency-matched-string>Academy of Sciences of the Czech Republic</xocs:funding-agency-matched-string><xocs:funding-id>1ET100300517</xocs:funding-id><xocs:funding-id>AV0Z10300504</xocs:funding-id><xocs:funding-agency>Academy of Sciences Republic of Uzbekistan</xocs:funding-agency><xocs:funding-agency-id>http://data.elsevier.com/vocabulary/SciValFunders/501100002673</xocs:funding-agency-id><xocs:funding-agency-country>http://sws.geonames.org/1512440/</xocs:funding-agency-country></xocs:funding><xocs:funding><xocs:funding-agency-matched-string>Slovene Ministry of Higher Education, Science and Technology</xocs:funding-agency-matched-string><xocs:funding-id>P2-0209</xocs:funding-id><xocs:funding-agency-acronym>MEST</xocs:funding-agency-acronym><xocs:funding-agency>Ministry of Education, Science and Technology</xocs:funding-agency><xocs:funding-agency-id>http://data.elsevier.com/vocabulary/SciValFunders/501100004085</xocs:funding-agency-id><xocs:funding-agency-country>http://sws.geonames.org/1835841/</xocs:funding-agency-country></xocs:funding><xocs:funding-text>The first author (PS) was supported by Academy of Sciences of the Czech Republic under grant 1ET100300517 (Information Society) and by the Institutional Research Plan AV0Z10300504. The second author (MRS) was supported by Slovene Ministry of Higher Education, Science and Technology through the research program P2-0209.</xocs:funding-text></xocs:funding-list></xocs:meta><ait:process-info><ait:date-delivered year="2017" month="08" day="13" timestamp="2017-08-13T04:58:35.000035-04:00"/><ait:date-sort year="2008" month="03" day="01"/><ait:status type="core" state="update" stage="S300"/></ait:process-info><bibrecord><item-info><copyright type="Elsevier">Copyright 2008 Elsevier B.V., All rights reserved.</copyright><itemidlist><ce:pii>792669928</ce:pii><ce:doi>10.1080/08839510701768382</ce:doi><itemid idtype="PUI">351612502</itemid><itemid idtype="CPX">20081911241818</itemid><itemid idtype="SCP">42949118239</itemid><itemid idtype="SGR">42949118239</itemid></itemidlist><history><date-created year="2008" month="05" day="07"/></history><dbcollection>CPX</dbcollection><dbcollection>Scopusbase</dbcollection></item-info><head><citation-info><citation-type code="ar"/><citation-language xml:lang="eng" language="English"/><abstract-language xml:lang="eng" language="English"/></citation-info><citation-title><titletext xml:lang="eng" original="y" language="English">Learning random numbers: A matlab anomaly</titletext></citation-title><author-group><author auid="55925959700" seq="1"><ce:initials>P.</ce:initials><ce:indexed-name>Savicky P.</ce:indexed-name><ce:surname>Savicky</ce:surname><ce:given-name>Petr</ce:given-name><preferred-name><ce:initials>P.</ce:initials><ce:indexed-name>Savicky P.</ce:indexed-name><ce:surname>Savicky</ce:surname><ce:given-name>Petr</ce:given-name></preferred-name></author><affiliation afid="60049290" country="cze"><organization>Institute of Computer Science</organization><organization>Academy of Sciences of Czech Republic Praha</organization><affiliation-id afid="60049290"/><country>Czech Republic</country></affiliation></author-group><author-group><author auid="55900495300" seq="2"><ce:initials>M.</ce:initials><ce:indexed-name>Robnik-Sikonja M.</ce:indexed-name><ce:surname>Robnik-Šikonja</ce:surname><ce:given-name>Marko</ce:given-name><preferred-name><ce:initials>M.</ce:initials><ce:indexed-name>Robnik-Šikonja M.</ce:indexed-name><ce:surname>Robnik-Šikonja</ce:surname><ce:given-name>Marko</ce:given-name></preferred-name></author><affiliation afid="60031106" country="svn"><organization>University of Ljubljana</organization><organization>Faculty of Computer and Information Science</organization><city-group>Ljubljana</city-group><affiliation-id afid="60031106"/><country>Slovenia</country></affiliation></author-group><author-group><author auid="55900495300" seq="2"><ce:initials>M.</ce:initials><ce:indexed-name>Robnik-Sikonja M.</ce:indexed-name><ce:surname>Robnik-Šikonja</ce:surname><ce:given-name>Marko</ce:given-name><preferred-name><ce:initials>M.</ce:initials><ce:indexed-name>Robnik-Šikonja M.</ce:indexed-name><ce:surname>Robnik-Šikonja</ce:surname><ce:given-name>Marko</ce:given-name></preferred-name></author><affiliation afid="60031106" country="svn"><organization>University of Ljubljana</organization><organization>Faculty of Computer and Information Science</organization><address-part>Trzžaška 25</address-part><city-group>Ljubljana, SI-1000</city-group><affiliation-id afid="60031106"/><country>Slovenia</country></affiliation></author-group><correspondence><person><ce:initials>M.</ce:initials><ce:indexed-name>Robnik-Sikonja M.</ce:indexed-name><ce:degrees>Dr.</ce:degrees><ce:surname>Robnik-Šikonja</ce:surname></person><affiliation country="svn"><organization>University of Ljubljana</organization><organization>Faculty of Computer and Information Science</organization><address-part>Trzžaška 25</address-part><city-group>Ljubljana, SI-1000</city-group><country>Slovenia</country></affiliation></correspondence><abstracts><abstract original="y" xml:lang="eng"><ce:para>We describe how dependencies between random numbers generated with some popular pseudo-random number generators can be detected using general purpose machine-learning techniques. This is a novel approach, since usually pseudo-random number generators are evaluated using tests specifically designed for this purpose. Such specific tests are more sensitive. Hence, detecting the dependence using machine-learning methods implies that the dependence is indeed very strong. The most important example of a generator, where dependencies may easily be found using our approach, is MATLAB's function rand if the method state is used. This method was the default in MATLAB versions between 5 (1995) and 7.3 (2006b), i.e., for more than 10 years. In order to evaluate the strength of the dependence in it, we used the same machine-learning tools to detect dependencies in some other random number generators, which are known to be bad or insufficient for large simulations: the infamous RANDU, ANSIC, the oldest generator in C library, minimal standard generator, suggested by Park and Miller (1988), and the rand function in Microsoft C compiler.</ce:para></abstract></abstracts><source srcid="23673" type="j" country="usa"><sourcetitle>Applied Artificial Intelligence</sourcetitle><sourcetitle-abbrev>Appl Artif Intell</sourcetitle-abbrev><issn type="print">08839514</issn><issn type="electronic">10876545</issn><codencode>AAINE</codencode><volisspag><voliss volume="22" issue="3"/><pagerange first="254" last="265"/></volisspag><publicationyear first="2008"/><publicationdate><year>2008</year><month>03</month><date-text xfab-added="true">March 2008</date-text></publicationdate></source><enhancement><classificationgroup><classifications type="CPXCLASS"><classification>731.5</classification><classification>921.6</classification><classification>922.1</classification></classifications><classifications type="ASJC"><classification>1702</classification></classifications><classifications type="SUBJABBR"><classification>COMP</classification></classifications></classificationgroup></enhancement></head><tail><bibliography refcount="17"><reference id="1"><ref-info><ref-title><ref-titletext>Random forests</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">0035478854</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>L.</ce:initials><ce:indexed-name>Breiman L.</ce:indexed-name><ce:surname>Breiman</ce:surname></author></ref-authors><ref-sourcetitle>Machine Learning Journal</ref-sourcetitle><ref-publicationyear first="2001"/><ref-volisspag><voliss volume="45"/><pagerange first="5" last="32"/></ref-volisspag></ref-info><ref-fulltext>Breiman, L. 2001. Random forests. Machine Learning Journal 45:5-32.</ref-fulltext></reference><reference id="2"><ref-info><refd-itemidlist><itemid idtype="SGR">0003649439</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>O.</ce:initials><ce:indexed-name>Goldreich O.</ce:indexed-name><ce:surname>Goldreich</ce:surname></author></ref-authors><ref-sourcetitle>Modern Cryptography Probabilislic Proofs and Pseudorandomnes. (Algorithms and Combinatorics</ref-sourcetitle><ref-publicationyear first="1998"/><ref-volisspag><voliss volume="17"/></ref-volisspag><ref-text>Berlin: Springer-Verlag</ref-text></ref-info><ref-fulltext>Goldreich, O. 1998. Modern Cryptography Probabilislic Proofs and Pseudorandomnes. (Algorithms and Combinatorics, Vol. 17. Berlin: Springer-Verlag.</ref-fulltext></reference><reference id="3"><ref-info><refd-itemidlist><itemid idtype="SGR">42949139021</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>O.</ce:initials><ce:indexed-name>Goldreich O.</ce:indexed-name><ce:surname>Goldreich</ce:surname></author></ref-authors><ref-sourcetitle>Lecture Notes on Pseudorandomness - Part I Polynomial-Time Generators</ref-sourcetitle><ref-publicationyear first="2000"/><ref-website><ce:e-address type="url">http://www.wisdom.weizmann.ac.il/oded/c-indist.html</ce:e-address></ref-website><ref-text>Accessed 7 February 2008</ref-text></ref-info><ref-fulltext>Goldreich, O. 2000. Lecture Notes on Pseudorandomness - Part I Polynomial-Time Generators. http://www.wisdom.weizmann.ac.il/oded/c-indist. html. Accessed 7 February 2008.</ref-fulltext></reference><reference id="4"><ref-info><ref-title><ref-titletext>The Art of Computer Programming</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">0003294665</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>D.E.</ce:initials><ce:indexed-name>Knuth D.E.</ce:indexed-name><ce:surname>Knuth</ce:surname></author></ref-authors><ref-sourcetitle>Seminumerical Algorithms</ref-sourcetitle><ref-publicationyear first="1998"/><ref-volisspag><voliss volume="2"/></ref-volisspag><ref-text>3rd ed. Reading, MA: Addison-Wesley</ref-text></ref-info><ref-fulltext>Knuth, D. E. 1998. The Art of Computer Programming. Vol. 2: Seminumerical Algorithms, 3rd ed. Reading, MA: Addison-Wesley.</ref-fulltext></reference><reference id="5"><ref-info><ref-title><ref-titletext>Good parameter sets for combined multiple recursive random number generators</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">0000181327</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>P.</ce:initials><ce:indexed-name>L'Ecuyer P.</ce:indexed-name><ce:surname>L'Ecuyer</ce:surname></author></ref-authors><ref-sourcetitle>Operations Research</ref-sourcetitle><ref-publicationyear first="1999"/><ref-volisspag><voliss volume="47"/><pagerange first="159" last="164"/></ref-volisspag></ref-info><ref-fulltext>L'Ecuyer, P. 1999. Good parameter sets for combined multiple recursive random number generators. Operations Research 47:159-164.</ref-fulltext></reference><reference id="6"><ref-info><ref-title><ref-titletext>Uniform random number generation</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">36549020354</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>P.</ce:initials><ce:indexed-name>L'Ecuyer P.</ce:indexed-name><ce:surname>L'Ecuyer</ce:surname></author></ref-authors><ref-sourcetitle>Handbooks in Operations Research and Management Science: Simulation</ref-sourcetitle><ref-publicationyear first="2006"/><ref-text>eds. S. G. Henderson and B. L. Nelson, Amsterdam: Elsevier</ref-text></ref-info><ref-fulltext>L'Ecuyer, P. 2006. Uniform random number generation. In: Handbooks in Operations Research and Management Science: Simulation, eds. S. G. Henderson and B. L. Nelson, Amsterdam: Elsevier.</ref-fulltext></reference><reference id="7"><ref-info><ref-title><ref-titletext>TestU01: A C Library for Empirical Testing of Random Number Generators. ACM</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">34548237327</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>P.</ce:initials><ce:indexed-name>L'Ecuyer P.</ce:indexed-name><ce:surname>L'Ecuyer</ce:surname></author><author seq="2"><ce:initials>R.</ce:initials><ce:indexed-name>Simard R.</ce:indexed-name><ce:surname>Simard</ce:surname></author></ref-authors><ref-sourcetitle>Transactions on Mathematical Software</ref-sourcetitle><ref-publicationyear first="2007"/><ref-volisspag><voliss volume="33" issue="4"/><pagerange first="22"/></ref-volisspag><ref-text>article</ref-text></ref-info><ref-fulltext>L'Ecuyer, P. and R. Simard. 2007. TestU01: A C Library for Empirical Testing of Random Number Generators. ACM Transactions on Mathematical Software 33:4, article 22.</ref-fulltext></reference><reference id="8"><ref-info><ref-title><ref-titletext>Sparse serial tests of uniformity for random number generators</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">0037252495</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>P.</ce:initials><ce:indexed-name>L'Ecuyer P.</ce:indexed-name><ce:surname>L'Ecuyer</ce:surname></author><author seq="2"><ce:initials>R.</ce:initials><ce:indexed-name>Simard R.</ce:indexed-name><ce:surname>Simard</ce:surname></author><author seq="3"><ce:initials>S.</ce:initials><ce:indexed-name>Wegenkittl S.</ce:indexed-name><ce:surname>Wegenkittl</ce:surname></author></ref-authors><ref-sourcetitle>SIAM Journal on Scientific Computing</ref-sourcetitle><ref-publicationyear first="2002"/><ref-volisspag><voliss volume="24"/><pagerange first="652" last="668"/></ref-volisspag></ref-info><ref-fulltext>L'Ecuyer, P., R. Simard, and S. Wegenkittl. 2002. Sparse serial tests of uniformity for random number generators. SIAM Journal on Scientific Computing 24:652-668.</ref-fulltext></reference><reference id="9"><ref-info><ref-title><ref-titletext>Mersenne twister: A 623-dimensionally equidistributed uniform pseudorandom number generator</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">0031599142</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>M.</ce:initials><ce:indexed-name>Matsumoto M.</ce:indexed-name><ce:surname>Matsumoto</ce:surname></author><author seq="2"><ce:initials>T.</ce:initials><ce:indexed-name>Nishimura T.</ce:indexed-name><ce:surname>Nishimura</ce:surname></author></ref-authors><ref-sourcetitle>ACM Trans. on Modeling and Computer Simulation</ref-sourcetitle><ref-publicationyear first="1998"/><ref-volisspag><voliss volume="8"/><pagerange first="3" last="30"/></ref-volisspag></ref-info><ref-fulltext>Matsumoto, M. and T. Nishimura. 1998. Mersenne twister: A 623-dimensionally equidistributed uniform pseudorandom number generator. ACM Trans. on Modeling and Computer Simulation 8:3-30.</ref-fulltext></reference><reference id="10"><ref-info><ref-title><ref-titletext>Improved long-period generators based on linear recurrences modulo 2</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">33745244126</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>F.</ce:initials><ce:indexed-name>Panneton F.</ce:indexed-name><ce:surname>Panneton</ce:surname></author><author seq="2"><ce:initials>P.</ce:initials><ce:indexed-name>L'Ecuyer P.</ce:indexed-name><ce:surname>L'Ecuyer</ce:surname></author><author seq="3"><ce:initials>M.</ce:initials><ce:indexed-name>Matsumoto M.</ce:indexed-name><ce:surname>Matsumoto</ce:surname></author></ref-authors><ref-sourcetitle>ACM Transactions on Mathematical Software</ref-sourcetitle><ref-publicationyear first="2006"/><ref-volisspag><voliss volume="32"/><pagerange first="1" last="16"/></ref-volisspag></ref-info><ref-fulltext>Panneton, F., P. L'Ecuyer, and M. Matsumoto. 2006. Improved long-period generators based on linear recurrences modulo 2. ACM Transactions on Mathematical Software 32:1-16.</ref-fulltext></reference><reference id="11"><ref-info><ref-title><ref-titletext>Random number generators: Good ones are hard to find</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">0024090481</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>S.K.</ce:initials><ce:indexed-name>Park S.K.</ce:indexed-name><ce:surname>Park</ce:surname></author><author seq="2"><ce:initials>K.W.</ce:initials><ce:indexed-name>Miller K.W.</ce:indexed-name><ce:surname>Miller</ce:surname></author></ref-authors><ref-sourcetitle>Communications of the ACM</ref-sourcetitle><ref-publicationyear first="1998"/><ref-volisspag><voliss volume="12"/><pagerange first="1192" last="1201"/></ref-volisspag></ref-info><ref-fulltext>Park, S. K. and K. W. Miller. 1998. Random number generators: Good ones are hard to find. Communications of the ACM 12:1192-1201.</ref-fulltext></reference><reference id="12"><ref-info><refd-itemidlist><itemid idtype="SGR">0004161838</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>W.H.</ce:initials><ce:indexed-name>Press W.H.</ce:indexed-name><ce:surname>Press</ce:surname></author><author seq="2"><ce:initials>S.A.</ce:initials><ce:indexed-name>Teukolsky S.A.</ce:indexed-name><ce:surname>Teukolsky</ce:surname></author><author seq="3"><ce:initials>W.T.</ce:initials><ce:indexed-name>Vetterling W.T.</ce:indexed-name><ce:surname>Vetterling</ce:surname></author><author seq="4"><ce:initials>B.P.</ce:initials><ce:indexed-name>Flannery B.P.</ce:indexed-name><ce:surname>Flannery</ce:surname></author></ref-authors><ref-sourcetitle>Numerical recipes</ref-sourcetitle><ref-publicationyear first="1988"/><ref-text>in C. Cambridge, UK: Cambridge University Press</ref-text></ref-info><ref-fulltext>Press, W. H., S. A. Teukolsky, W. T. Vetterling, and B. P. Flannery. 1988. Numerical recipes in C. Cambridge, UK: Cambridge University Press.</ref-fulltext></reference><reference id="13"><ref-info><refd-itemidlist><itemid idtype="SGR">1842607847</itemid></refd-itemidlist><ref-sourcetitle>R: A Language and Environment for Statistical Computing</ref-sourcetitle><ref-publicationyear first="2008"/><ref-website><websitename>R Development Core Team</websitename><ce:e-address type="url">http://www.R-project.org</ce:e-address></ref-website><ref-text>R Foundation for Statistical Computing, Vienna, Austria, Accessed 7 February 2008</ref-text></ref-info><ref-fulltext>R Development Core Team. 2008. R: A Language and Environment for Statistical Computing. R Foundation for Statistical Computing, Vienna, Austria. http://www.R-project.org.Accessed 7 February 2008.</ref-fulltext></reference><reference id="14"><ref-info><ref-title><ref-titletext>Theoretical and empirical analysis of ReliefF and ReliefF</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">0141990695</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>M.</ce:initials><ce:indexed-name>Robnik-Sikonja M.</ce:indexed-name><ce:surname>Robnik-Šikonja</ce:surname></author><author seq="2"><ce:initials>I.</ce:initials><ce:indexed-name>Kononenko I.</ce:indexed-name><ce:surname>Kononenko</ce:surname></author></ref-authors><ref-sourcetitle>Machine Learning Journal</ref-sourcetitle><ref-publicationyear first="2003"/><ref-volisspag><voliss volume="53"/><pagerange first="23" last="69"/></ref-volisspag></ref-info><ref-fulltext>Robnik-Šikonja, M. and I. Kononenko. 2003. Theoretical and empirical analysis of ReliefF and ReliefF. Machine Learning Journal 53:23-69.</ref-fulltext></reference><reference id="15"><ref-info><refd-itemidlist><itemid idtype="SGR">42949162784</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>P.</ce:initials><ce:indexed-name>Savicky P.</ce:indexed-name><ce:surname>Savicky</ce:surname></author></ref-authors><ref-sourcetitle>A strong nonrandom pattern in MATLAB, default random number generator</ref-sourcetitle><ref-publicationyear first="2006"/><ref-website><ce:e-address type="url">http://www.cs.cas.ez/~savicky/papers/rand2006.pdf</ce:e-address></ref-website><ref-text>Accessed 7 February 2008</ref-text></ref-info><ref-fulltext>Savicky, P. 2006. A strong nonrandom pattern in MATLAB, default random number generator, http://www.cs.cas.ez/~savicky/papers/rand2006.pdf. Accessed 7 February 2008.</ref-fulltext></reference><reference id="16"><ref-info><ref-title><ref-titletext>Generating good pseudo-random numbers</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">33750740108</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>B.</ce:initials><ce:indexed-name>Wichmann B.</ce:indexed-name><ce:surname>Wichmann</ce:surname></author><author seq="2"><ce:initials>I.</ce:initials><ce:indexed-name>Hill I.</ce:indexed-name><ce:surname>Hill</ce:surname></author></ref-authors><ref-sourcetitle>Computational Statistics and Data Analysis</ref-sourcetitle><ref-publicationyear first="2006"/><ref-volisspag><voliss volume="51" issue="3"/><pagerange first="1614" last="1622"/></ref-volisspag></ref-info><ref-fulltext>Wichmann, B. and I. Hill. 2006. Generating good pseudo-random numbers. Computational Statistics and Data Analysis 51 (3):1614-1622.</ref-fulltext></reference><reference id="17"><ref-info><refd-itemidlist><itemid idtype="SGR">0003957032</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>I.H.</ce:initials><ce:indexed-name>Witten I.H.</ce:indexed-name><ce:surname>Witten</ce:surname></author><author seq="2"><ce:initials>E.</ce:initials><ce:indexed-name>Frank E.</ce:indexed-name><ce:surname>Frank</ce:surname></author></ref-authors><ref-sourcetitle>Data Mining: Practical Machine Learning Tools and Techniques with Java Implementations</ref-sourcetitle><ref-publicationyear first="1999"/><ref-text>San Francisco: Morgan Kaufmaan</ref-text></ref-info><ref-fulltext>Witten, I. H. and E. Frank. 1999. Data Mining: Practical Machine Learning Tools and Techniques with Java Implementations. San Francisco: Morgan Kaufmaan.</ref-fulltext></reference></bibliography></tail></bibrecord></item></abstracts-retrieval-response>