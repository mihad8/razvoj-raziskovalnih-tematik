<abstracts-retrieval-response xmlns="http://www.elsevier.com/xml/svapi/abstract/dtd" xmlns:dn="http://www.elsevier.com/xml/svapi/abstract/dtd" xmlns:ait="http://www.elsevier.com/xml/ani/ait" xmlns:ce="http://www.elsevier.com/xml/ani/common" xmlns:cto="http://www.elsevier.com/xml/cto/dtd" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:prism="http://prismstandard.org/namespaces/basic/2.0/" xmlns:xocs="http://www.elsevier.com/xml/xocs/dtd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><coredata><prism:url>https://api.elsevier.com/content/abstract/scopus_id/67651021948</prism:url><dc:identifier>SCOPUS_ID:67651021948</dc:identifier><eid>2-s2.0-67651021948</eid><dc:title>Testing data dependency for microprocessors with a short SIMD instruction set Ugotavljanje podatkovne odvisnosti za procesorje z naborom ukazov SIMD</dc:title><prism:aggregationType>Journal</prism:aggregationType><srctype>j</srctype><subtype>ar</subtype><subtypeDescription>Article</subtypeDescription><citedby-count>0</citedby-count><prism:publicationName>Elektrotehniski Vestnik/Electrotechnical Review</prism:publicationName><source-id>16651</source-id><prism:issn>00135852</prism:issn><prism:volume>76</prism:volume><prism:issueIdentifier>1-2</prism:issueIdentifier><prism:startingPage>13</prism:startingPage><prism:endingPage>18</prism:endingPage><prism:pageRange>13-18</prism:pageRange><prism:coverDate>2009-07-28</prism:coverDate><openaccess/><openaccessFlag/><dc:creator><author seq="1" auid="6603205527"><ce:initials>P.</ce:initials><ce:indexed-name>Bulic P.</ce:indexed-name><ce:surname>Bulić</ce:surname><ce:given-name>Patricio</ce:given-name><preferred-name><ce:initials>P.</ce:initials><ce:indexed-name>Bulić P.</ce:indexed-name><ce:surname>Bulić</ce:surname><ce:given-name>Patricio</ce:given-name></preferred-name><author-url>https://api.elsevier.com/content/author/author_id/6603205527</author-url><affiliation id="60031106" href="https://api.elsevier.com/content/affiliation/affiliation_id/60031106"/></author></dc:creator><dc:description><abstract xmlns="" original="y" xml:lang="eng"><ce:para>In this paper we present an algorithm for the data-dependency problem related to microprocessors with a multimedia extension (i.e., including short SIMD instructions). Actually, there is a number of data-dependency tests proposed in literature (Banerjee test [2], GCD test [11], Omega test [7], Power test [10], etc.) which are all based on solving the linear dependence system. These tests would prohibit any vectorization if dependence exists even though this dependence would not be violeted after the vectorization. As an extension to the Banerjee test, the presented method checks whether the vectorization affects any existing depenedence relation by checking the distance between two conflicting memory references. We assume a p-nested for loop. In short SIMD processing, we can process V<inf>l</inf> data simultaneously and these data must be successively stored in the memory. All the data must be of the same bit length b and the SIMD registers must be V<inf>l</inf> b bits long. Thus, the problem of SIMD vectorization becomes a problem of whether we can unroll the innermost loop V<inf>l</inf> times and substitute the simultaneous statements with a single SIMD statement that performs the same operation at a time, over V<inf>l</inf> b-bits data in the (V<inf>l</inf> - b)-bits SIMD register. In this paper, we prove that the distance between the memory references in the innermost loop, which is defined as d(i , i) = i″<inf>p</inf> - i′<inf>p</inf> is d(i′,i″) = -a″<inf>p</inf> ζ(i′,i″) - |a′<inf>p</inf>, - a″ <inf>p</inf>|i′<inf>p</inf>. SIMD vectorization can be performed iff the distance between the memory references in the innermost loop is greater than or equal to the number of data processed in the SIMD register (Vi), max <inf>i′,i″∈Ip</inf> -a″<inf>p</inf> ζ(i′, i″) - |a′<inf>p</inf>, - a″<inf>p</inf>|i′<inf>p</inf> ≤ 0 or min<inf>i′,i″∈Ip</inf> -a″<inf>p</inf> ζ(i′,i″) - |a′<inf>p</inf>, - a″ <inf>p</inf>|i′<inf>p</inf> ≥ V<inf>l</inf> As we compute only the bounds of an integer affine function, the presented method results in a greater accuracy and also in reduction of the time cost. This simple and efficient data-dependency testing method is suitable for the use in a dependence analyzer that is organized as a series of tests, progressively increasing in accuracy, as a one of the first used, simple and inexpensive tests.</ce:para></abstract></dc:description><link href="https://api.elsevier.com/content/abstract/scopus_id/67651021948" rel="self"/><link href="https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&amp;scp=67651021948&amp;origin=inward" rel="scopus"/><link href="https://www.scopus.com/inward/citedby.uri?partnerID=HzOxMe3b&amp;scp=67651021948&amp;origin=inward" rel="scopus-citedby"/></coredata><affiliation id="60031106" href="https://api.elsevier.com/content/affiliation/affiliation_id/60031106"><affilname>University of Ljubljana</affilname><affiliation-city>Ljubljana</affiliation-city><affiliation-country>Slovenia</affiliation-country></affiliation><authors><author seq="1" auid="6603205527"><ce:initials>P.</ce:initials><ce:indexed-name>Bulic P.</ce:indexed-name><ce:surname>Bulić</ce:surname><ce:given-name>Patricio</ce:given-name><preferred-name><ce:initials>P.</ce:initials><ce:indexed-name>Bulić P.</ce:indexed-name><ce:surname>Bulić</ce:surname><ce:given-name>Patricio</ce:given-name></preferred-name><author-url>https://api.elsevier.com/content/author/author_id/6603205527</author-url><affiliation id="60031106" href="https://api.elsevier.com/content/affiliation/affiliation_id/60031106"/></author><author seq="2" auid="6508356094"><ce:initials>T.</ce:initials><ce:indexed-name>Dobravec T.</ce:indexed-name><ce:surname>Dobravec</ce:surname><ce:given-name>Tomaž</ce:given-name><preferred-name><ce:initials>T.</ce:initials><ce:indexed-name>Dobravec T.</ce:indexed-name><ce:surname>Dobravec</ce:surname><ce:given-name>Tomaž</ce:given-name></preferred-name><author-url>https://api.elsevier.com/content/author/author_id/6508356094</author-url><affiliation id="60031106" href="https://api.elsevier.com/content/affiliation/affiliation_id/60031106"/></author></authors><language xml:lang="slv"/><authkeywords><author-keyword>Data dependency</author-keyword><author-keyword>Multimedia extensions</author-keyword><author-keyword>SIMD instructions</author-keyword><author-keyword>Vectorizing compilers</author-keyword></authkeywords><idxterms><mainterm weight="a" candidate="n">Affine function</mainterm><mainterm weight="a" candidate="n">Bit lengths</mainterm><mainterm weight="a" candidate="n">Data dependencies</mainterm><mainterm weight="a" candidate="n">Data dependency</mainterm><mainterm weight="a" candidate="n">Linear dependence</mainterm><mainterm weight="a" candidate="n">Memory references</mainterm><mainterm weight="a" candidate="n">Multimedia extensions</mainterm><mainterm weight="a" candidate="n">Number of datum</mainterm><mainterm weight="a" candidate="n">Omega test</mainterm><mainterm weight="a" candidate="n">SIMD instructions</mainterm><mainterm weight="a" candidate="n">SIMD processing</mainterm><mainterm weight="a" candidate="n">Testing data</mainterm><mainterm weight="a" candidate="n">Testing method</mainterm><mainterm weight="a" candidate="n">Time cost</mainterm><mainterm weight="a" candidate="n">Vectorization</mainterm><mainterm weight="a" candidate="n">Vectorizing compilers</mainterm></idxterms><subject-areas><subject-area code="2208" abbrev="ENGI">Electrical and Electronic Engineering</subject-area></subject-areas><item xmlns=""><ait:process-info><ait:date-delivered year="2017" month="09" day="07" timestamp="2017-09-07T13:14:55.000055-04:00"/><ait:date-sort year="2009" month="07" day="28"/><ait:status type="core" state="update" stage="S300"/></ait:process-info><bibrecord><item-info><copyright type="Elsevier">Copyright 2009 Elsevier B.V., All rights reserved.</copyright><itemidlist><itemid idtype="PUI">354963784</itemid><itemid idtype="CPX">20093112226075</itemid><itemid idtype="SCP">67651021948</itemid><itemid idtype="SGR">67651021948</itemid></itemidlist><history><date-created year="2009" month="07" day="28"/></history><dbcollection>CPX</dbcollection><dbcollection>Scopusbase</dbcollection></item-info><head><citation-info><citation-type code="ar"/><citation-language xml:lang="slv" language="Slovenian"/><abstract-language xml:lang="eng" language="English"/><abstract-language xml:lang="slv" language="Slovenian"/><author-keywords><author-keyword>Data dependency</author-keyword><author-keyword>Multimedia extensions</author-keyword><author-keyword>SIMD instructions</author-keyword><author-keyword>Vectorizing compilers</author-keyword></author-keywords></citation-info><citation-title><titletext xml:lang="eng" original="n" language="English">Testing data dependency for microprocessors with a short SIMD instruction set</titletext><titletext xml:lang="slv" original="y" language="Slovenian">Ugotavljanje podatkovne odvisnosti za procesorje z naborom ukazov SIMD</titletext></citation-title><author-group><author auid="6603205527" seq="1"><ce:initials>P.</ce:initials><ce:indexed-name>Bulic P.</ce:indexed-name><ce:surname>Bulić</ce:surname><ce:given-name>Patricio</ce:given-name><preferred-name><ce:initials>P.</ce:initials><ce:indexed-name>Bulić P.</ce:indexed-name><ce:surname>Bulić</ce:surname><ce:given-name>Patricio</ce:given-name></preferred-name></author><author auid="6508356094" seq="2"><ce:initials>T.</ce:initials><ce:indexed-name>Dobravec T.</ce:indexed-name><ce:surname>Dobravec</ce:surname><ce:given-name>Tomaž</ce:given-name><preferred-name><ce:initials>T.</ce:initials><ce:indexed-name>Dobravec T.</ce:indexed-name><ce:surname>Dobravec</ce:surname><ce:given-name>Tomaž</ce:given-name></preferred-name></author><affiliation afid="60031106" dptid="104580817" country="svn"><organization>Univerza v Ljubljani</organization><organization>Fakulteta za Računalništvo in Informatiko</organization><address-part>Tržaška 25</address-part><city-group>1000 Ljubljana</city-group><affiliation-id afid="60031106" dptid="104580817"/><country>Slovenia</country></affiliation></author-group><correspondence><person><ce:initials>P.</ce:initials><ce:indexed-name>Bulic P.</ce:indexed-name><ce:surname>Bulić</ce:surname></person><affiliation country="svn"><organization>Univerza v Ljubljani</organization><organization>Fakulteta za Računalništvo in Informatiko</organization><address-part>Tržaška 25</address-part><city-group>1000 Ljubljana</city-group><country>Slovenia</country></affiliation></correspondence><abstracts><abstract original="y" xml:lang="eng"><ce:para>In this paper we present an algorithm for the data-dependency problem related to microprocessors with a multimedia extension (i.e., including short SIMD instructions). Actually, there is a number of data-dependency tests proposed in literature (Banerjee test [2], GCD test [11], Omega test [7], Power test [10], etc.) which are all based on solving the linear dependence system. These tests would prohibit any vectorization if dependence exists even though this dependence would not be violeted after the vectorization. As an extension to the Banerjee test, the presented method checks whether the vectorization affects any existing depenedence relation by checking the distance between two conflicting memory references. We assume a p-nested for loop. In short SIMD processing, we can process V<inf>l</inf> data simultaneously and these data must be successively stored in the memory. All the data must be of the same bit length b and the SIMD registers must be V<inf>l</inf> b bits long. Thus, the problem of SIMD vectorization becomes a problem of whether we can unroll the innermost loop V<inf>l</inf> times and substitute the simultaneous statements with a single SIMD statement that performs the same operation at a time, over V<inf>l</inf> b-bits data in the (V<inf>l</inf> - b)-bits SIMD register. In this paper, we prove that the distance between the memory references in the innermost loop, which is defined as d(i , i) = i″<inf>p</inf> - i′<inf>p</inf> is d(i′,i″) = -a″<inf>p</inf> ζ(i′,i″) - |a′<inf>p</inf>, - a″ <inf>p</inf>|i′<inf>p</inf>. SIMD vectorization can be performed iff the distance between the memory references in the innermost loop is greater than or equal to the number of data processed in the SIMD register (Vi), max <inf>i′,i″∈Ip</inf> -a″<inf>p</inf> ζ(i′, i″) - |a′<inf>p</inf>, - a″<inf>p</inf>|i′<inf>p</inf> ≤ 0 or min<inf>i′,i″∈Ip</inf> -a″<inf>p</inf> ζ(i′,i″) - |a′<inf>p</inf>, - a″ <inf>p</inf>|i′<inf>p</inf> ≥ V<inf>l</inf> As we compute only the bounds of an integer affine function, the presented method results in a greater accuracy and also in reduction of the time cost. This simple and efficient data-dependency testing method is suitable for the use in a dependence analyzer that is organized as a series of tests, progressively increasing in accuracy, as a one of the first used, simple and inexpensive tests.</ce:para></abstract></abstracts><source srcid="16651" type="j" country="svn"><sourcetitle>Elektrotehniski Vestnik/Electrotechnical Review</sourcetitle><sourcetitle-abbrev>Elektroteh Vestn Electrotech Rev</sourcetitle-abbrev><issn type="print">00135852</issn><codencode>ELVEA</codencode><volisspag><voliss volume="76" issue="1-2"/><pagerange first="13" last="18"/></volisspag><publicationyear first="2009"/><publicationdate><year>2009</year><date-text xfab-added="true">2009</date-text></publicationdate></source><enhancement><classificationgroup><classifications type="CPXCLASS"><classification> <classification-code>723.1</classification-code> <classification-description>Computer Programming</classification-description> </classification><classification> <classification-code>722</classification-code> <classification-description>Computer Hardware</classification-description> </classification><classification> <classification-code>721</classification-code> <classification-description>Computer Circuits and Logic Elements</classification-description> </classification><classification> <classification-code>716.1</classification-code> <classification-description>Information and Communication Theory</classification-description> </classification><classification> <classification-code>714.2</classification-code> <classification-description>Semiconductor Devices and Integrated Circuits</classification-description> </classification><classification> <classification-code>423.2</classification-code> <classification-description>Test Methods</classification-description> </classification><classification> <classification-code>422.2</classification-code> <classification-description>Test Methods</classification-description> </classification></classifications><classifications type="GEOCLASS"><classification> <classification-code>Related Topics</classification-code> </classification></classifications><classifications type="ASJC"><classification>2208</classification></classifications><classifications type="SUBJABBR"><classification>ENGI</classification></classifications></classificationgroup></enhancement></head><tail><bibliography refcount="11"><reference id="1"><ref-info><refd-itemidlist><itemid idtype="SGR">0037952146</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>R.</ce:initials><ce:indexed-name>Allen R.</ce:indexed-name><ce:surname>Allen</ce:surname></author><author seq="2"><ce:initials>K.</ce:initials><ce:indexed-name>Kennedy K.</ce:indexed-name><ce:surname>Kennedy</ce:surname></author></ref-authors><ref-sourcetitle>Optimizing compilers for modem architectures: A dependence-based approach</ref-sourcetitle><ref-publicationyear first="2001"/><ref-text>Morgan Kaufmann Publishers Inc.</ref-text></ref-info><ref-fulltext>Allen R., Kennedy K. Optimizing Compilers for Modem Architectures: A Dependence-based Approach. Morgan Kaufmann Publishers Inc., 2001.</ref-fulltext></reference><reference id="2"><ref-info><refd-itemidlist><itemid idtype="SGR">0004230378</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>U.</ce:initials><ce:indexed-name>Banerjee U.</ce:indexed-name><ce:surname>Banerjee</ce:surname></author></ref-authors><ref-sourcetitle>Dependence analysis: A Book Series on Loop Transformations for Restructuring Compilers</ref-sourcetitle><ref-publicationyear first="1997"/><ref-text>Kluwer Academic Publishers, Dordrecht</ref-text></ref-info><ref-fulltext>Banerjee U. Dependence Analysis: A Book Series on Loop Transformations for Restructuring Compilers. Kluwer Academic Publishers, Dordrecht, 1997.</ref-fulltext></reference><reference id="3"><ref-info><ref-title><ref-titletext>Automatic intra-register vectorization for the intel (R) architecture</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">0344908850</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>A.J.C.</ce:initials><ce:indexed-name>Bik A.J.C.</ce:indexed-name><ce:surname>Bik</ce:surname></author><author seq="2"><ce:initials>M.</ce:initials><ce:indexed-name>Girkar M.</ce:indexed-name><ce:surname>Girkar</ce:surname></author><author seq="3"><ce:initials>P.M.</ce:initials><ce:indexed-name>Grey P.M.</ce:indexed-name><ce:surname>Grey</ce:surname></author><author seq="4"><ce:initials>X.M.</ce:initials><ce:indexed-name>Tian X.M.</ce:indexed-name><ce:surname>Tian</ce:surname></author></ref-authors><ref-sourcetitle>International Journal of Parallel Programming</ref-sourcetitle><ref-publicationyear first="2002"/><ref-volisspag><voliss volume="30" issue="2"/><pagerange first="65" last="98"/></ref-volisspag></ref-info><ref-fulltext>Bik A.J.C., Girkar M., Grey P.M., Tian X.M. Automatic Intra-Register Vectorization for the Intel (R) Architecture. International Journal of Parallel Programming. Vol 30., No. 2, pp. 65-98. 2002.</ref-fulltext></reference><reference id="4"><ref-info><ref-title><ref-titletext>Data dependence analysis for array references</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">0033742599</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>T.-C.</ce:initials><ce:indexed-name>Huang T.-C.</ce:indexed-name><ce:surname>Huang</ce:surname></author><author seq="2"><ce:initials>C.-M.</ce:initials><ce:indexed-name>Yang C.-M.</ce:indexed-name><ce:surname>Yang</ce:surname></author></ref-authors><ref-sourcetitle>Journal of Systems and Software</ref-sourcetitle><ref-publicationyear first="2000"/><ref-volisspag><voliss volume="52" issue="1"/><pagerange first="55" last="65"/></ref-volisspag><ref-text>DOI 10.1016/S0164-1212(99)00132-6</ref-text></ref-info><ref-fulltext>[4] Huang T.C., Yang C.M. Data Dependence Analysis for Array References. The Journal of Systems and Software. No. 52, pp. 55-65, 2000. (Pubitemid 30862695)</ref-fulltext></reference><reference id="5"><ref-info><ref-title><ref-titletext>Compilation techniques for multimedia processors</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">0034250996</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>A.</ce:initials><ce:indexed-name>Krall A.</ce:indexed-name><ce:surname>Krall</ce:surname></author><author seq="2"><ce:initials>S.</ce:initials><ce:indexed-name>Lelait S.</ce:indexed-name><ce:surname>Lelait</ce:surname></author></ref-authors><ref-sourcetitle>International Journal of Parallel Programming</ref-sourcetitle><ref-publicationyear first="2000"/><ref-volisspag><voliss volume="28" issue="4"/><pagerange first="347" last="361"/></ref-volisspag><ref-text>DOI 10.1023/A:1007507005174</ref-text></ref-info><ref-fulltext>[5] Krall A., Lelait S. Compilation Techniques for Multimedia Processors. International Journal of Parallel Programming. Vol.28, No. 4, pp. 347-361, 2000. (Pubitemid 30918012)</ref-fulltext></reference><reference id="6"><ref-info><refd-itemidlist><itemid idtype="SGR">0003502903</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>S.</ce:initials><ce:indexed-name>Muchnick S.</ce:indexed-name><ce:surname>Muchnick</ce:surname></author></ref-authors><ref-sourcetitle>Advanced Compiler Design &amp; Implementation</ref-sourcetitle><ref-publicationyear first="1997"/><ref-text>Morgan Kauffinan Publishers</ref-text></ref-info><ref-fulltext>Muchnick S. Advanced Compiler Design &amp; Implementation. Morgan Kauffinan Publishers, 1997.</ref-fulltext></reference><reference id="7"><ref-info><ref-title><ref-titletext>A practical algorithm for exact array dependence analysis</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">84976676720</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>W.</ce:initials><ce:indexed-name>Pough W.</ce:indexed-name><ce:surname>Pough</ce:surname></author></ref-authors><ref-sourcetitle>Communications of the ACM</ref-sourcetitle><ref-publicationyear first="1992"/><ref-volisspag><voliss volume="35" issue="8"/><pagerange first="102" last="114"/></ref-volisspag></ref-info><ref-fulltext>Pough W. A Practical Algorithm for Exact Array Dependence Analysis. Communications of the ACM. Vol.35, No. 8, pp. 102-114, 1992.</ref-fulltext></reference><reference id="8"><ref-info><ref-title><ref-titletext>An experimental evaluation of data dependence analysis techniques</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">1842426430</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>K.</ce:initials><ce:indexed-name>Psarris K.</ce:indexed-name><ce:surname>Psarris</ce:surname></author><author seq="2"><ce:initials>D.</ce:initials><ce:indexed-name>Klappholz D.</ce:indexed-name><ce:surname>Klappholz</ce:surname></author><author seq="3"><ce:initials>X.</ce:initials><ce:indexed-name>Kong X.</ce:indexed-name><ce:surname>Kong</ce:surname></author></ref-authors><ref-sourcetitle>IEEE Transactions on Parallel and Distributed Systems</ref-sourcetitle><ref-publicationyear first="2004"/><ref-volisspag><voliss volume="15" issue="3"/><pagerange first="196" last="213"/></ref-volisspag><ref-text>March</ref-text></ref-info><ref-fulltext>Psarris K., Klappholz D., Kong X. An Experimental Evaluation of Data Dependence Analysis Techniques IEEE Transactions on Parallel and Distributed Systems. Vol.15, No. 3, pp. 196-213, March 2004.</ref-fulltext></reference><reference id="9"><ref-info><ref-title><ref-titletext>Vectorizing compiler for multimedia extensions</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">0034249157</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>N.</ce:initials><ce:indexed-name>Sreraman N.</ce:indexed-name><ce:surname>Sreraman</ce:surname></author><author seq="2"><ce:initials>R.</ce:initials><ce:indexed-name>Govindarajan R.</ce:indexed-name><ce:surname>Govindarajan</ce:surname></author></ref-authors><ref-sourcetitle>International Journal of Parallel Programming</ref-sourcetitle><ref-publicationyear first="2000"/><ref-volisspag><voliss volume="28" issue="4"/><pagerange first="363" last="400"/></ref-volisspag><ref-text>DOI 10.1023/A:1007559022013</ref-text></ref-info><ref-fulltext>[9] Sreraman N., Govindarajan R. A Vectorizing Compiler for Multimedia Extensions. International Journal of Parallel Programming. Vol.28, No. 4, pp. 363-400, 2000. (Pubitemid 30918011)</ref-fulltext></reference><reference id="10"><ref-info><ref-title><ref-titletext>The power test for data dependence</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">0026923851</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>M.J.</ce:initials><ce:indexed-name>Wolfe M.J.</ce:indexed-name><ce:surname>Wolfe</ce:surname></author><author seq="2"><ce:initials>C.W.</ce:initials><ce:indexed-name>Tseng C.W.</ce:indexed-name><ce:surname>Tseng</ce:surname></author></ref-authors><ref-sourcetitle>IEEE Transactions on Parallel and Distributed Systems</ref-sourcetitle><ref-publicationyear first="1992"/><ref-volisspag><voliss volume="3" issue="5"/><pagerange first="591" last="601"/></ref-volisspag><ref-text>September</ref-text></ref-info><ref-fulltext>Wolfe M.J., Tseng C.W. The Power Test for Data Dependence. IEEE Transactions on Parallel and Distributed Systems. Vol.3, No. 5, pp. 591-601, September 1992.</ref-fulltext></reference><reference id="11"><ref-info><refd-itemidlist><itemid idtype="SGR">0003488086</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>H.P.</ce:initials><ce:indexed-name>Zima H.P.</ce:indexed-name><ce:surname>Zima</ce:surname></author><author seq="2"><ce:initials>B.M.</ce:initials><ce:indexed-name>Chapman B.M.</ce:indexed-name><ce:surname>Chapman</ce:surname></author></ref-authors><ref-sourcetitle>Supercompilers for Parallel and Vector Computers</ref-sourcetitle><ref-publicationyear first="1990"/><ref-text>Addison-Wesley Publishing Company</ref-text></ref-info><ref-fulltext>Zima H.P., Chapman B.M. Supercompilers for Parallel and Vector Computers. Addison-Wesley Publishing Company, 1990.</ref-fulltext></reference></bibliography></tail></bibrecord></item></abstracts-retrieval-response>