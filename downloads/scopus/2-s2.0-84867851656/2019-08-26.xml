<abstracts-retrieval-response xmlns="http://www.elsevier.com/xml/svapi/abstract/dtd" xmlns:dn="http://www.elsevier.com/xml/svapi/abstract/dtd" xmlns:ait="http://www.elsevier.com/xml/ani/ait" xmlns:ce="http://www.elsevier.com/xml/ani/common" xmlns:cto="http://www.elsevier.com/xml/cto/dtd" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:prism="http://prismstandard.org/namespaces/basic/2.0/" xmlns:xocs="http://www.elsevier.com/xml/xocs/dtd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><coredata><prism:url>https://api.elsevier.com/content/abstract/scopus_id/84867851656</prism:url><dc:identifier>SCOPUS_ID:84867851656</dc:identifier><eid>2-s2.0-84867851656</eid><prism:doi>10.1007/978-3-642-34176-2_12</prism:doi><dc:title>Graph grammar induction as a parser-controlled heuristic search process</dc:title><prism:aggregationType>Book Series</prism:aggregationType><srctype>k</srctype><subtype>cp</subtype><subtypeDescription>Conference Paper</subtypeDescription><citedby-count>5</citedby-count><prism:publicationName>Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)</prism:publicationName><source-id>25674</source-id><prism:isbn>9783642341755</prism:isbn><prism:issn>03029743 16113349</prism:issn><prism:volume>7233 LNCS</prism:volume><prism:startingPage>121</prism:startingPage><prism:endingPage>136</prism:endingPage><prism:pageRange>121-136</prism:pageRange><prism:coverDate>2012-10-30</prism:coverDate><openaccess>2</openaccess><openaccessFlag/><dc:creator><author seq="1" auid="24329188700"><ce:initials>L.</ce:initials><ce:indexed-name>Furst L.</ce:indexed-name><ce:surname>Fürst</ce:surname><ce:given-name>Luka</ce:given-name><preferred-name><ce:initials>L.</ce:initials><ce:indexed-name>Fürst L.</ce:indexed-name><ce:surname>Fürst</ce:surname><ce:given-name>Luka</ce:given-name></preferred-name><author-url>https://api.elsevier.com/content/author/author_id/24329188700</author-url><affiliation id="60031106" href="https://api.elsevier.com/content/affiliation/affiliation_id/60031106"/></author></dc:creator><dc:description><abstract xmlns="" original="y" xml:lang="eng"><ce:para>A graph grammar is a generative description of a graph language (a possibly infinite set of graphs). In this paper, we present a novel algorithm for inducing a graph grammar from a given set of 'positive' and 'negative' graphs. The algorithm is guaranteed to produce a grammar that can generate all of the positive and none of the negative input graphs. Driven by a heuristic specific-to-general search process, the algorithm tries to find a small grammar that generalizes beyond the positive input set. During the search, the algorithm employs a graph grammar parser to eliminate the candidate grammars that can generate at least one negative input graph. We validate our method by inducing grammars for chemical structural formulas and flowcharts and thereby show its potential applicability to chemical engineering and visual programming. © 2012 Springer-Verlag.</ce:para></abstract></dc:description><link href="https://api.elsevier.com/content/abstract/scopus_id/84867851656" rel="self"/><link href="https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&amp;scp=84867851656&amp;origin=inward" rel="scopus"/><link href="https://www.scopus.com/inward/citedby.uri?partnerID=HzOxMe3b&amp;scp=84867851656&amp;origin=inward" rel="scopus-citedby"/></coredata><affiliation id="60078305" href="https://api.elsevier.com/content/affiliation/affiliation_id/60078305"><affilname>Univerza v Mariboru Fakultete za Elektrotehniko, računalništvo in Informatiko</affilname><affiliation-city>Maribor</affiliation-city><affiliation-country>Slovenia</affiliation-country></affiliation><affiliation id="60031106" href="https://api.elsevier.com/content/affiliation/affiliation_id/60031106"><affilname>University of Ljubljana</affilname><affiliation-city>Ljubljana</affiliation-city><affiliation-country>Slovenia</affiliation-country></affiliation><authors><author seq="1" auid="24329188700"><ce:initials>L.</ce:initials><ce:indexed-name>Furst L.</ce:indexed-name><ce:surname>Fürst</ce:surname><ce:given-name>Luka</ce:given-name><preferred-name><ce:initials>L.</ce:initials><ce:indexed-name>Fürst L.</ce:indexed-name><ce:surname>Fürst</ce:surname><ce:given-name>Luka</ce:given-name></preferred-name><author-url>https://api.elsevier.com/content/author/author_id/24329188700</author-url><affiliation id="60031106" href="https://api.elsevier.com/content/affiliation/affiliation_id/60031106"/></author><author seq="2" auid="6701780016"><ce:initials>M.</ce:initials><ce:indexed-name>Mernik M.</ce:indexed-name><ce:surname>Mernik</ce:surname><ce:given-name>Marjan</ce:given-name><preferred-name><ce:initials>M.</ce:initials><ce:indexed-name>Mernik M.</ce:indexed-name><ce:surname>Mernik</ce:surname><ce:given-name>Marjan</ce:given-name></preferred-name><author-url>https://api.elsevier.com/content/author/author_id/6701780016</author-url><affiliation id="60078305" href="https://api.elsevier.com/content/affiliation/affiliation_id/60078305"/></author><author seq="3" auid="6602950652"><ce:initials>V.</ce:initials><ce:indexed-name>Mahnic V.</ce:indexed-name><ce:surname>Mahnič</ce:surname><ce:given-name>Viljan</ce:given-name><preferred-name><ce:initials>V.</ce:initials><ce:indexed-name>Mahnič V.</ce:indexed-name><ce:surname>Mahnič</ce:surname><ce:given-name>Viljan</ce:given-name></preferred-name><author-url>https://api.elsevier.com/content/author/author_id/6602950652</author-url><affiliation id="60031106" href="https://api.elsevier.com/content/affiliation/affiliation_id/60031106"/></author></authors><language xml:lang="eng"/><authkeywords><author-keyword>graph grammar induction</author-keyword><author-keyword>graph grammar parsing</author-keyword><author-keyword>Graph grammars</author-keyword><author-keyword>heuristic search</author-keyword></authkeywords><idxterms><mainterm weight="a" candidate="n">Graph grammar</mainterm><mainterm weight="a" candidate="n">Heuristic search</mainterm><mainterm weight="a" candidate="n">Input graphs</mainterm><mainterm weight="a" candidate="n">Novel algorithm</mainterm><mainterm weight="a" candidate="n">Positive input</mainterm><mainterm weight="a" candidate="n">Search process</mainterm><mainterm weight="a" candidate="n">Structural formula</mainterm><mainterm weight="a" candidate="n">Visual programming</mainterm></idxterms><subject-areas><subject-area code="2614" abbrev="MATH">Theoretical Computer Science</subject-area><subject-area code="1700" abbrev="COMP">Computer Science (all)</subject-area></subject-areas><item xmlns=""><ait:process-info><ait:date-delivered year="2019" month="08" day="16" timestamp="2019-08-16T05:29:23.000023-04:00"/><ait:date-sort year="2012" month="10" day="30"/><ait:status type="core" state="update" stage="S300"/></ait:process-info><bibrecord><item-info><copyright type="Elsevier">Copyright 2012 Elsevier B.V., All rights reserved.</copyright><itemidlist><ce:doi>10.1007/978-3-642-34176-2_12</ce:doi><itemid idtype="PUI">365912961</itemid><itemid idtype="CPX">20124415619264</itemid><itemid idtype="SCP">84867851656</itemid><itemid idtype="SGR">84867851656</itemid></itemidlist><history><date-created year="2012" month="10" day="30"/></history><dbcollection>CPX</dbcollection><dbcollection>Scopusbase</dbcollection></item-info><head><citation-info><citation-type code="cp"/><citation-language xml:lang="eng" language="English"/><abstract-language xml:lang="eng" language="English"/><author-keywords><author-keyword xml:lang="eng">graph grammar induction</author-keyword><author-keyword xml:lang="eng">graph grammar parsing</author-keyword><author-keyword xml:lang="eng">Graph grammars</author-keyword><author-keyword xml:lang="eng">heuristic search</author-keyword></author-keywords></citation-info><citation-title><titletext xml:lang="eng" original="y" language="English">Graph grammar induction as a parser-controlled heuristic search process</titletext></citation-title><author-group><author auid="24329188700" seq="1"><ce:initials>L.</ce:initials><ce:indexed-name>Furst L.</ce:indexed-name><ce:surname>Fürst</ce:surname><ce:given-name>Luka</ce:given-name><preferred-name><ce:initials>L.</ce:initials><ce:indexed-name>Fürst L.</ce:indexed-name><ce:surname>Fürst</ce:surname><ce:given-name>Luka</ce:given-name></preferred-name></author><author auid="6602950652" seq="3"><ce:initials>V.</ce:initials><ce:indexed-name>Mahnic V.</ce:indexed-name><ce:surname>Mahnič</ce:surname><ce:given-name>Viljan</ce:given-name><preferred-name><ce:initials>V.</ce:initials><ce:indexed-name>Mahnič V.</ce:indexed-name><ce:surname>Mahnič</ce:surname><ce:given-name>Viljan</ce:given-name></preferred-name></author><affiliation afid="60031106" country="svn"><organization>University of Ljubljana</organization><organization>Faculty of Computer and Information Science</organization><address-part>Tržaška cesta 25</address-part><city-group>SI-1000 Ljubljana</city-group><affiliation-id afid="60031106"/><country>Slovenia</country></affiliation></author-group><author-group><author auid="6701780016" seq="2"><ce:initials>M.</ce:initials><ce:indexed-name>Mernik M.</ce:indexed-name><ce:surname>Mernik</ce:surname><ce:given-name>Marjan</ce:given-name><preferred-name><ce:initials>M.</ce:initials><ce:indexed-name>Mernik M.</ce:indexed-name><ce:surname>Mernik</ce:surname><ce:given-name>Marjan</ce:given-name></preferred-name></author><affiliation afid="60078305" country="svn"><organization>University of Maribor</organization><organization>Faculty of Electrical Engineering and Computer Science</organization><address-part>Smetanova ulica 17</address-part><city-group>SI-2000 Maribor</city-group><affiliation-id afid="60078305"/><affiliation-id afid="60004060"/><country>Slovenia</country></affiliation></author-group><correspondence><person><ce:initials>L.</ce:initials><ce:indexed-name>Furst L.</ce:indexed-name><ce:surname>Fürst</ce:surname></person><affiliation country="svn"><organization>University of Ljubljana</organization><organization>Faculty of Computer and Information Science</organization><address-part>Tržaška cesta 25</address-part><city-group>SI-1000 Ljubljana</city-group><country>Slovenia</country></affiliation></correspondence><abstracts><abstract original="y" xml:lang="eng"><ce:para>A graph grammar is a generative description of a graph language (a possibly infinite set of graphs). In this paper, we present a novel algorithm for inducing a graph grammar from a given set of 'positive' and 'negative' graphs. The algorithm is guaranteed to produce a grammar that can generate all of the positive and none of the negative input graphs. Driven by a heuristic specific-to-general search process, the algorithm tries to find a small grammar that generalizes beyond the positive input set. During the search, the algorithm employs a graph grammar parser to eliminate the candidate grammars that can generate at least one negative input graph. We validate our method by inducing grammars for chemical structural formulas and flowcharts and thereby show its potential applicability to chemical engineering and visual programming. © 2012 Springer-Verlag.</ce:para></abstract></abstracts><source srcid="25674" type="k" country="deu"><sourcetitle>Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)</sourcetitle><sourcetitle-abbrev>Lect. Notes Comput. Sci.</sourcetitle-abbrev><issuetitle>Applications of Graph Transformations with Industrial Relevance - 4th International Symposium, AGTIVE 2011, Revised Selected and Invited Papers</issuetitle><issn type="print">03029743</issn><issn type="electronic">16113349</issn><isbn length="13" level="volume">9783642341755</isbn><volisspag><voliss volume="7233 LNCS"/><pagerange first="121" last="136"/></volisspag><publicationyear first="2012"/><publicationdate><year>2012</year><date-text xfab-added="true">2012</date-text></publicationdate><additional-srcinfo><conferenceinfo><confevent><confname>4th International Symposium on Applications of Graph Transformations with Industrial Relevance, AGTIVE 2011</confname><conflocation country="hun"><city-group>Budapest</city-group></conflocation><confdate><startdate year="2011" month="10" day="04"/><enddate year="2011" month="10" day="07"/></confdate><confcode>93358</confcode><confsponsors complete="y"><confsponsor>Budapest Univ. Technol. Econ. (BME), Dep. Meas. Inf. Syst.</confsponsor><confsponsor>Budapest Univ. Technol. Econ. (BME), Dep. Autom. Appl. Inf.</confsponsor><confsponsor>Technische Universitat Darmstadt, Fachgebiet Echtzeitsysteme</confsponsor><confsponsor>Alexander von Humboldt Foundation</confsponsor></confsponsors></confevent><confpublication><procpagerange>var.pagings</procpagerange></confpublication></conferenceinfo></additional-srcinfo></source><enhancement><classificationgroup><classifications type="CPXCLASS"><classification> <classification-code>721.1</classification-code> <classification-description>Computer Theory (Includes Formal Logic, Automata Theory, Switching Theory and Programming Theory)</classification-description> </classification><classification> <classification-code>723.1</classification-code> <classification-description>Computer Programming</classification-description> </classification><classification> <classification-code>731.5</classification-code> <classification-description>Robotics</classification-description> </classification><classification> <classification-code>921.4</classification-code> <classification-description>Combinatorial Mathematics, Includes Graph Theory, Set Theory</classification-description> </classification></classifications><classifications type="GEOCLASS"><classification> <classification-code>Related Topics</classification-code> </classification></classifications><classifications type="ASJC"><classification>2614</classification><classification>1700</classification></classifications><classifications type="SUBJABBR"><classification>MATH</classification><classification>COMP</classification></classifications></classificationgroup></enhancement></head><tail><bibliography refcount="20"><reference id="1"><ref-info><ref-title><ref-titletext>Transforming Scene Graphs Using Triple Graph Grammars - A Practice Report</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">56749161289</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>N.</ce:initials><ce:indexed-name>Aschenbrenner N.</ce:indexed-name><ce:surname>Aschenbrenner</ce:surname></author><author seq="2"><ce:initials>L.</ce:initials><ce:indexed-name>Geiger L.</ce:indexed-name><ce:surname>Geiger</ce:surname></author></ref-authors><ref-sourcetitle>LNCS</ref-sourcetitle><ref-publicationyear first="2008"/><ref-volisspag><voliss volume="5088"/><pagerange first="32" last="43"/></ref-volisspag><ref-text>Schürr, A., Nagl, M., Zündorf, A. (eds.) AGTIVE 2007. Springer, Heidelberg</ref-text></ref-info><ref-fulltext>Aschenbrenner, N., Geiger, L.: Transforming Scene Graphs Using Triple Graph Grammars - A Practice Report. In: Schürr, A., Nagl, M., Zündorf, A. (eds.) AGTIVE 2007. LNCS, vol. 5088, pp. 32-43. Springer, Heidelberg (2008)</ref-fulltext></reference><reference id="2"><ref-info><ref-title><ref-titletext>Graph grammar induction on structural data for visual programming</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">38949162584</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>K.</ce:initials><ce:indexed-name>Ates K.</ce:indexed-name><ce:surname>Ates</ce:surname></author><author seq="2"><ce:initials>J.P.</ce:initials><ce:indexed-name>Kukluk J.P.</ce:indexed-name><ce:surname>Kukluk</ce:surname></author><author seq="3"><ce:initials>L.B.</ce:initials><ce:indexed-name>Holder L.B.</ce:indexed-name><ce:surname>Holder</ce:surname></author><author seq="4"><ce:initials>D.J.</ce:initials><ce:indexed-name>Cook D.J.</ce:indexed-name><ce:surname>Cook</ce:surname></author><author seq="5"><ce:initials>K.</ce:initials><ce:indexed-name>Zhang K.</ce:indexed-name><ce:surname>Zhang</ce:surname></author></ref-authors><ref-sourcetitle>Proc. of the 18th IEEE International Conference on Tools with Artificial Intelligence</ref-sourcetitle><ref-publicationyear first="2006"/><ref-volisspag><pagerange first="232" last="242"/></ref-volisspag><ref-text>IEEE Computer Society, Washington, DC</ref-text></ref-info><ref-fulltext>Ates, K., Kukluk, J.P., Holder, L.B., Cook, D.J., Zhang, K.: Graph grammar induction on structural data for visual programming. In: Proc. of the 18th IEEE International Conference on Tools with Artificial Intelligence, pp. 232-242. IEEE Computer Society, Washington, DC (2006)</ref-fulltext></reference><reference id="3"><ref-info><ref-title><ref-titletext>Model transformation by example using inductive logic programming</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">67650482814</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>Z.</ce:initials><ce:indexed-name>Balogh Z.</ce:indexed-name><ce:surname>Balogh</ce:surname></author><author seq="2"><ce:initials>D.</ce:initials><ce:indexed-name>Varro D.</ce:indexed-name><ce:surname>Varró</ce:surname></author></ref-authors><ref-sourcetitle>Software and Systems Modeling</ref-sourcetitle><ref-publicationyear first="2009"/><ref-volisspag><voliss volume="8" issue="3"/><pagerange first="347" last="364"/></ref-volisspag></ref-info><ref-fulltext>Balogh, Z., Varró, D.: Model transformation by example using inductive logic programming. Software and Systems Modeling 8(3), 347-364 (2009)</ref-fulltext></reference><reference id="4"><ref-info><ref-title><ref-titletext>On the inference of non-confluent NLC graph grammars</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">85047623453</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>R.</ce:initials><ce:indexed-name>Brijder R.</ce:indexed-name><ce:surname>Brijder</ce:surname></author><author seq="2"><ce:initials>H.</ce:initials><ce:indexed-name>Blockeel H.</ce:indexed-name><ce:surname>Blockeel</ce:surname></author></ref-authors><ref-sourcetitle>Journal of Logic and Computation</ref-sourcetitle><ref-publicationyear first="2012"/><ref-text>to appear</ref-text></ref-info><ref-fulltext>Brijder, R., Blockeel, H.: On the inference of non-confluent NLC graph grammars. Journal of Logic and Computation (to appear, 2012)</ref-fulltext></reference><reference id="5"><ref-info><ref-title><ref-titletext>Model-Driven Software Development with Graph Transformations: A Comparative Case Study</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">56749182692</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>T.</ce:initials><ce:indexed-name>Buchmann T.</ce:indexed-name><ce:surname>Buchmann</ce:surname></author><author seq="2"><ce:initials>A.</ce:initials><ce:indexed-name>Dotor A.</ce:indexed-name><ce:surname>Dotor</ce:surname></author><author seq="3"><ce:initials>S.</ce:initials><ce:indexed-name>Uhrig S.</ce:indexed-name><ce:surname>Uhrig</ce:surname></author><author seq="4"><ce:initials>B.</ce:initials><ce:indexed-name>Westfechtel B.</ce:indexed-name><ce:surname>Westfechtel</ce:surname></author></ref-authors><ref-sourcetitle>LNCS</ref-sourcetitle><ref-publicationyear first="2008"/><ref-volisspag><voliss volume="5088"/><pagerange first="345" last="360"/></ref-volisspag><ref-text>Schürr, A., Nagl, M., Zündorf, A. (eds.) AGTIVE 2007. Springer, Heidelberg</ref-text></ref-info><ref-fulltext>Buchmann, T., Dotor, A., Uhrig, S., Westfechtel, B.: Model-Driven Software Development with Graph Transformations: A Comparative Case Study. In: Schürr, A., Nagl, M., Zündorf, A. (eds.) AGTIVE 2007. LNCS, vol. 5088, pp. 345-360. Springer, Heidelberg (2008)</ref-fulltext></reference><reference id="6"><ref-info><refd-itemidlist><itemid idtype="SGR">84889422234</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>D.J.</ce:initials><ce:indexed-name>Cook D.J.</ce:indexed-name><ce:surname>Cook</ce:surname></author><author seq="2"><ce:initials>L.B.</ce:initials><ce:indexed-name>Holder L.B.</ce:indexed-name><ce:surname>Holder</ce:surname></author></ref-authors><ref-sourcetitle>Mining Graph Data</ref-sourcetitle><ref-publicationyear first="2006"/><ref-text>John Wiley &amp; Sons, New Jersey</ref-text></ref-info><ref-fulltext>Cook, D.J., Holder, L.B.: Mining Graph Data. John Wiley &amp; Sons, New Jersey (2006)</ref-fulltext></reference><reference id="7"><ref-info><ref-title><ref-titletext>Learning context-free grammar rules from a set of programs</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">45849086903</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>A.</ce:initials><ce:indexed-name>Dubey A.</ce:indexed-name><ce:surname>Dubey</ce:surname></author><author seq="2"><ce:initials>P.</ce:initials><ce:indexed-name>Jalote P.</ce:indexed-name><ce:surname>Jalote</ce:surname></author><author seq="3"><ce:initials>S.K.</ce:initials><ce:indexed-name>Aggarwal S.K.</ce:indexed-name><ce:surname>Aggarwal</ce:surname></author></ref-authors><ref-sourcetitle>IET Software</ref-sourcetitle><ref-publicationyear first="2008"/><ref-volisspag><voliss volume="2" issue="3"/><pagerange first="223" last="240"/></ref-volisspag></ref-info><ref-fulltext>Dubey, A., Jalote, P., Aggarwal, S.K.: Learning context-free grammar rules from a set of programs. IET Software 2(3), 223-240 (2008)</ref-fulltext></reference><reference id="8"><ref-info><ref-title><ref-titletext>Improving the graph grammar parser of Rekers and Schürr</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">79959871011</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>L.</ce:initials><ce:indexed-name>Furst L.</ce:indexed-name><ce:surname>Fürst</ce:surname></author><author seq="2"><ce:initials>M.</ce:initials><ce:indexed-name>Mernik M.</ce:indexed-name><ce:surname>Mernik</ce:surname></author><author seq="3"><ce:initials>V.</ce:initials><ce:indexed-name>Mahnic V.</ce:indexed-name><ce:surname>Mahnič</ce:surname></author></ref-authors><ref-sourcetitle>IET Software</ref-sourcetitle><ref-publicationyear first="2011"/><ref-volisspag><voliss volume="5" issue="2"/><pagerange first="246" last="261"/></ref-volisspag></ref-info><ref-fulltext>Fürst, L., Mernik, M., Mahnič, V.: Improving the graph grammar parser of Rekers and Schürr. IET Software 5(2), 246-261 (2011)</ref-fulltext></reference><reference id="9"><ref-info><ref-title><ref-titletext>MARS: A metamodel recovery system using grammar inference</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">44649155102</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>F.</ce:initials><ce:indexed-name>Javed F.</ce:indexed-name><ce:surname>Javed</ce:surname></author><author seq="2"><ce:initials>M.</ce:initials><ce:indexed-name>Mernik M.</ce:indexed-name><ce:surname>Mernik</ce:surname></author><author seq="3"><ce:initials>J.</ce:initials><ce:indexed-name>Gray J.</ce:indexed-name><ce:surname>Gray</ce:surname></author><author seq="4"><ce:initials>B.R.</ce:initials><ce:indexed-name>Bryant B.R.</ce:indexed-name><ce:surname>Bryant</ce:surname></author></ref-authors><ref-sourcetitle>Information and Software Technology</ref-sourcetitle><ref-publicationyear first="2008"/><ref-volisspag><voliss volume="50" issue="9-10"/><pagerange first="948" last="968"/></ref-volisspag></ref-info><ref-fulltext>Javed, F., Mernik, M., Gray, J., Bryant, B.R.: MARS: A metamodel recovery system using grammar inference. Information and Software Technology 50(9-10), 948-968 (2008)</ref-fulltext></reference><reference id="10"><ref-info><ref-title><ref-titletext>Grammatical Inference Based on Hyperedge Replacement</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">0010675883</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>E.</ce:initials><ce:indexed-name>Jeltsch E.</ce:indexed-name><ce:surname>Jeltsch</ce:surname></author><author seq="2"><ce:initials>H.J.</ce:initials><ce:indexed-name>Kreowski H.J.</ce:indexed-name><ce:surname>Kreowski</ce:surname></author></ref-authors><ref-sourcetitle>LNCS</ref-sourcetitle><ref-publicationyear first="1991"/><ref-volisspag><voliss volume="532"/><pagerange first="461" last="474"/></ref-volisspag><ref-text>Ehrig, H., Kreowski, H.-J., Rozenberg, G. (eds.) Graph Grammars 1990. Springer, Heidelberg</ref-text></ref-info><ref-fulltext>Jeltsch, E., Kreowski, H.J.: Grammatical Inference Based on Hyperedge Replacement. In: Ehrig, H., Kreowski, H.-J., Rozenberg, G. (eds.) Graph Grammars 1990. LNCS, vol. 532, pp. 461-474. Springer, Heidelberg (1991)</ref-fulltext></reference><reference id="11"><ref-info><ref-title><ref-titletext>MDL-based context-free graph grammar induction and applications</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">32844460819</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>I.</ce:initials><ce:indexed-name>Jonyer I.</ce:indexed-name><ce:surname>Jonyer</ce:surname></author><author seq="2"><ce:initials>L.B.</ce:initials><ce:indexed-name>Holder L.B.</ce:indexed-name><ce:surname>Holder</ce:surname></author><author seq="3"><ce:initials>D.J.</ce:initials><ce:indexed-name>Cook D.J.</ce:indexed-name><ce:surname>Cook</ce:surname></author></ref-authors><ref-sourcetitle>International Journal of Artificial Intelligence Tools</ref-sourcetitle><ref-publicationyear first="2004"/><ref-volisspag><voliss volume="13" issue="1"/><pagerange first="65" last="79"/></ref-volisspag></ref-info><ref-fulltext>Jonyer, I., Holder, L.B., Cook, D.J.: MDL-based context-free graph grammar induction and applications. International Journal of Artificial Intelligence Tools 13(1), 65-79 (2004)</ref-fulltext></reference><reference id="12"><ref-info><ref-title><ref-titletext>Spatial graph grammars for graphical user interfaces</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">33749637218</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>J.</ce:initials><ce:indexed-name>Kong J.</ce:indexed-name><ce:surname>Kong</ce:surname></author><author seq="2"><ce:initials>K.</ce:initials><ce:indexed-name>Zhang K.</ce:indexed-name><ce:surname>Zhang</ce:surname></author><author seq="3"><ce:initials>X.</ce:initials><ce:indexed-name>Zeng X.</ce:indexed-name><ce:surname>Zeng</ce:surname></author></ref-authors><ref-sourcetitle>ACM Transactions on Computer-Human Interaction</ref-sourcetitle><ref-publicationyear first="2006"/><ref-volisspag><voliss volume="13" issue="2"/><pagerange first="268" last="307"/></ref-volisspag></ref-info><ref-fulltext>Kong, J., Zhang, K., Zeng, X.: Spatial graph grammars for graphical user interfaces. ACM Transactions on Computer-Human Interaction 13(2), 268-307 (2006)</ref-fulltext></reference><reference id="13"><ref-info><ref-title><ref-titletext>Inferring graph grammars by detecting overlap in frequent subgraphs</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">45849103839</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>J.P.</ce:initials><ce:indexed-name>Kukluk J.P.</ce:indexed-name><ce:surname>Kukluk</ce:surname></author><author seq="2"><ce:initials>L.B.</ce:initials><ce:indexed-name>Holder L.B.</ce:indexed-name><ce:surname>Holder</ce:surname></author><author seq="3"><ce:initials>D.J.</ce:initials><ce:indexed-name>Cook D.J.</ce:indexed-name><ce:surname>Cook</ce:surname></author></ref-authors><ref-sourcetitle>Applied Mathematics and Computer Science</ref-sourcetitle><ref-publicationyear first="2008"/><ref-volisspag><voliss volume="18" issue="2"/><pagerange first="241" last="250"/></ref-volisspag></ref-info><ref-fulltext>Kukluk, J.P., Holder, L.B., Cook, D.J.: Inferring graph grammars by detecting overlap in frequent subgraphs. Applied Mathematics and Computer Science 18(2), 241-250 (2008)</ref-fulltext></reference><reference id="14"><ref-info><ref-title><ref-titletext>Finding frequent patterns in a large sparse graph</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">27944453480</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>M.</ce:initials><ce:indexed-name>Kuramochi M.</ce:indexed-name><ce:surname>Kuramochi</ce:surname></author><author seq="2"><ce:initials>G.</ce:initials><ce:indexed-name>Karypis G.</ce:indexed-name><ce:surname>Karypis</ce:surname></author></ref-authors><ref-sourcetitle>Data Mining and Knowledge Discovery</ref-sourcetitle><ref-publicationyear first="2005"/><ref-volisspag><voliss volume="11" issue="3"/><pagerange first="243" last="271"/></ref-volisspag></ref-info><ref-fulltext>Kuramochi, M., Karypis, G.: Finding frequent patterns in a large sparse graph. Data Mining and Knowledge Discovery 11(3), 243-271 (2005)</ref-fulltext></reference><reference id="15"><ref-info><ref-title><ref-titletext>Incremental learning of context free grammars based on bottom-up parsing and search</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">19944399790</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>K.</ce:initials><ce:indexed-name>Nakamura K.</ce:indexed-name><ce:surname>Nakamura</ce:surname></author><author seq="2"><ce:initials>M.</ce:initials><ce:indexed-name>Matsumoto M.</ce:indexed-name><ce:surname>Matsumoto</ce:surname></author></ref-authors><ref-sourcetitle>Pattern Recognition</ref-sourcetitle><ref-publicationyear first="2005"/><ref-volisspag><voliss volume="38" issue="9"/><pagerange first="1384" last="1392"/></ref-volisspag></ref-info><ref-fulltext>Nakamura, K., Matsumoto, M.: Incremental learning of context free grammars based on bottom-up parsing and search. Pattern Recognition 38(9), 1384-1392 (2005)</ref-fulltext></reference><reference id="16"><ref-info><ref-title><ref-titletext>Grammar inference, automata induction, and language acquisition</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">0242479542</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>R.</ce:initials><ce:indexed-name>Parekh R.</ce:indexed-name><ce:surname>Parekh</ce:surname></author><author seq="2"><ce:initials>V.</ce:initials><ce:indexed-name>Honavar V.</ce:indexed-name><ce:surname>Honavar</ce:surname></author></ref-authors><ref-sourcetitle>Handbook of Natural Language Processing</ref-sourcetitle><ref-publicationyear first="2000"/><ref-volisspag><pagerange first="727" last="764"/></ref-volisspag><ref-text>Dale, R., Somers, H.L., Moisl, H. (eds.) Marcel Dekker, New York</ref-text></ref-info><ref-fulltext>Parekh, R., Honavar, V.: Grammar inference, automata induction, and language acquisition. In: Dale, R., Somers, H.L., Moisl, H. (eds.) Handbook of Natural Language Processing, pp. 727-764. Marcel Dekker, New York (2000)</ref-fulltext></reference><reference id="17"><ref-info><ref-title><ref-titletext>Term Graph Rewriting and Mobile Expressions in Functional Languages</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">84974707319</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>R.</ce:initials><ce:indexed-name>Plasmeijer R.</ce:indexed-name><ce:surname>Plasmeijer</ce:surname></author><author seq="2"><ce:initials>M.</ce:initials><ce:indexed-name>Van Eekelen M.</ce:indexed-name><ce:surname>Van Eekelen</ce:surname></author></ref-authors><ref-sourcetitle>LNCS</ref-sourcetitle><ref-publicationyear first="2000"/><ref-volisspag><voliss volume="1779"/><pagerange first="1" last="13"/></ref-volisspag><ref-text>Nagl, M., Schürr, A., Münch, M. (eds.) AGTIVE 1999. Springer, Heidelberg</ref-text></ref-info><ref-fulltext>Plasmeijer, R., van Eekelen, M.: Term Graph Rewriting and Mobile Expressions in Functional Languages. In: Nagl, M., Schürr, A., Münch, M. (eds.) AGTIVE 1999. LNCS, vol. 1779, pp. 1-13. Springer, Heidelberg (2000)</ref-fulltext></reference><reference id="18"><ref-info><ref-title><ref-titletext>Defining and parsing visual languages with layered graph grammars</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">0031066425</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>J.</ce:initials><ce:indexed-name>Rekers J.</ce:indexed-name><ce:surname>Rekers</ce:surname></author><author seq="2"><ce:initials>A.</ce:initials><ce:indexed-name>Schurr A.</ce:indexed-name><ce:surname>Schürr</ce:surname></author></ref-authors><ref-sourcetitle>Journal of Visual Languages and Computing</ref-sourcetitle><ref-publicationyear first="1997"/><ref-volisspag><voliss volume="8" issue="1"/><pagerange first="27" last="55"/></ref-volisspag></ref-info><ref-fulltext>Rekers, J., Schürr, A.: Defining and parsing visual languages with layered graph grammars. Journal of Visual Languages and Computing 8(1), 27-55 (1997)</ref-fulltext></reference><reference id="19"><ref-info><ref-title><ref-titletext>Foundations</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">78449239364</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>G.</ce:initials><ce:indexed-name>Rozenberg G.</ce:indexed-name><ce:surname>Rozenberg</ce:surname></author></ref-authors><ref-sourcetitle>Handbook of Graph Grammars and Computing by Graph Transformations</ref-sourcetitle><ref-publicationyear first="1997"/><ref-volisspag><voliss volume="1"/></ref-volisspag><ref-text>World Scientific, River Edge</ref-text></ref-info><ref-fulltext>Rozenberg, G. (ed.): Handbook of Graph Grammars and Computing by Graph Transformations, vol. 1: Foundations. World Scientific, River Edge (1997)</ref-fulltext></reference><reference id="20"><ref-info><ref-title><ref-titletext>Specification of Graph Translators with Triple Graph Grammars</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">84947918251</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>A.</ce:initials><ce:indexed-name>Schurr A.</ce:indexed-name><ce:surname>Schürr</ce:surname></author></ref-authors><ref-sourcetitle>LNCS</ref-sourcetitle><ref-publicationyear first="1995"/><ref-volisspag><voliss volume="903"/><pagerange first="151" last="163"/></ref-volisspag><ref-text>Mayr, E.W., Schmidt, G., Tinhofer, G. (eds.) WG 1994. Springer, Heidelberg</ref-text></ref-info><ref-fulltext>Schürr, A.: Specification of Graph Translators with Triple Graph Grammars. In: Mayr, E.W., Schmidt, G., Tinhofer, G. (eds.) WG 1994. LNCS, vol. 903, pp. 151-163. Springer, Heidelberg (1995)</ref-fulltext></reference></bibliography></tail></bibrecord></item></abstracts-retrieval-response>