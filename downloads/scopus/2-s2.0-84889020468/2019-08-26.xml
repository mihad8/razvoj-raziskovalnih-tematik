<abstracts-retrieval-response xmlns="http://www.elsevier.com/xml/svapi/abstract/dtd" xmlns:dn="http://www.elsevier.com/xml/svapi/abstract/dtd" xmlns:ait="http://www.elsevier.com/xml/ani/ait" xmlns:ce="http://www.elsevier.com/xml/ani/common" xmlns:cto="http://www.elsevier.com/xml/cto/dtd" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:prism="http://prismstandard.org/namespaces/basic/2.0/" xmlns:xocs="http://www.elsevier.com/xml/xocs/dtd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><coredata><prism:url>https://api.elsevier.com/content/abstract/scopus_id/84889020468</prism:url><dc:identifier>SCOPUS_ID:84889020468</dc:identifier><eid>2-s2.0-84889020468</eid><prism:doi>10.1109/EURMIC.1994.390341</prism:doi><article-number>390341</article-number><dc:title>Fault-tolerant mapping onto VLSI/WSI processor arrays</dc:title><prism:aggregationType>Conference Proceeding</prism:aggregationType><srctype>p</srctype><subtype>cp</subtype><subtypeDescription>Conference Paper</subtypeDescription><citedby-count>1</citedby-count><prism:publicationName>Conference Proceedings of the EUROMICRO</prism:publicationName><source-id>18655</source-id><prism:isbn>0818664304</prism:isbn><prism:isbn>9780818664304</prism:isbn><prism:issn>10896503</prism:issn><prism:startingPage>697</prism:startingPage><prism:endingPage>703</prism:endingPage><prism:pageRange>697-703</prism:pageRange><prism:coverDate>1994-12-01</prism:coverDate><openaccess>0</openaccess><openaccessFlag>false</openaccessFlag><dc:creator><author seq="1" auid="55947972500"><ce:initials>B.</ce:initials><ce:indexed-name>Robic B.</ce:indexed-name><ce:surname>Robic</ce:surname><ce:given-name>Borut</ce:given-name><preferred-name><ce:initials>B.</ce:initials><ce:indexed-name>Robic B.</ce:indexed-name><ce:surname>Robic</ce:surname><ce:given-name>Borut</ce:given-name></preferred-name><author-url>https://api.elsevier.com/content/author/author_id/55947972500</author-url><affiliation id="60023955" href="https://api.elsevier.com/content/affiliation/affiliation_id/60023955"/></author></dc:creator><dc:description><abstract xmlns="" original="y" xml:lang="eng"> <ce:para>This paper deals with efficient methods for mapping arbitrary parallel algorithms onto faulty general purpose VLSI/WSI data-driven array. First, a brief overview of several architectural designs of the array is given. Next, three directions for the algorithmic improvement of a certain mapping scheme are presented. None of these directions takes into account the possibility of the defects in the array. Therefore, we present two methods which can be used to adapt any of the above algorithmic improvements for the case where defects are present in the array. In the first Map-onto-faulty-array method, faulty cells are taken into consideration during all the phases of the mapping/improvement process. In contrast, the second Map-and-correct method initially ignores faulty cells and takes care of them in the correction phase following the mapping/improvement process. © 1994 IEEE.</ce:para> </abstract></dc:description><link href="https://api.elsevier.com/content/abstract/scopus_id/84889020468" rel="self"/><link href="https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&amp;scp=84889020468&amp;origin=inward" rel="scopus"/><link href="https://www.scopus.com/inward/citedby.uri?partnerID=HzOxMe3b&amp;scp=84889020468&amp;origin=inward" rel="scopus-citedby"/></coredata><affiliation id="60023955" href="https://api.elsevier.com/content/affiliation/affiliation_id/60023955"><affilname>Jozef Stefan Institute</affilname><affiliation-city>Ljubljana</affiliation-city><affiliation-country>Slovenia</affiliation-country></affiliation><authors><author seq="1" auid="55947972500"><ce:initials>B.</ce:initials><ce:indexed-name>Robic B.</ce:indexed-name><ce:surname>Robic</ce:surname><ce:given-name>Borut</ce:given-name><preferred-name><ce:initials>B.</ce:initials><ce:indexed-name>Robic B.</ce:indexed-name><ce:surname>Robic</ce:surname><ce:given-name>Borut</ce:given-name></preferred-name><author-url>https://api.elsevier.com/content/author/author_id/55947972500</author-url><affiliation id="60023955" href="https://api.elsevier.com/content/affiliation/affiliation_id/60023955"/></author><author seq="2" auid="6602885301"><ce:initials>J.</ce:initials><ce:indexed-name>Silc J.</ce:indexed-name><ce:surname>Šilc</ce:surname><ce:given-name>Jurij</ce:given-name><preferred-name><ce:initials>J.</ce:initials><ce:indexed-name>Šilc J.</ce:indexed-name><ce:surname>Šilc</ce:surname><ce:given-name>Jurij</ce:given-name></preferred-name><author-url>https://api.elsevier.com/content/author/author_id/6602885301</author-url><affiliation id="60023955" href="https://api.elsevier.com/content/affiliation/affiliation_id/60023955"/></author></authors><language xml:lang="eng"/><authkeywords/><idxterms><mainterm weight="a" candidate="n">Fault-tolerant</mainterm><mainterm weight="a" candidate="n">Faulty cells</mainterm><mainterm weight="a" candidate="n">Mapping scheme</mainterm><mainterm weight="a" candidate="n">Processor array</mainterm></idxterms><subject-areas><subject-area code="2207" abbrev="ENGI">Control and Systems Engineering</subject-area><subject-area code="1708" abbrev="COMP">Hardware and Architecture</subject-area></subject-areas><item xmlns=""><ait:process-info><ait:date-delivered day="25" month="01" timestamp="2018-01-25T02:29:18.000018-05:00" year="2018"/><ait:date-sort day="01" month="12" year="1994"/><ait:status stage="S300" state="update" type="core"/></ait:process-info><bibrecord><item-info><copyright type="Elsevier">Copyright 2013 Elsevier B.V., All rights reserved.</copyright><itemidlist> <ce:doi>10.1109/EURMIC.1994.390341</ce:doi> <itemid idtype="PUI">370389433</itemid> <itemid idtype="CPX">20135017065114</itemid> <itemid idtype="SCP">84889020468</itemid> <itemid idtype="SGR">84889020468</itemid> </itemidlist><history> <date-created day="09" month="12" year="2013"/> </history><dbcollection>CPX</dbcollection><dbcollection>Scopusbase</dbcollection></item-info><head><citation-info><citation-type code="cp"/><citation-language xml:lang="eng" language="English"/><abstract-language xml:lang="eng" language="English"/></citation-info><citation-title><titletext original="y" xml:lang="eng" language="English">Fault-tolerant mapping onto VLSI/WSI processor arrays</titletext></citation-title><author-group><author auid="55947972500" seq="1"><ce:initials>B.</ce:initials><ce:indexed-name>Robic B.</ce:indexed-name><ce:surname>Robic</ce:surname><ce:given-name>Borut</ce:given-name><preferred-name> <ce:initials>B.</ce:initials> <ce:indexed-name>Robic B.</ce:indexed-name> <ce:surname>Robic</ce:surname> <ce:given-name>Borut</ce:given-name> </preferred-name></author><author auid="6602885301" seq="2"><ce:initials>J.</ce:initials><ce:indexed-name>Silc J.</ce:indexed-name><ce:surname>Šilc</ce:surname><ce:given-name>Jurij</ce:given-name><preferred-name> <ce:initials>J.</ce:initials> <ce:indexed-name>Šilc J.</ce:indexed-name> <ce:surname>Šilc</ce:surname> <ce:given-name>Jurij</ce:given-name> </preferred-name></author><affiliation afid="60023955" country="svn" dptid="114046344"><organization>Jozef Stefan Institute</organization><organization>Laboratory for Computer Architectures</organization><address-part>Jamova 39</address-part><city-group>61111 Ljubljana</city-group><affiliation-id afid="60023955" dptid="114046344"/><country>Slovenia</country></affiliation></author-group><correspondence><affiliation country="svn"><organization>Jozef Stefan Institute</organization><organization>Laboratory for Computer Architectures</organization><address-part>Jamova 39</address-part><city-group>61111 Ljubljana</city-group><country>Slovenia</country></affiliation></correspondence><abstracts><abstract original="y" xml:lang="eng"> <ce:para>This paper deals with efficient methods for mapping arbitrary parallel algorithms onto faulty general purpose VLSI/WSI data-driven array. First, a brief overview of several architectural designs of the array is given. Next, three directions for the algorithmic improvement of a certain mapping scheme are presented. None of these directions takes into account the possibility of the defects in the array. Therefore, we present two methods which can be used to adapt any of the above algorithmic improvements for the case where defects are present in the array. In the first Map-onto-faulty-array method, faulty cells are taken into consideration during all the phases of the mapping/improvement process. In contrast, the second Map-and-correct method initially ignores faulty cells and takes care of them in the correction phase following the mapping/improvement process. © 1994 IEEE.</ce:para> </abstract></abstracts><source country="usa" srcid="18655" type="p"><sourcetitle>Conference Proceedings of the EUROMICRO</sourcetitle><sourcetitle-abbrev>Conf. Proc. EUROMICRO</sourcetitle-abbrev><issuetitle>Proceedings of the 20th EUROMICRO Conference on System Architecture and Integration, EUROMICRO 1994</issuetitle><issn type="print">10896503</issn><isbn length="10" level="volume">0818664304</isbn><isbn length="13" level="volume">9780818664304</isbn><codencode>EROMF</codencode><volisspag> <pagerange first="697" last="703"/> </volisspag><article-number>390341</article-number><publicationyear first="1994"/><publicationdate> <year>1994</year> <date-text xfab-added="true">1994</date-text></publicationdate><additional-srcinfo> <conferenceinfo> <confevent> <confname>20th EUROMICRO Conference on System Architecture and Integration, EUROMICRO 1994</confname> <conflocation country="gbr"> <city-group>Liverpool</city-group> </conflocation> <confdate> <startdate day="08" month="09" year="1994"/> <enddate day="08" month="09" year="1994"/> </confdate> <confcode>101038</confcode> </confevent> <confpublication> <procpagerange>var.pagings</procpagerange> </confpublication> </conferenceinfo> </additional-srcinfo></source><enhancement><classificationgroup><classifications type="CPXCLASS"> <classification> <classification-code>423</classification-code> <classification-description>Non Mechanical Properties and Tests of Building Materials</classification-description> </classification> <classification> <classification-code>723</classification-code> <classification-description>Computer Software, Data Handling and Applications</classification-description> </classification> <classification> <classification-code>902.1</classification-code> <classification-description>Engineering Graphics</classification-description> </classification> <classification> <classification-code>921</classification-code> <classification-description>Applied Mathematics</classification-description> </classification> <classification> <classification-code>951</classification-code> <classification-description>Materials Science</classification-description> </classification> </classifications><classifications type="GEOCLASS"> <classification> <classification-code>Related Topics</classification-code> </classification> </classifications><classifications type="ASJC"> <classification>2207</classification> <classification>1708</classification> </classifications><classifications type="SUBJABBR"><classification>ENGI</classification><classification>COMP</classification></classifications></classificationgroup></enhancement></head><tail/></bibrecord></item></abstracts-retrieval-response>