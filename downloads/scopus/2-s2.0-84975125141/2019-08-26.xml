<abstracts-retrieval-response xmlns="http://www.elsevier.com/xml/svapi/abstract/dtd" xmlns:dn="http://www.elsevier.com/xml/svapi/abstract/dtd" xmlns:ait="http://www.elsevier.com/xml/ani/ait" xmlns:ce="http://www.elsevier.com/xml/ani/common" xmlns:cto="http://www.elsevier.com/xml/cto/dtd" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:prism="http://prismstandard.org/namespaces/basic/2.0/" xmlns:xocs="http://www.elsevier.com/xml/xocs/dtd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><coredata><prism:url>https://api.elsevier.com/content/abstract/scopus_id/84975125141</prism:url><dc:identifier>SCOPUS_ID:84975125141</dc:identifier><eid>2-s2.0-84975125141</eid><prism:doi>10.1007/s10462-016-9487-5</prism:doi><dc:title>Pairwise saturations in inductive logic programming</dc:title><prism:aggregationType>Journal</prism:aggregationType><srctype>j</srctype><subtype>ar</subtype><subtypeDescription>Article</subtypeDescription><citedby-count>0</citedby-count><prism:publicationName>Artificial Intelligence Review</prism:publicationName><dc:publisher>Springer Netherlands</dc:publisher><source-id>24141</source-id><prism:issn>15737462 02692821</prism:issn><prism:volume>47</prism:volume><prism:issueIdentifier>3</prism:issueIdentifier><prism:startingPage>395</prism:startingPage><prism:endingPage>415</prism:endingPage><prism:pageRange>395-415</prism:pageRange><prism:coverDate>2017-03-01</prism:coverDate><openaccess>0</openaccess><openaccessFlag>false</openaccessFlag><dc:creator><author seq="1" auid="57170606600"><ce:initials>M.</ce:initials><ce:indexed-name>Drole M.</ce:indexed-name><ce:surname>Drole</ce:surname><ce:given-name>Miha</ce:given-name><preferred-name><ce:initials>M.</ce:initials><ce:indexed-name>Drole M.</ce:indexed-name><ce:surname>Drole</ce:surname><ce:given-name>Miha</ce:given-name></preferred-name><author-url>https://api.elsevier.com/content/author/author_id/57170606600</author-url><affiliation id="60031106" href="https://api.elsevier.com/content/affiliation/affiliation_id/60031106"/></author></dc:creator><dc:description><abstract xmlns="" original="y" xml:lang="eng"><publishercopyright>© 2016, Springer Science+Business Media Dordrecht.</publishercopyright><ce:para>One of the main issues when using inductive logic programming (ILP) in practice remain the long running times that are needed by ILP systems to induce the hypothesis. We explore the possibility of reducing the induction running times of systems that use asymmetric relative minimal generalisation (ARMG) by analysing the bottom clauses of examples that serve as inputs into the generalisation operator. Using the fact that the ARMG covers all of the examples and that it is a subset of the variabilization of one of the examples, we identify literals that cannot appear in the ARMG and remove them prior to computing the generalisation. We apply this procedure to the ProGolem ILP system and test its performance on several real world data sets. The experimental results show an average speedup of 36% compared to the base ProGolem system and 12% compared to ProGolem extended with caching, both without a decrease in the accuracy of the produced hypotheses. We also observe that the gain from using the proposed method varies greatly, depending on the structure of the data set.</ce:para></abstract></dc:description><link href="https://api.elsevier.com/content/abstract/scopus_id/84975125141" rel="self"/><link href="https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&amp;scp=84975125141&amp;origin=inward" rel="scopus"/><link href="https://www.scopus.com/inward/citedby.uri?partnerID=HzOxMe3b&amp;scp=84975125141&amp;origin=inward" rel="scopus-citedby"/></coredata><affiliation id="60031106" href="https://api.elsevier.com/content/affiliation/affiliation_id/60031106"><affilname>University of Ljubljana</affilname><affiliation-city>Ljubljana</affiliation-city><affiliation-country>Slovenia</affiliation-country></affiliation><authors><author seq="1" auid="57170606600"><ce:initials>M.</ce:initials><ce:indexed-name>Drole M.</ce:indexed-name><ce:surname>Drole</ce:surname><ce:given-name>Miha</ce:given-name><preferred-name><ce:initials>M.</ce:initials><ce:indexed-name>Drole M.</ce:indexed-name><ce:surname>Drole</ce:surname><ce:given-name>Miha</ce:given-name></preferred-name><author-url>https://api.elsevier.com/content/author/author_id/57170606600</author-url><affiliation id="60031106" href="https://api.elsevier.com/content/affiliation/affiliation_id/60031106"/></author><author seq="2" auid="57188535146"><ce:initials>I.</ce:initials><ce:indexed-name>Kononenko I.</ce:indexed-name><ce:surname>Kononenko</ce:surname><ce:given-name>Igor</ce:given-name><preferred-name><ce:initials>I.</ce:initials><ce:indexed-name>Kononenko I.</ce:indexed-name><ce:surname>Kononenko</ce:surname><ce:given-name>Igor</ce:given-name></preferred-name><author-url>https://api.elsevier.com/content/author/author_id/57188535146</author-url><affiliation id="60031106" href="https://api.elsevier.com/content/affiliation/affiliation_id/60031106"/></author></authors><language xml:lang="eng"/><authkeywords><author-keyword>Bottom-up</author-keyword><author-keyword>Inductive logic programming</author-keyword><author-keyword>Machine learning</author-keyword><author-keyword>Saturation</author-keyword></authkeywords><idxterms><mainterm weight="b" candidate="n">Bottom up</mainterm><mainterm weight="b" candidate="n">Data set</mainterm><mainterm weight="b" candidate="n">Generalisation</mainterm><mainterm weight="b" candidate="n">Generalisation operator</mainterm><mainterm weight="b" candidate="n">Literals</mainterm><mainterm weight="b" candidate="n">Real-world</mainterm><mainterm weight="b" candidate="n">Running time</mainterm></idxterms><subject-areas><subject-area code="1203" abbrev="ARTS">Language and Linguistics</subject-area><subject-area code="3310" abbrev="SOCI">Linguistics and Language</subject-area><subject-area code="1702" abbrev="COMP">Artificial Intelligence</subject-area></subject-areas><item xmlns=""><ait:process-info><ait:date-delivered year="2018" month="06" day="11" timestamp="2018-06-11T22:41:44.000044-04:00"/><ait:date-sort year="2017" month="03" day="01"/><ait:status type="core" state="update" stage="S300"/></ait:process-info><bibrecord><item-info><copyright type="Elsevier">Copyright 2017 Elsevier B.V., All rights reserved.</copyright><itemidlist><ce:doi>10.1007/s10462-016-9487-5</ce:doi><itemid idtype="PUI">610884376</itemid><itemid idtype="CAR-ID">651733366</itemid><itemid idtype="CPX">20162602530245</itemid><itemid idtype="SCP">84975125141</itemid><itemid idtype="SGR">84975125141</itemid></itemidlist><history><date-created year="2017" month="02" day="16" timestamp="BST 10:01:15"/></history><dbcollection>CPX</dbcollection><dbcollection>Scopusbase</dbcollection></item-info><head><citation-info><citation-type code="ar"/><citation-language xml:lang="eng" language="English"/><abstract-language xml:lang="eng" language="English"/><author-keywords><author-keyword>Bottom-up</author-keyword><author-keyword>Inductive logic programming</author-keyword><author-keyword>Machine learning</author-keyword><author-keyword>Saturation</author-keyword></author-keywords></citation-info><citation-title><titletext xml:lang="eng" original="y" language="English">Pairwise saturations in inductive logic programming</titletext></citation-title><author-group><author auid="57170606600" seq="1" type="auth" orcid="0000-0002-7330-182X"><ce:initials>M.</ce:initials><ce:indexed-name>Drole M.</ce:indexed-name><ce:surname>Drole</ce:surname><ce:given-name>Miha</ce:given-name><preferred-name><ce:initials>M.</ce:initials><ce:indexed-name>Drole M.</ce:indexed-name><ce:surname>Drole</ce:surname><ce:given-name>Miha</ce:given-name></preferred-name></author><author auid="57188535146" seq="2" type="auth"><ce:initials>I.</ce:initials><ce:indexed-name>Kononenko I.</ce:indexed-name><ce:surname>Kononenko</ce:surname><ce:given-name>Igor</ce:given-name><preferred-name><ce:initials>I.</ce:initials><ce:indexed-name>Kononenko I.</ce:indexed-name><ce:surname>Kononenko</ce:surname><ce:given-name>Igor</ce:given-name></preferred-name></author><affiliation afid="60031106" country="svn"><organization>Faculty of Computer and Information Science</organization><organization>University of Ljubljana</organization><address-part>Večna pot 113</address-part><city>Ljubljana</city><postal-code>1001</postal-code><affiliation-id afid="60031106"/><country>Slovenia</country></affiliation></author-group><correspondence><person><ce:initials>M.</ce:initials><ce:indexed-name>Drole M.</ce:indexed-name><ce:surname>Drole</ce:surname><ce:given-name>Miha</ce:given-name></person><affiliation country="svn"><organization>Faculty of Computer and Information Science</organization><organization>University of Ljubljana</organization><address-part>Večna pot 113</address-part><city>Ljubljana</city><postal-code>1001</postal-code><country>Slovenia</country></affiliation></correspondence><abstracts><abstract original="y" xml:lang="eng"><publishercopyright>© 2016, Springer Science+Business Media Dordrecht.</publishercopyright><ce:para>One of the main issues when using inductive logic programming (ILP) in practice remain the long running times that are needed by ILP systems to induce the hypothesis. We explore the possibility of reducing the induction running times of systems that use asymmetric relative minimal generalisation (ARMG) by analysing the bottom clauses of examples that serve as inputs into the generalisation operator. Using the fact that the ARMG covers all of the examples and that it is a subset of the variabilization of one of the examples, we identify literals that cannot appear in the ARMG and remove them prior to computing the generalisation. We apply this procedure to the ProGolem ILP system and test its performance on several real world data sets. The experimental results show an average speedup of 36% compared to the base ProGolem system and 12% compared to ProGolem extended with caching, both without a decrease in the accuracy of the produced hypotheses. We also observe that the gain from using the proposed method varies greatly, depending on the structure of the data set.</ce:para></abstract></abstracts><source srcid="24141" type="j" country="nld"><sourcetitle>Artificial Intelligence Review</sourcetitle><sourcetitle-abbrev>Artif Intell Rev</sourcetitle-abbrev><translated-sourcetitle xml:lang="eng">Artificial Intelligence Review</translated-sourcetitle><issn type="electronic">15737462</issn><issn type="print">02692821</issn><codencode>AIRVE</codencode><volisspag><voliss volume="47" issue="3"/><pagerange first="395" last="415"/></volisspag><publicationyear first="2017"/><publicationdate><year>2017</year><month>03</month><day>01</day><date-text xfab-added="true">1 March 2017</date-text></publicationdate><publisher><publishername>Springer Netherlands</publishername></publisher></source><enhancement><classificationgroup><classifications type="ASJC"><classification>1203</classification><classification>3310</classification><classification>1702</classification></classifications><classifications type="SUBJABBR"><classification>ARTS</classification><classification>SOCI</classification><classification>COMP</classification></classifications></classificationgroup></enhancement></head><tail><bibliography refcount="15"><reference id="1"><ref-info><ref-title><ref-titletext>Learning horn expressions with LOGAN-H</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">33947270829</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>M.</ce:initials><ce:indexed-name>Arias M.</ce:indexed-name><ce:surname>Arias</ce:surname></author><author seq="2"><ce:initials>R.</ce:initials><ce:indexed-name>Khardon R.</ce:indexed-name><ce:surname>Khardon</ce:surname></author><author seq="3"><ce:initials>J.</ce:initials><ce:indexed-name>Maloberti J.</ce:indexed-name><ce:surname>Maloberti</ce:surname></author></ref-authors><ref-sourcetitle>J Mach Learn Res</ref-sourcetitle><ref-publicationyear first="2007"/><ref-volisspag><voliss volume="8"/><pagerange first="549" last="587"/></ref-volisspag></ref-info><ref-fulltext>Arias M, Khardon R, Maloberti J (2007) Learning horn expressions with LOGAN-H. J Mach Learn Res 8:549–587</ref-fulltext></reference><reference id="2"><ref-info><ref-title><ref-titletext>Mining association rules in multiple relations</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">84957890121</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>L.</ce:initials><ce:indexed-name>Dehaspe L.</ce:indexed-name><ce:surname>Dehaspe</ce:surname></author><author seq="2"><ce:initials>L.D.</ce:initials><ce:indexed-name>Raedt L.D.</ce:indexed-name><ce:surname>Raedt</ce:surname></author><author seq="3"><ce:initials>N.</ce:initials><ce:indexed-name>Lavrac N.</ce:indexed-name><ce:surname>Lavrac</ce:surname></author><author seq="4"><ce:initials>S.</ce:initials><ce:indexed-name>Dzeroski S.</ce:indexed-name><ce:surname>Dzeroski</ce:surname></author></ref-authors><ref-sourcetitle>Inductive logic programming, 7th international workshop, ILP-97, Prague, 17–20 Sept</ref-sourcetitle><ref-publicationyear first="1997"/><ref-volisspag><voliss volume="1997"/><pagerange first="125" last="132"/></ref-volisspag><ref-text>Proceedings, Springer</ref-text></ref-info><ref-fulltext>Dehaspe L, Raedt LD (1997) Mining association rules in multiple relations. In: Lavrac N, Dzeroski S (eds) Inductive logic programming, 7th international workshop, ILP-97, Prague, 17–20 Sept 1997, Proceedings. Springer, pp 125–132</ref-fulltext></reference><reference id="3"><ref-info><ref-title><ref-titletext>Induction of logic programs with more than one recursive clause by analyzing saturations</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">38049102493</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>M.</ce:initials><ce:indexed-name>Furusawa M.</ce:indexed-name><ce:surname>Furusawa</ce:surname></author><author seq="2"><ce:initials>N.</ce:initials><ce:indexed-name>Inuzuka N.</ce:indexed-name><ce:surname>Inuzuka</ce:surname></author><author seq="3"><ce:initials>H.</ce:initials><ce:indexed-name>Seki H.</ce:indexed-name><ce:surname>Seki</ce:surname></author><author seq="4"><ce:initials>H.</ce:initials><ce:indexed-name>Itoh H.</ce:indexed-name><ce:surname>Itoh</ce:surname></author></ref-authors><ref-sourcetitle>Proceedings of the 7th international workshop on inductive logic programming (ILP’97)</ref-sourcetitle><ref-publicationyear first="1997"/><ref-volisspag><voliss volume="1297"/><pagerange first="165" last="172"/></ref-volisspag><ref-text>Springer, LNCS</ref-text></ref-info><ref-fulltext>Furusawa M, Inuzuka N, Seki H, Itoh H (1997) Induction of logic programs with more than one recursive clause by analyzing saturations. In: Proceedings of the 7th international workshop on inductive logic programming (ILP’97), vol 1297. Springer, LNCS, pp 165–172</ref-fulltext></reference><reference id="4"><ref-info><ref-title><ref-titletext>Efficient induction of recursive definitions by structural analysis of saturations</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">0003384578</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>P.</ce:initials><ce:indexed-name>Idestam-Almquist P.</ce:indexed-name><ce:surname>Idestam-Almquist</ce:surname></author></ref-authors><ref-sourcetitle>Advances in inductive logic programming</ref-sourcetitle><ref-publicationyear first="1996"/><ref-text>Raedt LD, (ed), IOS Press, Amsterdam</ref-text></ref-info><ref-fulltext>Idestam-Almquist P (1996) Efficient induction of recursive definitions by structural analysis of saturations. In: Raedt LD (ed) Advances in inductive logic programming. IOS Press, Amsterdam</ref-fulltext></reference><reference id="5"><ref-info><ref-title><ref-titletext>Relational association mining based on structural analysis of saturation clauses</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">33750713740</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>N.</ce:initials><ce:indexed-name>Inuzuka N.</ce:indexed-name><ce:surname>Inuzuka</ce:surname></author><author seq="2"><ce:initials>J.</ce:initials><ce:indexed-name>Ichi Motoyama J.</ce:indexed-name><ce:surname>Ichi Motoyama</ce:surname></author><author seq="3"><ce:initials>T.</ce:initials><ce:indexed-name>Nakano T.</ce:indexed-name><ce:surname>Nakano</ce:surname></author><author seq="4"><ce:initials>B.</ce:initials><ce:indexed-name>Gabrys B.</ce:indexed-name><ce:surname>Gabrys</ce:surname></author><author seq="5"><ce:initials>R.J.</ce:initials><ce:indexed-name>Howlett R.J.</ce:indexed-name><ce:surname>Howlett</ce:surname></author><author seq="6"><ce:initials>L.C.</ce:initials><ce:indexed-name>Jain L.C.</ce:indexed-name><ce:surname>Jain</ce:surname></author></ref-authors><ref-sourcetitle>KES (2), Lecture Notes in Computer Science, vol 4252. Springer</ref-sourcetitle><ref-publicationyear first="2006"/><ref-volisspag><pagerange first="1162" last="1169"/></ref-volisspag></ref-info><ref-fulltext>Inuzuka N, Ichi Motoyama J, Nakano T (2006) Relational association mining based on structural analysis of saturation clauses. In: Gabrys B, Howlett RJ, Jain LC (eds) KES (2), Lecture Notes in Computer Science, vol 4252. Springer, pp 1162–1169</ref-fulltext></reference><reference id="6"><ref-info><ref-title><ref-titletext>A method for reduction of examples in relational learning</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">84898791693</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>O.</ce:initials><ce:indexed-name>Kuzelka O.</ce:indexed-name><ce:surname>Kuželka</ce:surname></author><author seq="2"><ce:initials>A.</ce:initials><ce:indexed-name>Szaboova A.</ce:indexed-name><ce:surname>Szabóová</ce:surname></author><author seq="3"><ce:initials>F.</ce:initials><ce:indexed-name>Zelezny F.</ce:indexed-name><ce:surname>Železný</ce:surname></author></ref-authors><ref-sourcetitle>J Intell Inf Syst</ref-sourcetitle><ref-publicationyear first="2014"/><ref-volisspag><voliss volume="42" issue="2"/><pagerange first="255" last="281"/></ref-volisspag></ref-info><ref-fulltext>Kuželka O, Szabóová A, Železný F (2014) A method for reduction of examples in relational learning. J Intell Inf Syst 42(2):255–281. doi:10.1007/s10844-013-0294-z</ref-fulltext></reference><reference id="7"><ref-info><ref-title><ref-titletext>Inverse entailment and progol. Special issue on inductive logic programming</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">77951503082</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>S.</ce:initials><ce:indexed-name>Muggleton S.</ce:indexed-name><ce:surname>Muggleton</ce:surname></author></ref-authors><ref-sourcetitle>New Gener Comput</ref-sourcetitle><ref-publicationyear first="1995"/><ref-volisspag><voliss volume="13" issue="3-4"/><pagerange first="245" last="286"/></ref-volisspag></ref-info><ref-fulltext>Muggleton S (1995) Inverse entailment and progol. Special issue on inductive logic programming. New Gener Comput 13(3–4):245–286</ref-fulltext></reference><reference id="8"><ref-info><ref-title><ref-titletext>Efficient induction of logic programs. In: Proceedings of the first conference on Algorithmic Learning Theory</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">85012087649</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>S.</ce:initials><ce:indexed-name>Muggleton S.</ce:indexed-name><ce:surname>Muggleton</ce:surname></author><author seq="2"><ce:initials>C.</ce:initials><ce:indexed-name>Feng C.</ce:indexed-name><ce:surname>Feng</ce:surname></author></ref-authors><ref-sourcetitle>pp 368–381</ref-sourcetitle><ref-publicationyear first="1990"/></ref-info><ref-fulltext>Muggleton S, Feng C (1990) Efficient induction of logic programs. In: Proceedings of the first conference on Algorithmic Learning Theory, pp 368–381</ref-fulltext></reference><reference id="9"><ref-info><ref-title><ref-titletext>Inductive logic programming: theory and methods</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">0028429573</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>S.</ce:initials><ce:indexed-name>Muggleton S.</ce:indexed-name><ce:surname>Muggleton</ce:surname></author><author seq="2"><ce:initials>L.D.</ce:initials><ce:indexed-name>Raedt L.D.</ce:indexed-name><ce:surname>Raedt</ce:surname></author></ref-authors><ref-sourcetitle>J Log Program</ref-sourcetitle><ref-publicationyear first="1994"/><ref-volisspag><voliss volume="19" issue="20"/><pagerange first="629" last="679"/></ref-volisspag></ref-info><ref-fulltext>Muggleton S, Raedt LD (1994) Inductive logic programming: theory and methods. J Log Program 19(20):629–679. doi:10.1016/0743-1066(94)90035-3</ref-fulltext></reference><reference id="10"><ref-info><ref-title><ref-titletext>Progolem: a system based on relative minimal generalisation</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">77955020388</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>S.</ce:initials><ce:indexed-name>Muggleton S.</ce:indexed-name><ce:surname>Muggleton</ce:surname></author><author seq="2"><ce:initials>J.C.A.</ce:initials><ce:indexed-name>Santos J.C.A.</ce:indexed-name><ce:surname>Santos</ce:surname></author><author seq="3"><ce:initials>A.</ce:initials><ce:indexed-name>Tamaddoni-Nezhad A.</ce:indexed-name><ce:surname>Tamaddoni-Nezhad</ce:surname></author><author seq="4"><ce:initials>L.D.</ce:initials><ce:indexed-name>Raedt L.D.</ce:indexed-name><ce:surname>Raedt</ce:surname></author></ref-authors><ref-sourcetitle>ILP, lecture notes in computer science, vol 5989. Springer</ref-sourcetitle><ref-publicationyear first="2009"/><ref-volisspag><pagerange first="131" last="148"/></ref-volisspag></ref-info><ref-fulltext>Muggleton S, Santos JCA, Tamaddoni-Nezhad A (2009) Progolem: a system based on relative minimal generalisation. In: Raedt LD (ed) ILP, lecture notes in computer science, vol 5989. Springer, pp 131–148. doi:10.1007/978-3-642-13840-9</ref-fulltext></reference><reference id="11"><ref-info><ref-title><ref-titletext>Mode directed path finding</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">33646404059</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>I.</ce:initials><ce:indexed-name>Ong I.</ce:indexed-name><ce:surname>Ong</ce:surname></author><author seq="2"><ce:initials>I.</ce:initials><ce:indexed-name>de Castro Dutra I.</ce:indexed-name><ce:surname>de Castro Dutra</ce:surname></author><author seq="3"><ce:initials>D.</ce:initials><ce:indexed-name>Page D.</ce:indexed-name><ce:surname>Page</ce:surname></author><author seq="4"><ce:initials>V.</ce:initials><ce:indexed-name>Costa V.</ce:indexed-name><ce:surname>Costa</ce:surname></author><author seq="5"><ce:initials>J.</ce:initials><ce:indexed-name>Gama J.</ce:indexed-name><ce:surname>Gama</ce:surname></author><author seq="6"><ce:initials>R.</ce:initials><ce:indexed-name>Camacho R.</ce:indexed-name><ce:surname>Camacho</ce:surname></author><author seq="7"><ce:initials>P.</ce:initials><ce:indexed-name>Brazdil P.</ce:indexed-name><ce:surname>Brazdil</ce:surname></author><author seq="8"><ce:initials>A.</ce:initials><ce:indexed-name>Jorge A.</ce:indexed-name><ce:surname>Jorge</ce:surname></author><author seq="9"><ce:initials>L.</ce:initials><ce:indexed-name>Torgo L.</ce:indexed-name><ce:surname>Torgo</ce:surname></author></ref-authors><ref-sourcetitle>Machine learning: ECML 2005, lecture notes in computer science</ref-sourcetitle><ref-publicationyear first="2005"/><ref-volisspag><voliss volume="3720"/><pagerange first="673" last="681"/></ref-volisspag><ref-text>Springer, Berlin</ref-text></ref-info><ref-fulltext>Ong I, de Castro Dutra I, Page D, Costa V (2005) Mode directed path finding. In: Gama J, Camacho R, Brazdil P, Jorge A, Torgo L (eds) Machine learning: ECML 2005, lecture notes in computer science, vol 3720. Springer, Berlin, pp 673–681</ref-fulltext></reference><reference id="12"><ref-info><ref-title><ref-titletext>Automatic methods of inductive inference. Ph.D. thesis</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">0004130988</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>G.</ce:initials><ce:indexed-name>Plotkin G.</ce:indexed-name><ce:surname>Plotkin</ce:surname></author></ref-authors><ref-sourcetitle>Edinburgh University</ref-sourcetitle><ref-publicationyear first="1971"/></ref-info><ref-fulltext>Plotkin G (1971) Automatic methods of inductive inference. Ph.D. thesis, Edinburgh University</ref-fulltext></reference><reference id="13"><ref-info><ref-title><ref-titletext>FOIL: a midterm report</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">8844252892</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>J.R.</ce:initials><ce:indexed-name>Quinlan J.R.</ce:indexed-name><ce:surname>Quinlan</ce:surname></author><author seq="2"><ce:initials>R.M.</ce:initials><ce:indexed-name>Cameron-Jones R.M.</ce:indexed-name><ce:surname>Cameron-Jones</ce:surname></author><author seq="3"><ce:initials>P.</ce:initials><ce:indexed-name>Brazdil P.</ce:indexed-name><ce:surname>Brazdil</ce:surname></author></ref-authors><ref-sourcetitle>Machine learning: ECML-93, European conference on machine learning, Vienna, 5–7 Apr, 1993, Proceedings, lecture notes in computer science, vol. 667. Springer</ref-sourcetitle><ref-publicationyear first="1993"/><ref-volisspag><pagerange first="3" last="20"/></ref-volisspag></ref-info><ref-fulltext>Quinlan JR, Cameron-Jones RM (1993) FOIL: a midterm report. In: Brazdil P (ed) Machine learning: ECML-93, European conference on machine learning, Vienna, 5–7 Apr, 1993, Proceedings, lecture notes in computer science, vol. 667. Springer, pp 3–20</ref-fulltext></reference><reference id="14"><ref-info><ref-title><ref-titletext>Learning relations by pathfinding. In: Proceedings of AAAI-92, San Jose</ref-titletext></ref-title><refd-itemidlist><itemid idtype="SGR">0027003752</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>B.L.</ce:initials><ce:indexed-name>Richards B.L.</ce:indexed-name><ce:surname>Richards</ce:surname></author><author seq="2"><ce:initials>R.J.</ce:initials><ce:indexed-name>Mooney R.J.</ce:indexed-name><ce:surname>Mooney</ce:surname></author></ref-authors><ref-sourcetitle>pp 50–55</ref-sourcetitle><ref-publicationyear first="1992"/></ref-info><ref-fulltext>Richards BL, Mooney RJ (1992) Learning relations by pathfinding. In: Proceedings of AAAI-92, San Jose. pp 50–55</ref-fulltext></reference><reference id="15"><ref-info><refd-itemidlist><itemid idtype="SGR">2542454374</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>A.</ce:initials><ce:indexed-name>Srinivasan A.</ce:indexed-name><ce:surname>Srinivasan</ce:surname></author></ref-authors><ref-sourcetitle>The Aleph Manual</ref-sourcetitle><ref-publicationyear first="2004"/><ref-website><ce:e-address type="email">http://www.comlab.ox.ac.uk/activities/machinelearning/Aleph/</ce:e-address></ref-website></ref-info><ref-fulltext>Srinivasan A (2004) The Aleph Manual. http://www.comlab.ox.ac.uk/activities/machinelearning/Aleph/</ref-fulltext></reference></bibliography></tail></bibrecord></item></abstracts-retrieval-response>