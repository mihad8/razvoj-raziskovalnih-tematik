<abstracts-retrieval-response xmlns="http://www.elsevier.com/xml/svapi/abstract/dtd" xmlns:dn="http://www.elsevier.com/xml/svapi/abstract/dtd" xmlns:ait="http://www.elsevier.com/xml/ani/ait" xmlns:ce="http://www.elsevier.com/xml/ani/common" xmlns:cto="http://www.elsevier.com/xml/cto/dtd" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:prism="http://prismstandard.org/namespaces/basic/2.0/" xmlns:xocs="http://www.elsevier.com/xml/xocs/dtd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><coredata><prism:url>https://api.elsevier.com/content/abstract/scopus_id/84977100947</prism:url><dc:identifier>SCOPUS_ID:84977100947</dc:identifier><eid>2-s2.0-84977100947</eid><prism:doi>10.4230/OASIcs.SLATE.2016.5</prism:doi><dc:title>LLLR parsing: A combination of LL and LR parsing</dc:title><prism:aggregationType>Conference Proceeding</prism:aggregationType><srctype>p</srctype><subtype>cp</subtype><subtypeDescription>Conference Paper</subtypeDescription><citedby-count>0</citedby-count><prism:publicationName>OpenAccess Series in Informatics</prism:publicationName><dc:publisher>
                        Schloss Dagstuhl- Leibniz-Zentrum fur Informatik GmbH, Dagstuhl Publishing
                    </dc:publisher><source-id>21100235606</source-id><prism:isbn>9783959770064</prism:isbn><prism:issn>21906807</prism:issn><prism:volume>51</prism:volume><prism:startingPage>51</prism:startingPage><prism:endingPage>513</prism:endingPage><prism:pageRange>51-513</prism:pageRange><prism:coverDate>2016-06-01</prism:coverDate><openaccess/><openaccessFlag/><dc:creator><author seq="1" auid="6507603461"><ce:initials>B.</ce:initials><ce:indexed-name>Slivnik B.</ce:indexed-name><ce:surname>Slivnik</ce:surname><ce:given-name>Boštjan</ce:given-name><preferred-name><ce:initials>B.</ce:initials><ce:indexed-name>Slivnik B.</ce:indexed-name><ce:surname>Slivnik</ce:surname><ce:given-name>Boštjan</ce:given-name></preferred-name><author-url>https://api.elsevier.com/content/author/author_id/6507603461</author-url><affiliation id="60031106" href="https://api.elsevier.com/content/affiliation/affiliation_id/60031106"/></author></dc:creator><dc:description><abstract xmlns="" original="y" xml:lang="eng">
                        <publishercopyright>© Boštjan Slivnik; licensed under Creative Commons License CC-BY.</publishercopyright>
                        <ce:para>A new parsing method called LLLR parsing is defined and a method for producing LLLR parsers is described. An LLLR parser uses an LL parser as its backbone and parses as much of its input string using LL parsing as possible. To resolve LL conflicts it triggers small embedded LR parsers. An embedded LR parser starts parsing the remaining input and once the LL conflict is resolved, the LR parser produces the left parse of the substring it has just parsed and passes the control back to the backbone LL parser. The LLLR(k) parser can be constructed for any LR(k) grammar. It produces the left parse of the input string without any backtracking and, if used for a syntax-directed translation, it evaluates semantic actions using the top-down strategy just like the canonical LL(k) parser. An LLLR(k) parser is appropriate for grammars where the LL(k) conflicting nonterminals either appear relatively close to the bottom of the derivation trees or produce short substrings. In such cases an LLLR parser can perform a significantly better error recovery than an LR parser since the most part of the input string is parsed with the backbone LL parser. LLLR parsing is similar to LL(∗) parsing except that it (a) uses LR(k) parsers instead of finite automata to resolve the LL(k) conflicts and (b) does not perform any backtracking.</ce:para>
                    </abstract></dc:description><link href="https://api.elsevier.com/content/abstract/scopus_id/84977100947" rel="self"/><link href="https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&amp;scp=84977100947&amp;origin=inward" rel="scopus"/><link href="https://www.scopus.com/inward/citedby.uri?partnerID=HzOxMe3b&amp;scp=84977100947&amp;origin=inward" rel="scopus-citedby"/></coredata><affiliation id="60031106" href="https://api.elsevier.com/content/affiliation/affiliation_id/60031106"><affilname>University of Ljubljana</affilname><affiliation-city>Ljubljana</affiliation-city><affiliation-country>Slovenia</affiliation-country></affiliation><authors><author seq="1" auid="6507603461"><ce:initials>B.</ce:initials><ce:indexed-name>Slivnik B.</ce:indexed-name><ce:surname>Slivnik</ce:surname><ce:given-name>Boštjan</ce:given-name><preferred-name><ce:initials>B.</ce:initials><ce:indexed-name>Slivnik B.</ce:indexed-name><ce:surname>Slivnik</ce:surname><ce:given-name>Boštjan</ce:given-name></preferred-name><author-url>https://api.elsevier.com/content/author/author_id/6507603461</author-url><affiliation id="60031106" href="https://api.elsevier.com/content/affiliation/affiliation_id/60031106"/></author></authors><language xml:lang="eng"/><authkeywords><author-keyword>Left parse</author-keyword><author-keyword>LL parsing</author-keyword><author-keyword>LR languages</author-keyword></authkeywords><idxterms><mainterm weight="b" candidate="n">Input string</mainterm><mainterm weight="b" candidate="n">Left parse</mainterm><mainterm weight="b" candidate="n">LL parsing</mainterm><mainterm weight="b" candidate="n">LR parsers</mainterm><mainterm weight="b" candidate="n">Parsing methods</mainterm><mainterm weight="b" candidate="n">Semantic action</mainterm><mainterm weight="b" candidate="n">Sub-strings</mainterm><mainterm weight="b" candidate="n">Syntax-directed translations</mainterm></idxterms><subject-areas><subject-area code="3305" abbrev="SOCI">Geography, Planning and Development</subject-area><subject-area code="2611" abbrev="MATH">Modeling and Simulation</subject-area></subject-areas><item xmlns=""><ait:process-info><ait:date-delivered day="14" month="09" timestamp="2018-09-14T23:09:54.000054-04:00" year="2018"/><ait:date-sort day="01" month="06" year="2016"/><ait:status stage="S300" state="update" type="core"/></ait:process-info><bibrecord><item-info><copyright type="Elsevier">Copyright 2017 Elsevier B.V., All rights reserved.</copyright><itemidlist>
                    <ce:doi>10.4230/OASIcs.SLATE.2016.5</ce:doi>
                    <itemid idtype="PUI">611121248</itemid>
                    <itemid idtype="CAR-ID">652299245</itemid>
                    <itemid idtype="CPX">20162802579625</itemid>
                    <itemid idtype="REAXYSCAR">20161505807</itemid>
                    <itemid idtype="SCP">84977100947</itemid>
                    <itemid idtype="SGR">84977100947</itemid>
                </itemidlist><history>
                    <date-created day="11" month="07" timestamp="BST 10:40:33" year="2016"/>
                </history><dbcollection>CPX</dbcollection><dbcollection>REAXYSCAR</dbcollection><dbcollection>Scopusbase</dbcollection></item-info><head><citation-info><citation-type code="cp"/><citation-language xml:lang="eng" language="English"/><abstract-language xml:lang="eng" language="English"/><author-keywords>
                        <author-keyword xml:lang="eng">Left parse</author-keyword>
                        <author-keyword xml:lang="eng">LL parsing</author-keyword>
                        <author-keyword xml:lang="eng">LR languages</author-keyword>
                    </author-keywords></citation-info><citation-title><titletext original="y" xml:lang="eng" language="English">LLLR parsing: A combination of LL and LR parsing</titletext></citation-title><author-group><author auid="6507603461" seq="1" type="auth"><ce:initials>B.</ce:initials><ce:indexed-name>Slivnik B.</ce:indexed-name><ce:surname>Slivnik</ce:surname><ce:given-name>Boštjan</ce:given-name><preferred-name>
                            <ce:initials>B.</ce:initials>
                            <ce:indexed-name>Slivnik B.</ce:indexed-name>
                            <ce:surname>Slivnik</ce:surname>
                            <ce:given-name>Boštjan</ce:given-name>
                        </preferred-name></author><affiliation afid="60031106" country="svn"><organization>University of Ljubljana</organization><organization>Faculty of Computer and Information Science</organization><city>Ljubljana</city><affiliation-id afid="60031106"/><country>Slovenia</country></affiliation></author-group><correspondence><person>
                        <ce:initials>B.</ce:initials>
                        <ce:indexed-name>Slivnik B.</ce:indexed-name>
                        <ce:surname>Slivnik</ce:surname>
                        <ce:given-name>Boštjan</ce:given-name>
                    </person><affiliation country="svn"><organization>University of Ljubljana</organization><organization>Faculty of Computer and Information Science</organization><city>Ljubljana</city><country>Slovenia</country></affiliation></correspondence><abstracts><abstract original="y" xml:lang="eng">
                        <publishercopyright>© Boštjan Slivnik; licensed under Creative Commons License CC-BY.</publishercopyright>
                        <ce:para>A new parsing method called LLLR parsing is defined and a method for producing LLLR parsers is described. An LLLR parser uses an LL parser as its backbone and parses as much of its input string using LL parsing as possible. To resolve LL conflicts it triggers small embedded LR parsers. An embedded LR parser starts parsing the remaining input and once the LL conflict is resolved, the LR parser produces the left parse of the substring it has just parsed and passes the control back to the backbone LL parser. The LLLR(k) parser can be constructed for any LR(k) grammar. It produces the left parse of the input string without any backtracking and, if used for a syntax-directed translation, it evaluates semantic actions using the top-down strategy just like the canonical LL(k) parser. An LLLR(k) parser is appropriate for grammars where the LL(k) conflicting nonterminals either appear relatively close to the bottom of the derivation trees or produce short substrings. In such cases an LLLR parser can perform a significantly better error recovery than an LR parser since the most part of the input string is parsed with the backbone LL parser. LLLR parsing is similar to LL(∗) parsing except that it (a) uses LR(k) parsers instead of finite automata to resolve the LL(k) conflicts and (b) does not perform any backtracking.</ce:para>
                    </abstract></abstracts><source country="deu" srcid="21100235606" type="p"><sourcetitle>OpenAccess Series in Informatics</sourcetitle><sourcetitle-abbrev>OpenAccess Ser. Informatics</sourcetitle-abbrev><translated-sourcetitle xml:lang="eng">OpenAccess Series in Informatics</translated-sourcetitle><issuetitle>5th Symposium on Languages, Applications and Technologies, SLATE 2016</issuetitle><issn type="print">21906807</issn><isbn length="13" level="volume" type="electronic">9783959770064</isbn><volisspag>
                        <voliss volume="51"/>
                        <pagerange first="51" last="513"/>
                    </volisspag><publicationyear first="2016"/><publicationdate>
                        <year>2016</year>
                        <month>06</month>
                        <day>01</day>
                    <date-text xfab-added="true">1 June 2016</date-text></publicationdate><website>
                        <ce:e-address type="email">http://drops.dagstuhl.de/opus/institut_oasics.php?fakultaet=03</ce:e-address>
                    </website><contributor-group>
                        <contributor role="edit" seq="1">
                            <ce:initials>M.</ce:initials>
                            <ce:indexed-name>Mernik M.</ce:indexed-name>
                            <ce:surname>Mernik</ce:surname>
                            <ce:given-name>Marjan</ce:given-name>
                            <ce:e-address type="email">Marjan.Mernik@um.si</ce:e-address>
                        </contributor>
                    </contributor-group><contributor-group>
                        <contributor role="edit" seq="1">
                            <ce:initials>H.G.</ce:initials>
                            <ce:indexed-name>Oliveira H.G.</ce:indexed-name>
                            <ce:surname>Oliveira</ce:surname>
                            <ce:given-name>Hugo Goncalo</ce:given-name>
                            <ce:e-address type="email">hroliv@dei.uc.pt</ce:e-address>
                        </contributor>
                    </contributor-group><contributor-group>
                        <contributor role="edit" seq="1">
                            <ce:initials>J.P.</ce:initials>
                            <ce:indexed-name>Leal J.P.</ce:indexed-name>
                            <ce:surname>Leal</ce:surname>
                            <ce:given-name>Jose Paulo</ce:given-name>
                            <ce:e-address type="email">zp@dcc.fc.up.pt</ce:e-address>
                        </contributor>
                    </contributor-group><publisher>
                        <publishername>Schloss Dagstuhl- Leibniz-Zentrum fur Informatik GmbH, Dagstuhl Publishing</publishername>
                    </publisher><additional-srcinfo>
                        <conferenceinfo>
                            <confevent>
                                <confname>5th Symposium on Languages, Applications and Technologies, SLATE 2016</confname>
                                <confnumber>5</confnumber>
                                <confseriestitle>Symposium on Languages, Applications and Technologies</confseriestitle>
                                <conflocation country="svn">
                                    <city>Maribor</city>
                                </conflocation>
                                <confdate>
                                    <startdate day="20" month="06" year="2016"/>
                                    <enddate day="21" month="06" year="2016"/>
                                </confdate>
                                <confURL>http://www.dagstuhl.de/dagpub/978-3-95977-006-4</confURL>
                                <confcode>122170</confcode>
                                <confsponsors complete="n">
                                    <confsponsor/>
                                </confsponsors>
                            </confevent>
                        </conferenceinfo>
                    </additional-srcinfo></source><enhancement><classificationgroup><classifications type="ASJC">
                            <classification>3305</classification>
                            <classification>2611</classification>
                        </classifications><classifications type="CPXCLASS">
                            <classification>
                                <classification-code>482.2</classification-code>
                                <classification-description>Minerals</classification-description>
                            </classification>
                            <classification>
                                <classification-code>721.1</classification-code>
                                <classification-description>Computer Theory (Includes Formal Logic, Automata Theory, Switching Theory and Programming Theory)</classification-description>
                            </classification>
                        </classifications><classifications type="FLXCLASS">
                            <classification>
                                <classification-code>902</classification-code>
                                <classification-description>FLUIDEX; Related Topics</classification-description>
                            </classification>
                        </classifications><classifications type="SUBJABBR"><classification>SOCI</classification><classification>MATH</classification></classifications></classificationgroup></enhancement></head><tail><bibliography refcount="19">
                    <reference id="1">
                        <ref-info>
                            <refd-itemidlist>
                                <itemid idtype="SGR">0003791899</itemid>
                            </refd-itemidlist>
                            <ref-authors>
                                <author seq="1">
                                    <ce:initials>A.V.</ce:initials>
                                    <ce:indexed-name>Aho A.V.</ce:indexed-name>
                                    <ce:surname>Aho</ce:surname>
                                </author>
                                <author seq="2">
                                    <ce:initials>J.D.</ce:initials>
                                    <ce:indexed-name>Ullman J.D.</ce:indexed-name>
                                    <ce:surname>Ullman</ce:surname>
                                </author>
                            </ref-authors>
                            <ref-sourcetitle>The Theory of Parsing, Translation and Compiling, Volume Volume I: Parsing</ref-sourcetitle>
                            <ref-publicationyear first="1972"/>
                            <ref-text>Prentice-Hall, Englewood Cliffs, N. J., USA</ref-text>
                        </ref-info>
                        <ref-fulltext>Alfred V. Aho and Jeffrey D. Ullman. The Theory of Parsing, Translation and Compiling, volume Volume I: Parsing. Prentice-Hall, Englewood Cliffs, N. J., USA, 1972.</ref-fulltext>
                    </reference>
                    <reference id="2">
                        <ref-info>
                            <ref-title>
                                <ref-titletext>Generalized left corner parsing</ref-titletext>
                            </ref-title>
                            <refd-itemidlist>
                                <itemid idtype="SGR">84987245792</itemid>
                            </refd-itemidlist>
                            <ref-authors>
                                <author seq="1">
                                    <ce:initials>A.J.</ce:initials>
                                    <ce:indexed-name>Demers A.J.</ce:indexed-name>
                                    <ce:surname>Demers</ce:surname>
                                </author>
                            </ref-authors>
                            <ref-sourcetitle>Proceedings of the 4th ACM SIGACT-SIGPLAN Symposium on Principles of Programming Languages POPL'77</ref-sourcetitle>
                            <ref-publicationyear first="1977"/>
                            <ref-volisspag>
                                <pagerange first="170" last="182"/>
                            </ref-volisspag>
                            <ref-text>Los Angeles, CA, USA, ACM, ACM</ref-text>
                        </ref-info>
                        <ref-fulltext>Alan J. Demers. Generalized left corner parsing. In Proceedings of the 4th ACM SIGACT-SIGPLAN symposium on Principles of programming languages POPL'77, pages 170-182, Los Angeles, CA, USA, 1977. ACM, ACM.</ref-fulltext>
                    </reference>
                    <reference id="3">
                        <ref-info>
                            <ref-title>
                                <ref-titletext>Parsing expression grammars: A recognition-based syntactic foundation</ref-titletext>
                            </ref-title>
                            <refd-itemidlist>
                                <itemid idtype="SGR">2442486783</itemid>
                            </refd-itemidlist>
                            <ref-authors>
                                <author seq="1">
                                    <ce:initials>B.</ce:initials>
                                    <ce:indexed-name>Ford B.</ce:indexed-name>
                                    <ce:surname>Ford</ce:surname>
                                </author>
                            </ref-authors>
                            <ref-sourcetitle>Proceedings of the 31st ACM SIGACT-SIGPLAN Symposium on Principles of Programming Languages POPL'04</ref-sourcetitle>
                            <ref-publicationyear first="2004"/>
                            <ref-volisspag>
                                <pagerange first="111" last="122"/>
                            </ref-volisspag>
                            <ref-text>Venice, Italy, ACM, ACM</ref-text>
                        </ref-info>
                        <ref-fulltext>Bryan Ford. Parsing expression grammars: a recognition-based syntactic foundation. In Proceedings of the 31st ACM SIGACT-SIGPLAN symposium on Principles of programming languages POPL'04, pages 111-122, Venice, Italy, 2004. ACM, ACM.</ref-fulltext>
                    </reference>
                    <reference id="4">
                        <ref-info>
                            <ref-title>
                                <ref-titletext>Recursive ascent-descent parsers</ref-titletext>
                            </ref-title>
                            <refd-itemidlist>
                                <itemid idtype="SGR">84977157203</itemid>
                            </refd-itemidlist>
                            <ref-authors>
                                <author seq="1">
                                    <ce:initials>R.</ce:initials>
                                    <ce:indexed-name>Nigel Horspool R.</ce:indexed-name>
                                    <ce:surname>Nigel Horspool</ce:surname>
                                </author>
                            </ref-authors>
                            <ref-sourcetitle>Compiler Compilers, Third International Workshop CC'90, Schwerin, FRG, Volume 477 of Lecture Notes in Computer Science</ref-sourcetitle>
                            <ref-publicationyear first="1990"/>
                            <ref-volisspag>
                                <pagerange first="1" last="10"/>
                            </ref-volisspag>
                            <ref-text>Dieter Hammer, editor, Springer-Verlag</ref-text>
                        </ref-info>
                        <ref-fulltext>R. Nigel Horspool. Recursive ascent-descent parsers. In Dieter Hammer, editor, Compiler Compilers, Third International Workshop CC'90, Schwerin, FRG, volume 477 of Lecture Notes in Computer Science, pages 1-10. Springer-Verlag, 1990.</ref-fulltext>
                    </reference>
                    <reference id="5">
                        <ref-info>
                            <ref-title>
                                <ref-titletext>Recursive ascent-descent parsing</ref-titletext>
                            </ref-title>
                            <refd-itemidlist>
                                <itemid idtype="SGR">43949171758</itemid>
                            </refd-itemidlist>
                            <ref-authors>
                                <author seq="1">
                                    <ce:initials>R.</ce:initials>
                                    <ce:indexed-name>Nigel Horspool R.</ce:indexed-name>
                                    <ce:surname>Nigel Horspool</ce:surname>
                                </author>
                            </ref-authors>
                            <ref-sourcetitle>Journal of Computer Languages</ref-sourcetitle>
                            <ref-publicationyear first="1993"/>
                            <ref-volisspag>
                                <voliss issue="1" volume="18"/>
                                <pagerange first="1" last="16"/>
                            </ref-volisspag>
                        </ref-info>
                        <ref-fulltext>R. Nigel Horspool. Recursive ascent-descent parsing. Journal of Computer Languages, 18(1):1-16, 1993.</ref-fulltext>
                    </reference>
                    <reference id="6">
                        <ref-info>
                            <refd-itemidlist>
                                <itemid idtype="SGR">83155194265</itemid>
                            </refd-itemidlist>
                            <ref-authors>
                                <author seq="1">
                                    <ce:initials>M.</ce:initials>
                                    <ce:indexed-name>Might M.</ce:indexed-name>
                                    <ce:surname>Might</ce:surname>
                                </author>
                                <author seq="2">
                                    <ce:initials>D.</ce:initials>
                                    <ce:indexed-name>Darais D.</ce:indexed-name>
                                    <ce:surname>Darais</ce:surname>
                                </author>
                            </ref-authors>
                            <ref-sourcetitle>Yacc Is Dead</ref-sourcetitle>
                            <ref-publicationyear first="2010"/>
                            <ref-text>Cornell University Library arXiv.org:1010.5023</ref-text>
                        </ref-info>
                        <ref-fulltext>Matthew Might and David Darais. Yacc is dead. Available online at Cornell University Library (arXiv.org:1010.5023), 2010.</ref-fulltext>
                    </reference>
                    <reference id="7">
                        <ref-info>
                            <ref-title>
                                <ref-titletext>Generalized left corner parsing</ref-titletext>
                            </ref-title>
                            <refd-itemidlist>
                                <itemid idtype="SGR">0346858497</itemid>
                            </refd-itemidlist>
                            <ref-authors>
                                <author seq="1">
                                    <ce:initials>M.-J.</ce:initials>
                                    <ce:indexed-name>Nederhof M.-J.</ce:indexed-name>
                                    <ce:surname>Nederhof</ce:surname>
                                </author>
                            </ref-authors>
                            <ref-sourcetitle>Proceedings of the Sixth Conference on European Chapter of the Association for Computational Linguistics EACL'93</ref-sourcetitle>
                            <ref-publicationyear first="1993"/>
                            <ref-volisspag>
                                <pagerange first="305" last="314"/>
                            </ref-volisspag>
                            <ref-text>Stroudsburg, PA, USA, Association for Computational Linguistics</ref-text>
                        </ref-info>
                        <ref-fulltext>Mark-Jan Nederhof. Generalized left corner parsing. In Proceedings of the sixth conference on European chapter of the Association for Computational Linguistics EACL'93, pages 305-314, Stroudsburg, PA, USA, 1993. Association for Computational Linguistics.</ref-fulltext>
                    </reference>
                    <reference id="8">
                        <ref-info>
                            <ref-title>
                                <ref-titletext>LL (∗): The foundation of the ANTLR parser generator</ref-titletext>
                            </ref-title>
                            <refd-itemidlist>
                                <itemid idtype="SGR">79959911655</itemid>
                            </refd-itemidlist>
                            <ref-authors>
                                <author seq="1">
                                    <ce:initials>T.</ce:initials>
                                    <ce:indexed-name>Parr T.</ce:indexed-name>
                                    <ce:surname>Parr</ce:surname>
                                </author>
                                <author seq="2">
                                    <ce:initials>K.</ce:initials>
                                    <ce:indexed-name>Fischer K.</ce:indexed-name>
                                    <ce:surname>Fischer</ce:surname>
                                </author>
                            </ref-authors>
                            <ref-sourcetitle>ACM SIGPLAN Notices - PLDI'10</ref-sourcetitle>
                            <ref-publicationyear first="2011"/>
                            <ref-volisspag>
                                <voliss issue="6" volume="46"/>
                                <pagerange first="425" last="436"/>
                            </ref-volisspag>
                        </ref-info>
                        <ref-fulltext>Terence Parr and Kathleen Fischer. LL (∗): The foundation of the ANTLR parser generator. ACM SIGPLAN Notices - PLDI'10, 46(6):425-436, 2011.</ref-fulltext>
                    </reference>
                    <reference id="9">
                        <ref-info>
                            <ref-title>
                                <ref-titletext>Adaptive LL (∗) parsing: The power of dynamic analysis</ref-titletext>
                            </ref-title>
                            <refd-itemidlist>
                                <itemid idtype="SGR">84908273742</itemid>
                            </refd-itemidlist>
                            <ref-authors>
                                <author seq="1">
                                    <ce:initials>T.</ce:initials>
                                    <ce:indexed-name>Parr T.</ce:indexed-name>
                                    <ce:surname>Parr</ce:surname>
                                </author>
                                <author seq="2">
                                    <ce:initials>S.</ce:initials>
                                    <ce:indexed-name>Harwell S.</ce:indexed-name>
                                    <ce:surname>Harwell</ce:surname>
                                </author>
                                <author seq="3">
                                    <ce:initials>K.</ce:initials>
                                    <ce:indexed-name>Fischer K.</ce:indexed-name>
                                    <ce:surname>Fischer</ce:surname>
                                </author>
                            </ref-authors>
                            <ref-sourcetitle>Proceedings of the 2014 ACM SIGPLAN International Conference on Object-oriented Programming Systems Languages and Applications (OOPSLA'14)</ref-sourcetitle>
                            <ref-publicationyear first="2014"/>
                            <ref-volisspag>
                                <voliss issue="598" volume="579"/>
                            </ref-volisspag>
                            <ref-text>Portland, OR, USA, ACM, ACM</ref-text>
                        </ref-info>
                        <ref-fulltext>Terence Parr, Sam Harwell, and Kathleen Fischer. Adaptive LL (∗) parsing: The power of dynamic analysis. In Proceedings of the 2014 ACM SIGPLAN International Conference on Object-Oriented Programming Systems Languages and Applications (OOPSLA'14), volume 579-598, Portland, OR, USA, 2014. ACM, ACM.</ref-fulltext>
                    </reference>
                    <reference id="10">
                        <ref-info>
                            <ref-title>
                                <ref-titletext>Semantic routines and LR (k) parsers</ref-titletext>
                            </ref-title>
                            <refd-itemidlist>
                                <itemid idtype="SGR">0000896497</itemid>
                            </refd-itemidlist>
                            <ref-authors>
                                <author seq="1">
                                    <ce:initials>P.</ce:initials>
                                    <ce:indexed-name>Purdom P.</ce:indexed-name>
                                    <ce:surname>Purdom</ce:surname>
                                </author>
                                <author seq="2">
                                    <ce:initials>C.A.</ce:initials>
                                    <ce:indexed-name>Brown C.A.</ce:indexed-name>
                                    <ce:surname>Brown</ce:surname>
                                </author>
                            </ref-authors>
                            <ref-sourcetitle>Acta Informatica</ref-sourcetitle>
                            <ref-publicationyear first="1980"/>
                            <ref-volisspag>
                                <voliss issue="4" volume="14"/>
                                <pagerange first="299" last="315"/>
                            </ref-volisspag>
                        </ref-info>
                        <ref-fulltext>Paul Purdom and Cynthia A. Brown. Semantic routines and LR (k) parsers. Acta Informatica, 14(4):299-315, 1980.</ref-fulltext>
                    </reference>
                    <reference id="11">
                        <ref-info>
                            <ref-title>
                                <ref-titletext>Producing a top-down parse order with bottomup parsing</ref-titletext>
                            </ref-title>
                            <refd-itemidlist>
                                <itemid idtype="SGR">0029327943</itemid>
                            </refd-itemidlist>
                            <ref-authors>
                                <author seq="1">
                                    <ce:initials>J.P.</ce:initials>
                                    <ce:indexed-name>Schmeiser J.P.</ce:indexed-name>
                                    <ce:surname>Schmeiser</ce:surname>
                                </author>
                                <author seq="2">
                                    <ce:initials>D.T.</ce:initials>
                                    <ce:indexed-name>Barnard D.T.</ce:indexed-name>
                                    <ce:surname>Barnard</ce:surname>
                                </author>
                            </ref-authors>
                            <ref-sourcetitle>Information Processing Letters</ref-sourcetitle>
                            <ref-publicationyear first="1995"/>
                            <ref-volisspag>
                                <voliss issue="6" volume="54"/>
                                <pagerange first="323" last="326"/>
                            </ref-volisspag>
                        </ref-info>
                        <ref-fulltext>James P. Schmeiser and David T. Barnard. Producing a top-down parse order with bottomup parsing. Information Processing Letters, 54(6):323-326, 1995.</ref-fulltext>
                    </reference>
                    <reference id="12">
                        <ref-info>
                            <ref-title>
                                <ref-titletext>GLL parsing</ref-titletext>
                            </ref-title>
                            <refd-itemidlist>
                                <itemid idtype="SGR">77956404406</itemid>
                            </refd-itemidlist>
                            <ref-authors>
                                <author seq="1">
                                    <ce:initials>E.</ce:initials>
                                    <ce:indexed-name>Scott E.</ce:indexed-name>
                                    <ce:surname>Scott</ce:surname>
                                </author>
                                <author seq="2">
                                    <ce:initials>A.</ce:initials>
                                    <ce:indexed-name>Johnstone A.</ce:indexed-name>
                                    <ce:surname>Johnstone</ce:surname>
                                </author>
                            </ref-authors>
                            <ref-sourcetitle>Electronic Notes in Theoretical Computer Science</ref-sourcetitle>
                            <ref-publicationyear first="2010"/>
                            <ref-volisspag>
                                <voliss issue="7" volume="253"/>
                                <pagerange first="177" last="189"/>
                            </ref-volisspag>
                        </ref-info>
                        <ref-fulltext>Elizabeth Scott and Adrian Johnstone. GLL parsing. Electronic Notes in Theoretical Computer Science, 253(7):177-189, 2010.</ref-fulltext>
                    </reference>
                    <reference id="13">
                        <ref-info>
                            <ref-title>
                                <ref-titletext>BRNGLR: A cubic Tomitastyle GLR parsing algorithm</ref-titletext>
                            </ref-title>
                            <refd-itemidlist>
                                <itemid idtype="SGR">34848866217</itemid>
                            </refd-itemidlist>
                            <ref-authors>
                                <author seq="1">
                                    <ce:initials>E.</ce:initials>
                                    <ce:indexed-name>Scott E.</ce:indexed-name>
                                    <ce:surname>Scott</ce:surname>
                                </author>
                                <author seq="2">
                                    <ce:initials>A.</ce:initials>
                                    <ce:indexed-name>Johnstone A.</ce:indexed-name>
                                    <ce:surname>Johnstone</ce:surname>
                                </author>
                                <author seq="3">
                                    <ce:initials>R.</ce:initials>
                                    <ce:indexed-name>Economopoulos R.</ce:indexed-name>
                                    <ce:surname>Economopoulos</ce:surname>
                                </author>
                            </ref-authors>
                            <ref-sourcetitle>Acta Informatica</ref-sourcetitle>
                            <ref-publicationyear first="2007"/>
                            <ref-volisspag>
                                <voliss issue="6" volume="44"/>
                                <pagerange first="427" last="461"/>
                            </ref-volisspag>
                        </ref-info>
                        <ref-fulltext>Elizabeth Scott, Adrian Johnstone, and Rob Economopoulos. BRNGLR: a cubic Tomitastyle GLR parsing algorithm. Acta Informatica, 44(6):427-461, 2007.</ref-fulltext>
                    </reference>
                    <reference id="14">
                        <ref-info>
                            <refd-itemidlist>
                                <itemid idtype="SGR">0038910769</itemid>
                            </refd-itemidlist>
                            <ref-authors>
                                <author seq="1">
                                    <ce:initials>S.</ce:initials>
                                    <ce:indexed-name>Sippu S.</ce:indexed-name>
                                    <ce:surname>Sippu</ce:surname>
                                </author>
                                <author seq="2">
                                    <ce:initials>E.</ce:initials>
                                    <ce:indexed-name>Soisalon-Soininen E.</ce:indexed-name>
                                    <ce:surname>Soisalon-Soininen</ce:surname>
                                </author>
                            </ref-authors>
                            <ref-sourcetitle>Parsing Theory, Volume I: Languages and Parsing, Volume 15 of EATCS Monographs on Theoretical Computer Science</ref-sourcetitle>
                            <ref-publicationyear first="1988"/>
                            <ref-text>Springer-Verlag, Berlin, Germany</ref-text>
                        </ref-info>
                        <ref-fulltext>Seppo Sippu and Eljas Soisalon-Soininen. Parsing Theory, Volume I: Languages and Parsing, volume 15 of EATCS Monographs on Theoretical Computer Science. Springer-Verlag, Berlin, Germany, 1988.</ref-fulltext>
                    </reference>
                    <reference id="15">
                        <ref-info>
                            <refd-itemidlist>
                                <itemid idtype="SGR">0038910769</itemid>
                            </refd-itemidlist>
                            <ref-authors>
                                <author seq="1">
                                    <ce:initials>S.</ce:initials>
                                    <ce:indexed-name>Sippu S.</ce:indexed-name>
                                    <ce:surname>Sippu</ce:surname>
                                </author>
                                <author seq="2">
                                    <ce:initials>E.</ce:initials>
                                    <ce:indexed-name>Soisalon-Soininen E.</ce:indexed-name>
                                    <ce:surname>Soisalon-Soininen</ce:surname>
                                </author>
                            </ref-authors>
                            <ref-sourcetitle>Parsing Theory, Volume II: LR (k) and LL (k) Parsing, Volume 20 of EATCS Monographs on Theoretical Computer Science</ref-sourcetitle>
                            <ref-publicationyear first="1990"/>
                            <ref-text>Springer-Verlag, Berlin, Germany</ref-text>
                        </ref-info>
                        <ref-fulltext>Seppo Sippu and Eljas Soisalon-Soininen. Parsing Theory, Volume II: LR (k) and LL (k) Parsing, volume 20 of EATCS Monographs on Theoretical Computer Science. Springer-Verlag, Berlin, Germany, 1990.</ref-fulltext>
                    </reference>
                    <reference id="16">
                        <ref-info>
                            <ref-title>
                                <ref-titletext>The embedded left LR parser</ref-titletext>
                            </ref-title>
                            <refd-itemidlist>
                                <itemid idtype="SGR">83155189087</itemid>
                            </refd-itemidlist>
                            <ref-authors>
                                <author seq="1">
                                    <ce:initials>B.</ce:initials>
                                    <ce:indexed-name>Slivnik B.</ce:indexed-name>
                                    <ce:surname>Slivnik</ce:surname>
                                </author>
                            </ref-authors>
                            <ref-sourcetitle>Proceedings of the Federated Conference on Computer Science and Information Systems</ref-sourcetitle>
                            <ref-publicationyear first="2011"/>
                            <ref-volisspag>
                                <pagerange first="871" last="878"/>
                            </ref-volisspag>
                            <ref-text>Szczecin, Poland, IEEE Computer Society Press</ref-text>
                        </ref-info>
                        <ref-fulltext>Boštjan Slivnik. The embedded left LR parser. In Proceedings of the Federated Conference on Computer Science and Information Systems, pages 871-878, Szczecin, Poland, 2011. IEEE Computer Society Press.</ref-fulltext>
                    </reference>
                    <reference id="17">
                        <ref-info>
                            <ref-title>
                                <ref-titletext>LL conflict resolution using the embedded left LR parser</ref-titletext>
                            </ref-title>
                            <refd-itemidlist>
                                <itemid idtype="SGR">84867478023</itemid>
                            </refd-itemidlist>
                            <ref-authors>
                                <author seq="1">
                                    <ce:initials>B.</ce:initials>
                                    <ce:indexed-name>Slivnik B.</ce:indexed-name>
                                    <ce:surname>Slivnik</ce:surname>
                                </author>
                            </ref-authors>
                            <ref-sourcetitle>Computer Science and Information Systems</ref-sourcetitle>
                            <ref-publicationyear first="2012"/>
                            <ref-volisspag>
                                <voliss issue="3" volume="9"/>
                                <pagerange first="1105" last="1124"/>
                            </ref-volisspag>
                        </ref-info>
                        <ref-fulltext>Boštjan Slivnik. LL conflict resolution using the embedded left LR parser. Computer Science and Information Systems, 9(3):1105-1124, 2012.</ref-fulltext>
                    </reference>
                    <reference id="18">
                        <ref-info>
                            <ref-title>
                                <ref-titletext>Producing the left parse during bottom-up parsing</ref-titletext>
                            </ref-title>
                            <refd-itemidlist>
                                <itemid idtype="SGR">27644524569</itemid>
                            </refd-itemidlist>
                            <ref-authors>
                                <author seq="1">
                                    <ce:initials>B.</ce:initials>
                                    <ce:indexed-name>Slivnik B.</ce:indexed-name>
                                    <ce:surname>Slivnik</ce:surname>
                                </author>
                                <author seq="2">
                                    <ce:initials>B.</ce:initials>
                                    <ce:indexed-name>Vilfan B.</ce:indexed-name>
                                    <ce:surname>Vilfan</ce:surname>
                                </author>
                            </ref-authors>
                            <ref-sourcetitle>Information Processing Letters</ref-sourcetitle>
                            <ref-publicationyear first="2005"/>
                            <ref-volisspag>
                                <voliss issue="6" volume="96"/>
                                <pagerange first="220" last="224"/>
                            </ref-volisspag>
                        </ref-info>
                        <ref-fulltext>Boštjan Slivnik and Boštjan Vilfan. Producing the left parse during bottom-up parsing. Information Processing Letters, 96(6):220-224, 2005.</ref-fulltext>
                    </reference>
                    <reference id="19">
                        <ref-info>
                            <ref-title>
                                <ref-titletext>LLLR parsing</ref-titletext>
                            </ref-title>
                            <refd-itemidlist>
                                <itemid idtype="SGR">84877939408</itemid>
                            </refd-itemidlist>
                            <ref-authors>
                                <author seq="1">
                                    <ce:initials>B.</ce:initials>
                                    <ce:indexed-name>Slivnik B.</ce:indexed-name>
                                    <ce:surname>Slivnik</ce:surname>
                                </author>
                            </ref-authors>
                            <ref-sourcetitle>Proceedings of the 28th Annual ACM Symposium on Applied Computing SAC'13</ref-sourcetitle>
                            <ref-publicationyear first="2013"/>
                            <ref-volisspag>
                                <pagerange first="1698" last="1699"/>
                            </ref-volisspag>
                            <ref-text>Coimbra, Portugal, ACM</ref-text>
                        </ref-info>
                        <ref-fulltext>Boštjan Slivnik. LLLR parsing. In Proceedings of the 28th Annual ACM Symposium on Applied Computing SAC'13, pages 1698-1699, Coimbra, Portugal, 2013. ACM.</ref-fulltext>
                    </reference>
                </bibliography></tail></bibrecord></item></abstracts-retrieval-response>