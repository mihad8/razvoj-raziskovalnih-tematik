<abstracts-retrieval-response xmlns="http://www.elsevier.com/xml/svapi/abstract/dtd" xmlns:dn="http://www.elsevier.com/xml/svapi/abstract/dtd" xmlns:ait="http://www.elsevier.com/xml/ani/ait" xmlns:ce="http://www.elsevier.com/xml/ani/common" xmlns:cto="http://www.elsevier.com/xml/cto/dtd" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:prism="http://prismstandard.org/namespaces/basic/2.0/" xmlns:xocs="http://www.elsevier.com/xml/xocs/dtd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><coredata><prism:url>https://api.elsevier.com/content/abstract/scopus_id/85021423900</prism:url><dc:identifier>SCOPUS_ID:85021423900</dc:identifier><eid>2-s2.0-85021423900</eid><pii>S1477842416301853</pii><prism:doi>10.1016/j.cl.2017.06.002</prism:doi><dc:title>On different LL and LR parsers used in LLLR parsing</dc:title><prism:aggregationType>Journal</prism:aggregationType><srctype>j</srctype><subtype>ar</subtype><subtypeDescription>Article</subtypeDescription><citedby-count>2</citedby-count><prism:publicationName>Computer Languages, Systems and Structures</prism:publicationName><dc:publisher>Elsevier Ltd</dc:publisher><source-id>27865</source-id><prism:issn>14778424</prism:issn><prism:volume>50</prism:volume><prism:startingPage>108</prism:startingPage><prism:endingPage>126</prism:endingPage><prism:pageRange>108-126</prism:pageRange><prism:coverDate>2017-12-01</prism:coverDate><openaccess>0</openaccess><openaccessFlag>false</openaccessFlag><dc:creator><author seq="1" auid="6507603461"><ce:initials>B.</ce:initials><ce:indexed-name>Slivnik B.</ce:indexed-name><ce:surname>Slivnik</ce:surname><ce:given-name>Boštjan</ce:given-name><preferred-name><ce:initials>B.</ce:initials><ce:indexed-name>Slivnik B.</ce:indexed-name><ce:surname>Slivnik</ce:surname><ce:given-name>Boštjan</ce:given-name></preferred-name><author-url>https://api.elsevier.com/content/author/author_id/6507603461</author-url><affiliation id="60031106" href="https://api.elsevier.com/content/affiliation/affiliation_id/60031106"/></author></dc:creator><dc:description><abstract xmlns="" original="y" xml:lang="eng"><publishercopyright>© 2017 Elsevier Ltd</publishercopyright><ce:para>As described in Slivnik (2016), LLLR parsing is a method that parses as much of its input string as possible using the backbone SLL(k) parser and uses small embedded canonical left LR(k) parsers to resolve LL conflicts. Once the LL conflict is resolved, the embedded parser produces the left parse of the substring it has just parsed and passes the control back to the backbone parser together with the information about how the backbone parser should realign its stack as a part of the input has been read by the embedded parser. The LLLR parser produces the left parse of the input string without any backtracking and, if used for a syntax-directed translation, it evaluates semantic actions using the same top-down strategy as the canonical LL(k) parser. In this paper, a more general approach towards LLLR parsing is presented as it is described how any kind of canonical LL(k) or LA(k)LL(k′) parser can be used as the backbone parser and how different kinds of embedded canonical left LR(k) or left LA(k)LR(k′) parsers can be used for LL conflict resolution.</ce:para></abstract></dc:description><link href="https://api.elsevier.com/content/abstract/scopus_id/85021423900" rel="self"/><link href="https://www.scopus.com/inward/record.uri?partnerID=HzOxMe3b&amp;scp=85021423900&amp;origin=inward" rel="scopus"/><link href="https://www.scopus.com/inward/citedby.uri?partnerID=HzOxMe3b&amp;scp=85021423900&amp;origin=inward" rel="scopus-citedby"/></coredata><affiliation id="60031106" href="https://api.elsevier.com/content/affiliation/affiliation_id/60031106"><affilname>University of Ljubljana</affilname><affiliation-city>Ljubljana</affiliation-city><affiliation-country>Slovenia</affiliation-country></affiliation><authors><author seq="1" auid="6507603461"><ce:initials>B.</ce:initials><ce:indexed-name>Slivnik B.</ce:indexed-name><ce:surname>Slivnik</ce:surname><ce:given-name>Boštjan</ce:given-name><preferred-name><ce:initials>B.</ce:initials><ce:indexed-name>Slivnik B.</ce:indexed-name><ce:surname>Slivnik</ce:surname><ce:given-name>Boštjan</ce:given-name></preferred-name><author-url>https://api.elsevier.com/content/author/author_id/6507603461</author-url><affiliation id="60031106" href="https://api.elsevier.com/content/affiliation/affiliation_id/60031106"/></author></authors><language xml:lang="eng"/><authkeywords><author-keyword>Left parse</author-keyword><author-keyword>LL parsing</author-keyword><author-keyword>LR languages</author-keyword></authkeywords><idxterms><mainterm weight="b" candidate="n">Conflict Resolution</mainterm><mainterm weight="b" candidate="n">Input string</mainterm><mainterm weight="b" candidate="n">Left parse</mainterm><mainterm weight="b" candidate="n">LL parsing</mainterm><mainterm weight="b" candidate="n">LR parsers</mainterm><mainterm weight="b" candidate="n">Semantic action</mainterm><mainterm weight="b" candidate="n">Substring</mainterm><mainterm weight="b" candidate="n">Syntax-directed translations</mainterm></idxterms><subject-areas><subject-area code="1712" abbrev="COMP">Software</subject-area><subject-area code="1705" abbrev="COMP">Computer Networks and Communications</subject-area></subject-areas><item xmlns=""><ait:process-info><ait:date-delivered year="2019" month="08" day="18" timestamp="2019-08-18T06:31:49.000049-04:00"/><ait:date-sort year="2017" month="12" day="01"/><ait:status type="core" state="update" stage="S300"/></ait:process-info><bibrecord><item-info><copyright type="Elsevier">Copyright 2017 Elsevier B.V., All rights reserved.</copyright><itemidlist><ce:pii>S1477842416301853</ce:pii><ce:doi>10.1016/j.cl.2017.06.002</ce:doi><itemid idtype="PUI">616998548</itemid><itemid idtype="CAR-ID">666262307</itemid><itemid idtype="CPX">20172703875970</itemid><itemid idtype="SCP">85021423900</itemid><itemid idtype="SGR">85021423900</itemid></itemidlist><history><date-created year="2017" month="07" day="04" timestamp="BST 06:33:18"/></history><dbcollection>CPX</dbcollection><dbcollection>Scopusbase</dbcollection></item-info><head><citation-info><citation-type code="ar"/><citation-language xml:lang="eng" language="English"/><abstract-language xml:lang="eng" language="English"/><author-keywords><author-keyword xml:lang="eng">Left parse</author-keyword><author-keyword xml:lang="eng">LL parsing</author-keyword><author-keyword xml:lang="eng">LR languages</author-keyword></author-keywords></citation-info><citation-title><titletext xml:lang="eng" original="y" language="English">On different LL and LR parsers used in LLLR parsing</titletext></citation-title><author-group><author auid="6507603461" seq="1" type="auth" date-locked="2018-11-14T12:18:28.908"><ce:initials>B.</ce:initials><ce:indexed-name>Slivnik B.</ce:indexed-name><ce:surname>Slivnik</ce:surname><ce:given-name>Boštjan</ce:given-name><preferred-name><ce:initials>B.</ce:initials><ce:indexed-name>Slivnik B.</ce:indexed-name><ce:surname>Slivnik</ce:surname><ce:given-name>Boštjan</ce:given-name></preferred-name></author><affiliation afid="60031106" country="svn"><organization>Faculty of Computer and Information Science</organization><organization>University of Ljubljana</organization><address-part>Večna pot 113</address-part><city>Ljubljana</city><postal-code>SI-1000</postal-code><affiliation-id afid="60031106"/><country>Slovenia</country></affiliation></author-group><abstracts><abstract original="y" xml:lang="eng"><publishercopyright>© 2017 Elsevier Ltd</publishercopyright><ce:para>As described in Slivnik (2016), LLLR parsing is a method that parses as much of its input string as possible using the backbone SLL(k) parser and uses small embedded canonical left LR(k) parsers to resolve LL conflicts. Once the LL conflict is resolved, the embedded parser produces the left parse of the substring it has just parsed and passes the control back to the backbone parser together with the information about how the backbone parser should realign its stack as a part of the input has been read by the embedded parser. The LLLR parser produces the left parse of the input string without any backtracking and, if used for a syntax-directed translation, it evaluates semantic actions using the same top-down strategy as the canonical LL(k) parser. In this paper, a more general approach towards LLLR parsing is presented as it is described how any kind of canonical LL(k) or LA(k)LL(k′) parser can be used as the backbone parser and how different kinds of embedded canonical left LR(k) or left LA(k)LR(k′) parsers can be used for LL conflict resolution.</ce:para></abstract></abstracts><source srcid="27865" type="j" country="gbr"><sourcetitle>Computer Languages, Systems and Structures</sourcetitle><sourcetitle-abbrev>Comput. Lang. Syst. Struct.</sourcetitle-abbrev><translated-sourcetitle xml:lang="eng">Computer Languages, Systems and Structures</translated-sourcetitle><issn type="print">14778424</issn><volisspag><voliss volume="50"/><pagerange first="108" last="126"/></volisspag><publicationyear first="2017"/><publicationdate><year>2017</year><month>12</month><day>01</day><date-text>December 2017</date-text></publicationdate><website><ce:e-address type="email">www.elsevier.com/locate/complang</ce:e-address></website><publisher><publishername>Elsevier Ltd</publishername></publisher></source><enhancement><classificationgroup><classifications type="CPXCLASS"><classification> <classification-code>721.1</classification-code> <classification-description>Computer Theory (Includes Formal Logic, Automata Theory, Switching Theory and Programming Theory)</classification-description> </classification></classifications><classifications type="FLXCLASS"><classification> <classification-code>902</classification-code> <classification-description>FLUIDEX; Related Topics</classification-description> </classification></classifications><classifications type="ASJC"><classification>1712</classification><classification>1705</classification></classifications><classifications type="SUBJABBR"><classification>COMP</classification></classifications></classificationgroup></enhancement></head><tail><bibliography refcount="21"><reference id="1"><ref-info><ref-title><ref-titletext>LLLR parsing: a combination of LL and LR parsing</ref-titletext></ref-title><refd-itemidlist><itemid idtype="FRAGMENTID">bib0001</itemid><itemid idtype="SGR">85021413365</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>B.</ce:initials><ce:indexed-name>Slivnik B.</ce:indexed-name><ce:surname>Slivnik</ce:surname></author></ref-authors><ref-sourcetitle>Proceedings of the fifth symposium on languages, applications and technologies (SLATE’16)</ref-sourcetitle><ref-publicationyear first="2016"/><ref-text>Dagstuhl Publishing Maribor, Slovenia p. 5:1–5:13</ref-text></ref-info><ref-fulltext>Slivnik, B., LLLR parsing: a combination of LL and LR parsing. Proceedings of the fifth symposium on languages, applications and technologies (SLATE’16), 2016, Dagstuhl Publishing, Maribor, Slovenia p. 5:1–5:13.</ref-fulltext></reference><reference id="2"><ref-info><ref-title><ref-titletext>GLL parsing</ref-titletext></ref-title><refd-itemidlist><itemid idtype="FRAGMENTID">bib0002</itemid><itemid idtype="SGR">77956404406</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>E.</ce:initials><ce:indexed-name>Scott E.</ce:indexed-name><ce:surname>Scott</ce:surname></author><author seq="2"><ce:initials>A.</ce:initials><ce:indexed-name>Johnstone A.</ce:indexed-name><ce:surname>Johnstone</ce:surname></author></ref-authors><ref-sourcetitle>Electron Notes Theor Comput Sci</ref-sourcetitle><ref-publicationyear first="2010"/><ref-volisspag><voliss volume="253" issue="7"/><pagerange first="177" last="189"/></ref-volisspag></ref-info><ref-fulltext>Scott, E., Johnstone, A., GLL parsing. Electron Notes Theor Comput Sci 253:7 (2010), 177–189.</ref-fulltext></reference><reference id="3"><ref-info><ref-title><ref-titletext>Generalized left corner parsing</ref-titletext></ref-title><refd-itemidlist><itemid idtype="FRAGMENTID">bib0003</itemid><itemid idtype="SGR">84987245792</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>A.J.</ce:initials><ce:indexed-name>Demers A.J.</ce:indexed-name><ce:surname>Demers</ce:surname></author></ref-authors><ref-sourcetitle>Proceedings of the fourth ACM SIGACT-SIGPLAN symposium on principles of programming languages POPL’77</ref-sourcetitle><ref-publicationyear first="1977"/><ref-volisspag><pagerange first="170" last="182"/></ref-volisspag><ref-text>ACM Los Angeles, CA, USA</ref-text></ref-info><ref-fulltext>Demers, A.J., Generalized left corner parsing. Proceedings of the fourth ACM SIGACT-SIGPLAN symposium on principles of programming languages POPL’77, 1977, ACM, Los Angeles, CA, USA, 170–182.</ref-fulltext></reference><reference id="4"><ref-info><ref-title><ref-titletext>Recursive ascent-descent parsing</ref-titletext></ref-title><refd-itemidlist><itemid idtype="FRAGMENTID">bib0004</itemid><itemid idtype="SGR">84877962801</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>R.N.</ce:initials><ce:indexed-name>Horspool R.N.</ce:indexed-name><ce:surname>Horspool</ce:surname></author></ref-authors><ref-sourcetitle>J Comput Lang</ref-sourcetitle><ref-publicationyear first="1993"/><ref-volisspag><voliss volume="18" issue="1"/><pagerange first="1" last="16"/></ref-volisspag></ref-info><ref-fulltext>Horspool, R.N., Recursive ascent-descent parsing. J Comput Lang 18:1 (1993), 1–16.</ref-fulltext></reference><reference id="5"><ref-info><ref-title><ref-titletext>Generalized left corner parsing</ref-titletext></ref-title><refd-itemidlist><itemid idtype="FRAGMENTID">bib0005</itemid><itemid idtype="SGR">0346858497</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>M.-J.</ce:initials><ce:indexed-name>Nederhof M.-J.</ce:indexed-name><ce:surname>Nederhof</ce:surname></author></ref-authors><ref-sourcetitle>Proceedings of the sixth conference on European chapter of the association for computational linguistics EACL’93</ref-sourcetitle><ref-publicationyear first="1993"/><ref-volisspag><pagerange first="305" last="314"/></ref-volisspag><ref-text>Association for Computational Linguistics Stroudsburg, PA, USA</ref-text></ref-info><ref-fulltext>Nederhof, M.-J., Generalized left corner parsing. Proceedings of the sixth conference on European chapter of the association for computational linguistics EACL’93, 1993, Association for Computational Linguistics, Stroudsburg, PA, USA, 305–314.</ref-fulltext></reference><reference id="6"><ref-info><ref-title><ref-titletext>Producing a top-down parse order with bottom-up parsing</ref-titletext></ref-title><refd-itemidlist><itemid idtype="FRAGMENTID">bib0006</itemid><itemid idtype="SGR">0029327943</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>J.P.</ce:initials><ce:indexed-name>Schmeiser J.P.</ce:indexed-name><ce:surname>Schmeiser</ce:surname></author><author seq="2"><ce:initials>D.T.</ce:initials><ce:indexed-name>Barnard D.T.</ce:indexed-name><ce:surname>Barnard</ce:surname></author></ref-authors><ref-sourcetitle>Inf Process Lett</ref-sourcetitle><ref-publicationyear first="1995"/><ref-volisspag><voliss volume="54" issue="6"/><pagerange first="323" last="326"/></ref-volisspag></ref-info><ref-fulltext>Schmeiser, J.P., Barnard, D.T., Producing a top-down parse order with bottom-up parsing. Inf Process Lett 54:6 (1995), 323–326.</ref-fulltext></reference><reference id="7"><ref-info><ref-title><ref-titletext>Producing the left parse during bottom-up parsing</ref-titletext></ref-title><refd-itemidlist><itemid idtype="FRAGMENTID">bib0007</itemid><itemid idtype="SGR">27644524569</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>B.</ce:initials><ce:indexed-name>Slivnik B.</ce:indexed-name><ce:surname>Slivnik</ce:surname></author><author seq="2"><ce:initials>B.</ce:initials><ce:indexed-name>Vilfan B.</ce:indexed-name><ce:surname>Vilfan</ce:surname></author></ref-authors><ref-sourcetitle>Inf Process Lett</ref-sourcetitle><ref-publicationyear first="2005"/><ref-volisspag><voliss volume="96" issue="6"/><pagerange first="220" last="224"/></ref-volisspag></ref-info><ref-fulltext>Slivnik, B., Vilfan, B., Producing the left parse during bottom-up parsing. Inf Process Lett 96:6 (2005), 220–224.</ref-fulltext></reference><reference id="8"><ref-info><ref-title><ref-titletext>BRNGLR: a cubic Tomita-style GLR parsing algorithm</ref-titletext></ref-title><refd-itemidlist><itemid idtype="FRAGMENTID">bib0008</itemid><itemid idtype="SGR">34848866217</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>E.</ce:initials><ce:indexed-name>Scott E.</ce:indexed-name><ce:surname>Scott</ce:surname></author><author seq="2"><ce:initials>A.</ce:initials><ce:indexed-name>Johnstone A.</ce:indexed-name><ce:surname>Johnstone</ce:surname></author><author seq="3"><ce:initials>R.</ce:initials><ce:indexed-name>Economopoulos R.</ce:indexed-name><ce:surname>Economopoulos</ce:surname></author></ref-authors><ref-sourcetitle>Acta Informatica</ref-sourcetitle><ref-publicationyear first="2007"/><ref-volisspag><voliss volume="44" issue="6"/><pagerange first="427" last="461"/></ref-volisspag></ref-info><ref-fulltext>Scott, E., Johnstone, A., Economopoulos, R., BRNGLR: a cubic Tomita-style GLR parsing algorithm. Acta Informatica 44:6 (2007), 427–461.</ref-fulltext></reference><reference id="9"><ref-info><ref-title><ref-titletext>LL(*): the foundation of the ANTLR parser generator</ref-titletext></ref-title><refd-itemidlist><itemid idtype="FRAGMENTID">bib0009</itemid><itemid idtype="SGR">79959911655</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>T.</ce:initials><ce:indexed-name>Parr T.</ce:indexed-name><ce:surname>Parr</ce:surname></author><author seq="2"><ce:initials>K.</ce:initials><ce:indexed-name>Fischer K.</ce:indexed-name><ce:surname>Fischer</ce:surname></author></ref-authors><ref-sourcetitle>Proceedings of the ACM SIGPLAN notices - PLDI’10</ref-sourcetitle><ref-publicationyear first="2011"/><ref-volisspag><voliss volume="46"/><pagerange first="425" last="436"/></ref-volisspag><ref-text>(6)</ref-text></ref-info><ref-fulltext>Parr, T., Fischer, K., LL(*): the foundation of the ANTLR parser generator. Proceedings of the ACM SIGPLAN notices - PLDI’10, 46, 2011, 425–436 (6).</ref-fulltext></reference><reference id="10"><ref-info><ref-title><ref-titletext>The embedded left LR parser</ref-titletext></ref-title><refd-itemidlist><itemid idtype="FRAGMENTID">bib0010</itemid><itemid idtype="SGR">83155189087</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>B.</ce:initials><ce:indexed-name>Slivnik B.</ce:indexed-name><ce:surname>Slivnik</ce:surname></author></ref-authors><ref-sourcetitle>Proceedings of the federated conference on computer science and information systems</ref-sourcetitle><ref-publicationyear first="2011"/><ref-volisspag><pagerange first="871" last="878"/></ref-volisspag><ref-text>IEEE Computer Society Press Szczecin, Poland</ref-text></ref-info><ref-fulltext>Slivnik, B., The embedded left LR parser. Proceedings of the federated conference on computer science and information systems, 2011, IEEE Computer Society Press, Szczecin, Poland, 871–878.</ref-fulltext></reference><reference id="11"><ref-info><ref-title><ref-titletext>LL conflict resolution using the embedded left LR parser</ref-titletext></ref-title><refd-itemidlist><itemid idtype="FRAGMENTID">bib0011</itemid><itemid idtype="SGR">84867478023</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>B.</ce:initials><ce:indexed-name>Slivnik B.</ce:indexed-name><ce:surname>Slivnik</ce:surname></author></ref-authors><ref-sourcetitle>Comput Sci Inf Syst</ref-sourcetitle><ref-publicationyear first="2012"/><ref-volisspag><voliss volume="9" issue="3"/><pagerange first="1105" last="1124"/></ref-volisspag></ref-info><ref-fulltext>Slivnik, B., LL conflict resolution using the embedded left LR parser. Comput Sci Inf Syst 9:3 (2012), 1105–1124.</ref-fulltext></reference><reference id="12"><ref-info><ref-title><ref-titletext>Yacc is dead</ref-titletext></ref-title><refd-itemidlist><itemid idtype="FRAGMENTID">bib0012</itemid><itemid idtype="SGR">83155194265</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>M.</ce:initials><ce:indexed-name>Might M.</ce:indexed-name><ce:surname>Might</ce:surname></author><author seq="2"><ce:initials>D.</ce:initials><ce:indexed-name>Darais D.</ce:indexed-name><ce:surname>Darais</ce:surname></author></ref-authors><ref-publicationyear first="2010"/><ref-text>1010.5023. Available online at Cornell University Library archive (arXiv.org:)</ref-text></ref-info><ref-fulltext>Might, M., Darais, D., Yacc is dead. 2010 Available online at Cornell University Library archive (arXiv.org: 1010.5023).</ref-fulltext></reference><reference id="13"><ref-info><ref-title><ref-titletext>Adaptive LL(*) parsing: the power of dynamic analysis</ref-titletext></ref-title><refd-itemidlist><itemid idtype="FRAGMENTID">bib0013</itemid><itemid idtype="SGR">84908273742</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>T.</ce:initials><ce:indexed-name>Parr T.</ce:indexed-name><ce:surname>Parr</ce:surname></author><author seq="2"><ce:initials>S.</ce:initials><ce:indexed-name>Harwell S.</ce:indexed-name><ce:surname>Harwell</ce:surname></author><author seq="3"><ce:initials>K.</ce:initials><ce:indexed-name>Fischer K.</ce:indexed-name><ce:surname>Fischer</ce:surname></author></ref-authors><ref-sourcetitle>Proceedings of the 2014 ACM SIGPLAN international conference on object-oriented programming systems languages and applications (OOPSLA’14)</ref-sourcetitle><ref-publicationyear first="2014"/><ref-volisspag><voliss volume="579-598"/></ref-volisspag><ref-text>ACM ACM, Portland, OR, USA</ref-text></ref-info><ref-fulltext>Parr, T., Harwell, S., Fischer, K., Adaptive LL(*) parsing: the power of dynamic analysis. Proceedings of the 2014 ACM SIGPLAN international conference on object-oriented programming systems languages and applications (OOPSLA’14), vol. 579–598, 2014, ACM, ACM, Portland, OR, USA.</ref-fulltext></reference><reference id="14"><ref-info><ref-title><ref-titletext>The output-store formal translator directed by LR parsing</ref-titletext></ref-title><refd-itemidlist><itemid idtype="FRAGMENTID">bib0014</itemid><itemid idtype="SGR">21944435389</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>J.</ce:initials><ce:indexed-name>Janousek J.</ce:indexed-name><ce:surname>Janoušek</ce:surname></author><author seq="2"><ce:initials>B.</ce:initials><ce:indexed-name>Melichar B.</ce:indexed-name><ce:surname>Melichar</ce:surname></author></ref-authors><ref-sourcetitle>SOFSEM’97: theory and practice of informatics; vol. 1338 of lecture notes in computer science</ref-sourcetitle><ref-publicationyear first="1997"/><ref-volisspag><pagerange first="432" last="439"/></ref-volisspag><ref-text>Milovy, Czech Republic</ref-text></ref-info><ref-fulltext>Janoušek, J., Melichar, B., The output-store formal translator directed by LR parsing. SOFSEM’97: theory and practice of informatics; vol. 1338 of lecture notes in computer science, 1997, Milovy, Czech Republic, 432–439.</ref-fulltext></reference><reference id="15"><ref-info><ref-title><ref-titletext>LLLR parsing</ref-titletext></ref-title><refd-itemidlist><itemid idtype="FRAGMENTID">bib0015</itemid><itemid idtype="SGR">84877939408</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>B.</ce:initials><ce:indexed-name>Slivnik B.</ce:indexed-name><ce:surname>Slivnik</ce:surname></author></ref-authors><ref-sourcetitle>Proceedings of the twenty-eighth annual ACM symposium on applied computing (SAC’13)</ref-sourcetitle><ref-publicationyear first="2013"/><ref-volisspag><pagerange first="1698" last="1699"/></ref-volisspag><ref-text>ACM Coimbra, Portugal</ref-text></ref-info><ref-fulltext>Slivnik, B., LLLR parsing. Proceedings of the twenty-eighth annual ACM symposium on applied computing (SAC’13), 2013, ACM, Coimbra, Portugal, 1698–1699.</ref-fulltext></reference><reference id="16"><ref-info><ref-title><ref-titletext>Formal ambiguity-resolving syntax definition with asserted shift reduce sets</ref-titletext></ref-title><refd-itemidlist><itemid idtype="FRAGMENTID">bib0016</itemid><itemid idtype="SGR">84928315922</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>G.</ce:initials><ce:indexed-name>Jaberipur G.</ce:indexed-name><ce:surname>Jaberipur</ce:surname></author><author seq="2"><ce:initials>M.</ce:initials><ce:indexed-name>Dorrigiv M.</ce:indexed-name><ce:surname>Dorrigiv</ce:surname></author></ref-authors><ref-sourcetitle>Scientia Iranica D</ref-sourcetitle><ref-publicationyear first="2013"/><ref-volisspag><voliss volume="20" issue="6"/><pagerange first="1939" last="1952"/></ref-volisspag></ref-info><ref-fulltext>Jaberipur, G., Dorrigiv, M., Formal ambiguity-resolving syntax definition with asserted shift reduce sets. Scientia Iranica D 20:6 (2013), 1939–1952.</ref-fulltext></reference><reference id="17"><ref-info><ref-title><ref-titletext>Parsing theory, volume i: languages and parsing</ref-titletext></ref-title><refd-itemidlist><itemid idtype="FRAGMENTID">bib0017</itemid><itemid idtype="SGR">0038910769</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>S.</ce:initials><ce:indexed-name>Sippu S.</ce:indexed-name><ce:surname>Sippu</ce:surname></author><author seq="2"><ce:initials>E.</ce:initials><ce:indexed-name>Soisalon-Soininen E.</ce:indexed-name><ce:surname>Soisalon-Soininen</ce:surname></author></ref-authors><ref-sourcetitle>EATCS monographs on theoretical computer science</ref-sourcetitle><ref-publicationyear first="1988"/><ref-volisspag><voliss volume="15"/></ref-volisspag><ref-text>Springer-Verlag Berlin, Germany</ref-text></ref-info><ref-fulltext>Sippu, S., Soisalon-Soininen, E., Parsing theory, volume i: languages and parsing. EATCS monographs on theoretical computer science, vol. 15, 1988, Springer-Verlag, Berlin, Germany.</ref-fulltext></reference><reference id="18"><ref-info><ref-title><ref-titletext>Parsing theory, volume II: LR(k) and LL(k) parsing</ref-titletext></ref-title><refd-itemidlist><itemid idtype="FRAGMENTID">bib0018</itemid><itemid idtype="SGR">0003571179</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>S.</ce:initials><ce:indexed-name>Sippu S.</ce:indexed-name><ce:surname>Sippu</ce:surname></author><author seq="2"><ce:initials>E.</ce:initials><ce:indexed-name>Soisalon-Soininen E.</ce:indexed-name><ce:surname>Soisalon-Soininen</ce:surname></author></ref-authors><ref-sourcetitle>EATCS monographs on theoretical computer science</ref-sourcetitle><ref-publicationyear first="1990"/><ref-volisspag><voliss volume="20"/></ref-volisspag><ref-text>Springer-Verlag Berlin, Germany</ref-text></ref-info><ref-fulltext>Sippu, S., Soisalon-Soininen, E., Parsing theory, volume II: LR(k) and LL(k) parsing. EATCS monographs on theoretical computer science, vol. 20, 1990, Springer-Verlag, Berlin, Germany.</ref-fulltext></reference><reference id="19"><ref-info><ref-title><ref-titletext>The theory of parsing, translation and compiling</ref-titletext></ref-title><refd-itemidlist><itemid idtype="FRAGMENTID">bib0019</itemid><itemid idtype="SGR">0003791899</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>A.V.</ce:initials><ce:indexed-name>Aho A.V.</ce:indexed-name><ce:surname>Aho</ce:surname></author><author seq="2"><ce:initials>J.D.</ce:initials><ce:indexed-name>Ullman J.D.</ce:indexed-name><ce:surname>Ullman</ce:surname></author></ref-authors><ref-publicationyear first="1972"/><ref-volisspag><voliss volume="1"/></ref-volisspag><ref-text>parsing Prentice-Hall Englewood Cliffs, N.J., USA</ref-text></ref-info><ref-fulltext>Aho, A.V., Ullman, J.D., The theory of parsing, translation and compiling. vol. I: parsing, 1972, Prentice-Hall, Englewood Cliffs, N.J., USA.</ref-fulltext></reference><reference id="20"><ref-info><ref-title><ref-titletext>The theory of parsing, translation and compiling</ref-titletext></ref-title><refd-itemidlist><itemid idtype="FRAGMENTID">bib0020</itemid><itemid idtype="SGR">0003791899</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>A.V.</ce:initials><ce:indexed-name>Aho A.V.</ce:indexed-name><ce:surname>Aho</ce:surname></author><author seq="2"><ce:initials>J.D.</ce:initials><ce:indexed-name>Ullman J.D.</ce:indexed-name><ce:surname>Ullman</ce:surname></author></ref-authors><ref-publicationyear first="1973"/><ref-volisspag><voliss volume="2"/></ref-volisspag><ref-text>Prentice-Hall Englewood Cliffs, N.J., USA compiling</ref-text></ref-info><ref-fulltext>Aho, A.V., Ullman, J.D., The theory of parsing, translation and compiling. vol. II: compiling, 1973, Prentice-Hall, Englewood Cliffs, N.J., USA.</ref-fulltext></reference><reference id="21"><ref-info><ref-title><ref-titletext>Semantic routines and LR(k) parsers</ref-titletext></ref-title><refd-itemidlist><itemid idtype="FRAGMENTID">bib0021</itemid><itemid idtype="SGR">0000896497</itemid></refd-itemidlist><ref-authors><author seq="1"><ce:initials>P.</ce:initials><ce:indexed-name>Purdom P.</ce:indexed-name><ce:surname>Purdom</ce:surname></author><author seq="2"><ce:initials>C.A.</ce:initials><ce:indexed-name>Brown C.A.</ce:indexed-name><ce:surname>Brown</ce:surname></author></ref-authors><ref-sourcetitle>Acta Informatica</ref-sourcetitle><ref-publicationyear first="1980"/><ref-volisspag><voliss volume="14" issue="4"/><pagerange first="299" last="315"/></ref-volisspag></ref-info><ref-fulltext>Purdom, P., Brown, C.A., Semantic routines and LR(k) parsers. Acta Informatica 14:4 (1980), 299–315.</ref-fulltext></reference></bibliography></tail></bibrecord></item></abstracts-retrieval-response>